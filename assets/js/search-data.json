{"0": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": "Frequently Asked Questions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#faq",
    "relUrl": "/FAQ.html#faq"
  },"1": {
    "doc": "F.A.Q",
    "title": "Q: I get “Ensure condition failed: InDependenciesCrc.IsValid()” when caching/uncaching PCGEx nodes!",
    "content": "Yes. It’s ok, you can ignore these. PCG isn’t natively architectured to support node that switch between cacheable/not-cacheable, which sometime generates failed checks. It’s annoying but is harmless. The benefits of switching caching mode outweights the assert in my opinion – if that bugs you, don’t touch to the checkbox, it’s generally safer not to ship with cached data anyway. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes",
    "relUrl": "/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes"
  },"2": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html",
    "relUrl": "/FAQ.html"
  },"3": {
    "doc": "About",
    "title": "I’m Tim!",
    "content": "I made this. Follow @Nebukam . I made PCGEx as a way to bring some my personal Houdini toolkit into Unreal, and figured it could be useful to my fellow artists and designers. I love my current workflow &amp; tools when it comes to procedural generation, and often needed ways to generate data &amp; structures to… well, generate more data and structures to spawn stuff on. Unreal PCG has powerful tools to generate and work with splines, but unless you’re making them by hand, spline are a pain to manipulate and maintain at scale – that’s the main reason why I wanted to have tools to create graph and pathfinding them. Turns out, it’s useful for plenty of other things :) . Special Thanks . Massive kudo to MikeC, who has been an early adopter, and whose feedback and suggestions tremendously helped make PCGEx a better and more useful tool &lt;3 Also thanks to Sinbad, as I shamelessly pasted some of his C++ formatting and practices for this documentation ^_^ . Source code . PCGEx is licensed under MIT : if you want to look at the code, or if you’re worried it could hurt your machine, the code is available in full on github. It does not rely on nor embbed any third party library/dlls. Bugs! . If you encounter a bug, please fill an issue here. Please provide as much information as you can (stack traces, node setup, …). Footnotes . | I am not affiliated with Unreal! | Delaunay/Voronoi adapted from the excellent Scrawk’ Hull-Delaunay-Voronoi repo | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/#im-tim",
    "relUrl": "/about/#im-tim"
  },"4": {
    "doc": "About",
    "title": "About",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/",
    "relUrl": "/about/"
  },"5": {
    "doc": "All Nodes",
    "title": "Graphs",
    "content": "Delaunay, Voronoi, Convex Hulls, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#graphs",
    "relUrl": "/nodes/all-nodes.html#graphs"
  },"6": {
    "doc": "All Nodes",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#convex-hull-3d",
    "relUrl": "/nodes/all-nodes.html#convex-hull-3d"
  },"7": {
    "doc": "All Nodes",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#delaunay-3d",
    "relUrl": "/nodes/all-nodes.html#delaunay-3d"
  },"8": {
    "doc": "All Nodes",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#voronoi-3d",
    "relUrl": "/nodes/all-nodes.html#voronoi-3d"
  },"9": {
    "doc": "All Nodes",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#convex-hull-2d",
    "relUrl": "/nodes/all-nodes.html#convex-hull-2d"
  },"10": {
    "doc": "All Nodes",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#delaunay-2d",
    "relUrl": "/nodes/all-nodes.html#delaunay-2d"
  },"11": {
    "doc": "All Nodes",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#voronoi-2d",
    "relUrl": "/nodes/all-nodes.html#voronoi-2d"
  },"12": {
    "doc": "All Nodes",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sanitize-clusters",
    "relUrl": "/nodes/all-nodes.html#sanitize-clusters"
  },"13": {
    "doc": "All Nodes",
    "title": "Edges",
    "content": "Refinemement, connections, intersections, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#edges",
    "relUrl": "/nodes/all-nodes.html#edges"
  },"14": {
    "doc": "All Nodes",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#bridge-clusters",
    "relUrl": "/nodes/all-nodes.html#bridge-clusters"
  },"15": {
    "doc": "All Nodes",
    "title": "Refine",
    "content": "Refine edges configuration of a graph (i.e MST) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#refine",
    "relUrl": "/nodes/all-nodes.html#refine"
  },"16": {
    "doc": "All Nodes",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#relax",
    "relUrl": "/nodes/all-nodes.html#relax"
  },"17": {
    "doc": "All Nodes",
    "title": "Write Extras",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#write-extras",
    "relUrl": "/nodes/all-nodes.html#write-extras"
  },"18": {
    "doc": "All Nodes",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#prune-by-length",
    "relUrl": "/nodes/all-nodes.html#prune-by-length"
  },"19": {
    "doc": "All Nodes",
    "title": "Find Intersections",
    "content": "Find and registers edges intersections inside a cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#find-intersections",
    "relUrl": "/nodes/all-nodes.html#find-intersections"
  },"20": {
    "doc": "All Nodes",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#draw-edges",
    "relUrl": "/nodes/all-nodes.html#draw-edges"
  },"21": {
    "doc": "All Nodes",
    "title": "Pathfinders",
    "content": "Seed(s)-to-goal(s), Plots, Navmesh, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#pathfinders",
    "relUrl": "/nodes/all-nodes.html#pathfinders"
  },"22": {
    "doc": "All Nodes",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#edges-pathfinding",
    "relUrl": "/nodes/all-nodes.html#edges-pathfinding"
  },"23": {
    "doc": "All Nodes",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#plot-edges-pathfinding",
    "relUrl": "/nodes/all-nodes.html#plot-edges-pathfinding"
  },"24": {
    "doc": "All Nodes",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#navmesh-pathfinding",
    "relUrl": "/nodes/all-nodes.html#navmesh-pathfinding"
  },"25": {
    "doc": "All Nodes",
    "title": "Plot Navmesh Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#plot-navmesh-pathfinding",
    "relUrl": "/nodes/all-nodes.html#plot-navmesh-pathfinding"
  },"26": {
    "doc": "All Nodes",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sampling",
    "relUrl": "/nodes/all-nodes.html#sampling"
  },"27": {
    "doc": "All Nodes",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sample-nearest-surface",
    "relUrl": "/nodes/all-nodes.html#sample-nearest-surface"
  },"28": {
    "doc": "All Nodes",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#guided-trace",
    "relUrl": "/nodes/all-nodes.html#guided-trace"
  },"29": {
    "doc": "All Nodes",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sample-nearest-polyline",
    "relUrl": "/nodes/all-nodes.html#sample-nearest-polyline"
  },"30": {
    "doc": "All Nodes",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sample-nearest-points",
    "relUrl": "/nodes/all-nodes.html#sample-nearest-points"
  },"31": {
    "doc": "All Nodes",
    "title": "Misc",
    "content": "Sort, Partition, Fuse, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#misc",
    "relUrl": "/nodes/all-nodes.html#misc"
  },"32": {
    "doc": "All Nodes",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#sort-points",
    "relUrl": "/nodes/all-nodes.html#sort-points"
  },"33": {
    "doc": "All Nodes",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#partition-by-values",
    "relUrl": "/nodes/all-nodes.html#partition-by-values"
  },"34": {
    "doc": "All Nodes",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#fuse-points",
    "relUrl": "/nodes/all-nodes.html#fuse-points"
  },"35": {
    "doc": "All Nodes",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#draw-attributes",
    "relUrl": "/nodes/all-nodes.html#draw-attributes"
  },"36": {
    "doc": "All Nodes",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#points-to-bounds",
    "relUrl": "/nodes/all-nodes.html#points-to-bounds"
  },"37": {
    "doc": "All Nodes",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their size. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#discard-points-by-count",
    "relUrl": "/nodes/all-nodes.html#discard-points-by-count"
  },"38": {
    "doc": "All Nodes",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#write-index",
    "relUrl": "/nodes/all-nodes.html#write-index"
  },"39": {
    "doc": "All Nodes",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#flush-debug",
    "relUrl": "/nodes/all-nodes.html#flush-debug"
  },"40": {
    "doc": "All Nodes",
    "title": "Paths",
    "content": "Smooth, orient, tangents, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#paths",
    "relUrl": "/nodes/all-nodes.html#paths"
  },"41": {
    "doc": "All Nodes",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#smooth",
    "relUrl": "/nodes/all-nodes.html#smooth"
  },"42": {
    "doc": "All Nodes",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#orient",
    "relUrl": "/nodes/all-nodes.html#orient"
  },"43": {
    "doc": "All Nodes",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#fuse-collinear",
    "relUrl": "/nodes/all-nodes.html#fuse-collinear"
  },"44": {
    "doc": "All Nodes",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#subdivide",
    "relUrl": "/nodes/all-nodes.html#subdivide"
  },"45": {
    "doc": "All Nodes",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#write-tangents",
    "relUrl": "/nodes/all-nodes.html#write-tangents"
  },"46": {
    "doc": "All Nodes",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#paths-to-edge-clusters",
    "relUrl": "/nodes/all-nodes.html#paths-to-edge-clusters"
  },"47": {
    "doc": "All Nodes",
    "title": "Custom Graphs",
    "content": "Custom graph creation from user-defined rules . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#custom-graphs",
    "relUrl": "/nodes/all-nodes.html#custom-graphs"
  },"48": {
    "doc": "All Nodes",
    "title": "Create Params",
    "content": "Create params to build a custom graph from. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#create-params",
    "relUrl": "/nodes/all-nodes.html#create-params"
  },"49": {
    "doc": "All Nodes",
    "title": "Build",
    "content": "Build a custom graph from a one or multiple params. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#build",
    "relUrl": "/nodes/all-nodes.html#build"
  },"50": {
    "doc": "All Nodes",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#find-edge-clusters",
    "relUrl": "/nodes/all-nodes.html#find-edge-clusters"
  },"51": {
    "doc": "All Nodes",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph generated edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#draw-custom-graph",
    "relUrl": "/nodes/all-nodes.html#draw-custom-graph"
  },"52": {
    "doc": "All Nodes",
    "title": "Consolidate",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#consolidate",
    "relUrl": "/nodes/all-nodes.html#consolidate"
  },"53": {
    "doc": "All Nodes",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#delete",
    "relUrl": "/nodes/all-nodes.html#delete"
  },"54": {
    "doc": "All Nodes",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#promote-edges",
    "relUrl": "/nodes/all-nodes.html#promote-edges"
  },"55": {
    "doc": "All Nodes",
    "title": "Custom Graph Data",
    "content": "Custom graph data object. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html#custom-graph-data",
    "relUrl": "/nodes/all-nodes.html#custom-graph-data"
  },"56": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/all-nodes.html",
    "relUrl": "/nodes/all-nodes.html"
  },"57": {
    "doc": "All Pathfinding Modules",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#goal-pickers",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#goal-pickers"
  },"58": {
    "doc": "All Pathfinding Modules",
    "title": "Default",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#default",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#default"
  },"59": {
    "doc": "All Pathfinding Modules",
    "title": "Random",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#random",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#random"
  },"60": {
    "doc": "All Pathfinding Modules",
    "title": "Goal from Attribute",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#goal-from-attribute",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#goal-from-attribute"
  },"61": {
    "doc": "All Pathfinding Modules",
    "title": "Search",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#search",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#search"
  },"62": {
    "doc": "All Pathfinding Modules",
    "title": "Djikstra",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#djikstra",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#djikstra"
  },"63": {
    "doc": "All Pathfinding Modules",
    "title": "A* Star",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#a-star",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#a-star"
  },"64": {
    "doc": "All Pathfinding Modules",
    "title": "Heuristics",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#heuristics",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#heuristics"
  },"65": {
    "doc": "All Pathfinding Modules",
    "title": "Heuristic Modifiers",
    "content": "How to use heuristic modifiers . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#heuristic-modifiers",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#heuristic-modifiers"
  },"66": {
    "doc": "All Pathfinding Modules",
    "title": "Modifiers Only",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#modifiers-only",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#modifiers-only"
  },"67": {
    "doc": "All Pathfinding Modules",
    "title": "Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#shortest-distance",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#shortest-distance"
  },"68": {
    "doc": "All Pathfinding Modules",
    "title": "Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#direction",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#direction"
  },"69": {
    "doc": "All Pathfinding Modules",
    "title": "Local Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#local-distance",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#local-distance"
  },"70": {
    "doc": "All Pathfinding Modules",
    "title": "Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html#least-nodes",
    "relUrl": "/pathfinding/all-pathfinding-modules.html#least-nodes"
  },"71": {
    "doc": "All Pathfinding Modules",
    "title": "All Pathfinding Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/all-pathfinding-modules.html",
    "relUrl": "/pathfinding/all-pathfinding-modules.html"
  },"72": {
    "doc": "Inherit Last",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-inherit-end.html#inherit-last",
    "relUrl": "/docs/blending/blending-inherit-end.html#inherit-last"
  },"73": {
    "doc": "Inherit Last",
    "title": "Inherit Last",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-inherit-end.html",
    "relUrl": "/docs/blending/blending-inherit-end.html"
  },"74": {
    "doc": "Inherit First",
    "title": "Inherit First",
    "content": "Copy the first point’ values . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-inherit-start.html#inherit-first",
    "relUrl": "/docs/blending/blending-inherit-start.html#inherit-first"
  },"75": {
    "doc": "Inherit First",
    "title": "Inherit First",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-inherit-start.html",
    "relUrl": "/docs/blending/blending-inherit-start.html"
  },"76": {
    "doc": "Interpolate",
    "title": "Interpolate",
    "content": "Subtitle . Interpolate values between first and last point . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-interpolate.html#interpolate",
    "relUrl": "/docs/blending/blending-interpolate.html#interpolate"
  },"77": {
    "doc": "Interpolate",
    "title": "Interpolate",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/blending-interpolate.html",
    "relUrl": "/docs/blending/blending-interpolate.html"
  },"78": {
    "doc": "Build",
    "title": "Build",
    "content": "Build a custom graph from a one or multiple params. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-build.html#build",
    "relUrl": "/nodes/custom-graph/custom-graph-build.html#build"
  },"79": {
    "doc": "Build",
    "title": "Build",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-build.html",
    "relUrl": "/nodes/custom-graph/custom-graph-build.html"
  },"80": {
    "doc": "Consolidate",
    "title": "Consolidate",
    "content": "Rebuild a custom graph after editing. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-consolidate.html#consolidate",
    "relUrl": "/nodes/custom-graph/custom-graph-consolidate.html#consolidate"
  },"81": {
    "doc": "Consolidate",
    "title": "Consolidate",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-consolidate.html",
    "relUrl": "/nodes/custom-graph/custom-graph-consolidate.html"
  },"82": {
    "doc": "Create Params",
    "title": "Create Params",
    "content": "Create params to build a custom graph from. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-create-params.html#create-params",
    "relUrl": "/nodes/custom-graph/custom-graph-create-params.html#create-params"
  },"83": {
    "doc": "Create Params",
    "title": "Create Params",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-create-params.html",
    "relUrl": "/nodes/custom-graph/custom-graph-create-params.html"
  },"84": {
    "doc": "Custom Graph Data",
    "title": "Custom Graph Data",
    "content": "Custom graph data object. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-data.html#custom-graph-data",
    "relUrl": "/nodes/custom-graph/custom-graph-data.html#custom-graph-data"
  },"85": {
    "doc": "Custom Graph Data",
    "title": "Custom Graph Data",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-data.html",
    "relUrl": "/nodes/custom-graph/custom-graph-data.html"
  },"86": {
    "doc": "Delete",
    "title": "Delete",
    "content": "Delete custom graph attributes. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-delete.html#delete",
    "relUrl": "/nodes/custom-graph/custom-graph-delete.html#delete"
  },"87": {
    "doc": "Delete",
    "title": "Delete",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-delete.html",
    "relUrl": "/nodes/custom-graph/custom-graph-delete.html"
  },"88": {
    "doc": "Draw Custom Graph",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph generated edges. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-draw.html#draw-custom-graph",
    "relUrl": "/nodes/custom-graph/custom-graph-draw.html#draw-custom-graph"
  },"89": {
    "doc": "Draw Custom Graph",
    "title": "Draw Custom Graph",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-draw.html",
    "relUrl": "/nodes/custom-graph/custom-graph-draw.html"
  },"90": {
    "doc": "Find Edge Clusters",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-find-edge-clusters.html#find-edge-clusters",
    "relUrl": "/nodes/custom-graph/custom-graph-find-edge-clusters.html#find-edge-clusters"
  },"91": {
    "doc": "Find Edge Clusters",
    "title": "Find Edge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-find-edge-clusters.html",
    "relUrl": "/nodes/custom-graph/custom-graph-find-edge-clusters.html"
  },"92": {
    "doc": "Promote Edges",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. … . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-promote-edges.html#promote-edges",
    "relUrl": "/nodes/custom-graph/custom-graph-promote-edges.html#promote-edges"
  },"93": {
    "doc": "Promote Edges",
    "title": "Promote Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/custom-graph-promote-edges.html",
    "relUrl": "/nodes/custom-graph/custom-graph-promote-edges.html"
  },"94": {
    "doc": "Debug",
    "title": "Debug",
    "content": "Working with PCGEx Debug nodes . Need-to-know stuff regarding internal visual debugging tools available in PCGEx. | Visual Debugging | Debugging inside subgraphs | Available debug nodes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/debug.html#debug",
    "relUrl": "/docs/debug.html#debug"
  },"95": {
    "doc": "Debug",
    "title": "Visual Debugging",
    "content": "PCGEx Debug node draw debug information flagged as persistent, and as such needs to be flushed. However, there is currently no way in Unreal to selectively flush or tag debug line – hence they needs to be flushed before they are redrawn (Or thousands of thousands of line willl stack and bring the editor to its knees). This means you need to use Flush Debug in your flow before using other PCGEx’ debug nodes. The Flush Debug is basically there to manage execution order and ensure stuffs aren’t flushed from the buffer right after they’re drawn. It’s non-intrusive, and sometimes needs an update or two to work right. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/debug.html#visual-debugging",
    "relUrl": "/docs/debug.html#visual-debugging"
  },"96": {
    "doc": "Debug",
    "title": "Debugging inside subgraphs",
    "content": ". When disabled, the input data of a node becomes a simple passthrough. The PCGExDebug property in the Debug details of the node is overridable and basically allows you to remotely disable the PCGEx debug nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/debug.html#debugging-inside-subgraphs",
    "relUrl": "/docs/debug.html#debugging-inside-subgraphs"
  },"97": {
    "doc": "Debug",
    "title": "Available debug nodes",
    "content": "At the time of writing, there are three main debug nodes: . | Draw Attributes | Draw Edges | Draw Custom Graph | . Draw Edges and Draw Custom Graph are specific to Edges &amp; Custom Graph, however Draw Attributes is designed to work with any input. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/debug.html#available-debug-nodes",
    "relUrl": "/docs/debug.html#available-debug-nodes"
  },"98": {
    "doc": "Debug",
    "title": "Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/debug.html",
    "relUrl": "/docs/debug.html"
  },"99": {
    "doc": "Bridge Clusters",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. Table of content . | Properties | Bridge Methods . | Delaunay | Least Edges | Most Edges | . | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-bridge-clusters.html#bridge-clusters",
    "relUrl": "/nodes/edges/edges-bridge-clusters.html#bridge-clusters"
  },"100": {
    "doc": "Bridge Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | Bridge Method | The method that will be used to identify and create bridges between clusters. | . Note that no matter what method is selected, a bridge will always connect the two closest points between two clusters. The chosen method only drives which cluster is connected to which other cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-bridge-clusters.html#properties",
    "relUrl": "/nodes/edges/edges-bridge-clusters.html#properties"
  },"101": {
    "doc": "Bridge Clusters",
    "title": "Bridge Methods",
    "content": "Delaunay . When using this method, each cluster is abstracted into a single bounding box that encapsulates all its vertices. A 3D Delaunay is generated using each bounding box center as an input, and the resulting delaunay edges are used as bridges. This is usually the preferred method as it yields more organic results. Least Edges . When using this method, the algorithm will generate the least possible amount of bridge in order to connect all the clusters together. Most Edges . When using this method, the algorithm will create a bridge from each cluster to every other cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-bridge-clusters.html#bridge-methods",
    "relUrl": "/nodes/edges/edges-bridge-clusters.html#bridge-methods"
  },"102": {
    "doc": "Bridge Clusters",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-bridge-clusters.html#usage",
    "relUrl": "/nodes/edges/edges-bridge-clusters.html#usage"
  },"103": {
    "doc": "Bridge Clusters",
    "title": "Bridge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-bridge-clusters.html",
    "relUrl": "/nodes/edges/edges-bridge-clusters.html"
  },"104": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-draw.html#draw-edges",
    "relUrl": "/nodes/edges/edges-draw.html#draw-edges"
  },"105": {
    "doc": "Draw Edges",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-draw.html#properties",
    "relUrl": "/nodes/edges/edges-draw.html#properties"
  },"106": {
    "doc": "Draw Edges",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-draw.html#usage",
    "relUrl": "/nodes/edges/edges-draw.html#usage"
  },"107": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-draw.html",
    "relUrl": "/nodes/edges/edges-draw.html"
  },"108": {
    "doc": "Find Intersections",
    "title": "Find Intersections  ",
    "content": "Find and registers edges intersections inside a cluster. W.I.P Node – Not available yet. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-find-intersections.html#find-intersections--",
    "relUrl": "/nodes/edges/edges-find-intersections.html#find-intersections--"
  },"109": {
    "doc": "Find Intersections",
    "title": "Find Intersections",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-find-intersections.html",
    "relUrl": "/nodes/edges/edges-find-intersections.html"
  },"110": {
    "doc": "Prune by Length",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-prune-by-length.html#prune-by-length",
    "relUrl": "/nodes/edges/edges-prune-by-length.html#prune-by-length"
  },"111": {
    "doc": "Prune by Length",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-prune-by-length.html#properties",
    "relUrl": "/nodes/edges/edges-prune-by-length.html#properties"
  },"112": {
    "doc": "Prune by Length",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-prune-by-length.html#usage",
    "relUrl": "/nodes/edges/edges-prune-by-length.html#usage"
  },"113": {
    "doc": "Prune by Length",
    "title": "Prune by Length",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-prune-by-length.html",
    "relUrl": "/nodes/edges/edges-prune-by-length.html"
  },"114": {
    "doc": "Refine",
    "title": "Refine",
    "content": "Refine edges configuration of a graph (i.e MST) . Table of content . | Properties | Refining | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html#refine",
    "relUrl": "/nodes/edges/edges-refine.html#refine"
  },"115": {
    "doc": "Refine",
    "title": "Properties",
    "content": ". //Refining . | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html#properties",
    "relUrl": "/nodes/edges/edges-refine.html#properties"
  },"116": {
    "doc": "Refine",
    "title": "Refining",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html#refining",
    "relUrl": "/nodes/edges/edges-refine.html#refining"
  },"117": {
    "doc": "Refine",
    "title": "Minimum Spanning Tree",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html#minimum-spanning-tree",
    "relUrl": "/nodes/edges/edges-refine.html#minimum-spanning-tree"
  },"118": {
    "doc": "Refine",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html#usage",
    "relUrl": "/nodes/edges/edges-refine.html#usage"
  },"119": {
    "doc": "Refine",
    "title": "Refine",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-refine.html",
    "relUrl": "/nodes/edges/edges-refine.html"
  },"120": {
    "doc": "Relax",
    "title": "Relax",
    "content": "Relax points positions of a graph. Table of content . | Properties | Refining | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#relax",
    "relUrl": "/nodes/edges/edges-relax.html#relax"
  },"121": {
    "doc": "Relax",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#properties",
    "relUrl": "/nodes/edges/edges-relax.html#properties"
  },"122": {
    "doc": "Relax",
    "title": "Refining",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#refining",
    "relUrl": "/nodes/edges/edges-relax.html#refining"
  },"123": {
    "doc": "Relax",
    "title": "Laplacian",
    "content": "Laplacian / Poisson relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#laplacian",
    "relUrl": "/nodes/edges/edges-relax.html#laplacian"
  },"124": {
    "doc": "Relax",
    "title": "Force Directed",
    "content": "Force-directed relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#force-directed",
    "relUrl": "/nodes/edges/edges-relax.html#force-directed"
  },"125": {
    "doc": "Relax",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html#usage",
    "relUrl": "/nodes/edges/edges-relax.html#usage"
  },"126": {
    "doc": "Relax",
    "title": "Relax",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-relax.html",
    "relUrl": "/nodes/edges/edges-relax.html"
  },"127": {
    "doc": "Write Extras",
    "title": "Write Extras",
    "content": "Subtitle . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-write-extras.html#write-extras",
    "relUrl": "/nodes/edges/edges-write-extras.html#write-extras"
  },"128": {
    "doc": "Write Extras",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-write-extras.html#properties",
    "relUrl": "/nodes/edges/edges-write-extras.html#properties"
  },"129": {
    "doc": "Write Extras",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-write-extras.html#usage",
    "relUrl": "/nodes/edges/edges-write-extras.html#usage"
  },"130": {
    "doc": "Write Extras",
    "title": "Write Extras",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/edges-write-extras.html",
    "relUrl": "/nodes/edges/edges-write-extras.html"
  },"131": {
    "doc": "Finding Nodes",
    "title": "Finding Nodes",
    "content": "Where and how to find nodes once in Unreal . Once the plugin is installed and compiled, nodes are available in any PCG Graph along with vanilla nodes. You can either find them in the explorer on the left, or in the list when right-clicking any empty space in the graph. All PCGEx nodes are prefixed with PCGEx | – which is a bit annoying at first, but quickly comes in handy to ensure nodes are clearly identifiable. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/finding-nodes.html#finding-nodes",
    "relUrl": "/installation/finding-nodes.html#finding-nodes"
  },"132": {
    "doc": "Finding Nodes",
    "title": "Finding Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/finding-nodes.html",
    "relUrl": "/installation/finding-nodes.html"
  },"133": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D  ",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. Table of content . | Properties | Projection Settings | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-2d.html#convex-hull-2d--",
    "relUrl": "/nodes/graphs/graphs-convex-hull-2d.html#convex-hull-2d--"
  },"134": {
    "doc": "Convex Hull 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Prune Points | If enabled, Vtx that aren’t part of the hull are pruned from the output. | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#projection-settings) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). layout: page title: Projection Settings has_children: false nav_exclude: true — . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-2d.html#properties",
    "relUrl": "/nodes/graphs/graphs-convex-hull-2d.html#properties"
  },"135": {
    "doc": "Convex Hull 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, when relevant. | Property | Description | . | Project Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-2d.html#projection-settings",
    "relUrl": "/nodes/graphs/graphs-convex-hull-2d.html#projection-settings"
  },"136": {
    "doc": "Convex Hull 2D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-2d.html#usage",
    "relUrl": "/nodes/graphs/graphs-convex-hull-2d.html#usage"
  },"137": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-2d.html",
    "relUrl": "/nodes/graphs/graphs-convex-hull-2d.html"
  },"138": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-3d.html#convex-hull-3d",
    "relUrl": "/nodes/graphs/graphs-convex-hull-3d.html#convex-hull-3d"
  },"139": {
    "doc": "Convex Hull 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Prune Points | If enabled, Vtx that aren’t part of the hull are pruned from the output. | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-3d.html#properties",
    "relUrl": "/nodes/graphs/graphs-convex-hull-3d.html#properties"
  },"140": {
    "doc": "Convex Hull 3D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-3d.html#usage",
    "relUrl": "/nodes/graphs/graphs-convex-hull-3d.html#usage"
  },"141": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-convex-hull-3d.html",
    "relUrl": "/nodes/graphs/graphs-convex-hull-3d.html"
  },"142": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D  ",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. Table of content . | Properties | Projection Settings | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-2d.html#delaunay-2d--",
    "relUrl": "/nodes/graphs/graphs-delaunay-2d.html#delaunay-2d--"
  },"143": {
    "doc": "Delaunay 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| |   | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#projection-settings) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). layout: page title: Projection Settings has_children: false nav_exclude: true — . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-2d.html#properties",
    "relUrl": "/nodes/graphs/graphs-delaunay-2d.html#properties"
  },"144": {
    "doc": "Delaunay 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, when relevant. | Property | Description | . | Project Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-2d.html#projection-settings",
    "relUrl": "/nodes/graphs/graphs-delaunay-2d.html#projection-settings"
  },"145": {
    "doc": "Delaunay 2D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-2d.html#usage",
    "relUrl": "/nodes/graphs/graphs-delaunay-2d.html#usage"
  },"146": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-2d.html",
    "relUrl": "/nodes/graphs/graphs-delaunay-2d.html"
  },"147": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-3d.html#delaunay-3d",
    "relUrl": "/nodes/graphs/graphs-delaunay-3d.html#delaunay-3d"
  },"148": {
    "doc": "Delaunay 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| |   | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-3d.html#properties",
    "relUrl": "/nodes/graphs/graphs-delaunay-3d.html#properties"
  },"149": {
    "doc": "Delaunay 3D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-3d.html#usage",
    "relUrl": "/nodes/graphs/graphs-delaunay-3d.html#usage"
  },"150": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-delaunay-3d.html",
    "relUrl": "/nodes/graphs/graphs-delaunay-3d.html"
  },"151": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-sanitize-clusters.html#sanitize-clusters",
    "relUrl": "/nodes/graphs/graphs-sanitize-clusters.html#sanitize-clusters"
  },"152": {
    "doc": "Sanitize Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | Prune Isolated Points | If enabled, input points that are not part of a valid cluster *(either no edges or pruned cluster)* will be omitted from the Vtx output.If disabled, the input points are forwarded as-is in the Vtx output (with added attributes). | . | Edge Position | If enabled, this sets the position of the Edge points to a lerp between their Start and End points.*By default, Edges point are placed at the center between their two Vtx.* | . | Min Cluster Size | If enabled, any cluster with less **edges** than specified will be pruned from the output. | . | Max Cluster Size | If enabled, any cluster with more **edges** than specified will be pruned from the output. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-sanitize-clusters.html#properties",
    "relUrl": "/nodes/graphs/graphs-sanitize-clusters.html#properties"
  },"153": {
    "doc": "Sanitize Clusters",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-sanitize-clusters.html#usage",
    "relUrl": "/nodes/graphs/graphs-sanitize-clusters.html#usage"
  },"154": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-sanitize-clusters.html",
    "relUrl": "/nodes/graphs/graphs-sanitize-clusters.html"
  },"155": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D  ",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. Table of content . | Properties | Method | Projection Settings | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html#voronoi-2d--",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html#voronoi-2d--"
  },"156": {
    "doc": "Voronoi 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Method | The method used to position Voronoi’ sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points’ bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Graphs.* | . | **Hull Identification**| |   | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#projection-settings) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html#properties",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html#properties"
  },"157": {
    "doc": "Voronoi 2D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi’ site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay’ triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . layout: page title: Projection Settings has_children: false nav_exclude: true — . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html#method",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html#method"
  },"158": {
    "doc": "Voronoi 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, when relevant. | Property | Description | . | Project Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html#projection-settings",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html#projection-settings"
  },"159": {
    "doc": "Voronoi 2D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html#usage",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html#usage"
  },"160": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-2d.html",
    "relUrl": "/nodes/graphs/graphs-voronoi-2d.html"
  },"161": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. Table of content . | Properties | Method | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-3d.html#voronoi-3d",
    "relUrl": "/nodes/graphs/graphs-voronoi-3d.html#voronoi-3d"
  },"162": {
    "doc": "Voronoi 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Method | The method used to position Voronoi’ sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points’ bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Graphs.* | . | **Hull Identification**| |   | . | Hull Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-3d.html#properties",
    "relUrl": "/nodes/graphs/graphs-voronoi-3d.html#properties"
  },"163": {
    "doc": "Voronoi 3D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi’ site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay’ triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-3d.html#method",
    "relUrl": "/nodes/graphs/graphs-voronoi-3d.html#method"
  },"164": {
    "doc": "Voronoi 3D",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-3d.html#usage",
    "relUrl": "/nodes/graphs/graphs-voronoi-3d.html#usage"
  },"165": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/graphs-voronoi-3d.html",
    "relUrl": "/nodes/graphs/graphs-voronoi-3d.html"
  },"166": {
    "doc": "Direction",
    "title": "Direction",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-direction.html#direction",
    "relUrl": "/pathfinding/heuristics/heuristic-direction.html#direction"
  },"167": {
    "doc": "Direction",
    "title": "Direction",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-direction.html",
    "relUrl": "/pathfinding/heuristics/heuristic-direction.html"
  },"168": {
    "doc": "Shortest Distance",
    "title": "Shortest Distance",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-distance.html#shortest-distance",
    "relUrl": "/pathfinding/heuristics/heuristic-distance.html#shortest-distance"
  },"169": {
    "doc": "Shortest Distance",
    "title": "Shortest Distance",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-distance.html",
    "relUrl": "/pathfinding/heuristics/heuristic-distance.html"
  },"170": {
    "doc": "Local Distance",
    "title": "Local Distance",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-local-distance.html#local-distance",
    "relUrl": "/pathfinding/heuristics/heuristic-local-distance.html#local-distance"
  },"171": {
    "doc": "Local Distance",
    "title": "Local Distance",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-local-distance.html",
    "relUrl": "/pathfinding/heuristics/heuristic-local-distance.html"
  },"172": {
    "doc": "Modifiers Only",
    "title": "Modifiers Only",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-modifiers-only.html#modifiers-only",
    "relUrl": "/pathfinding/heuristics/heuristic-modifiers-only.html#modifiers-only"
  },"173": {
    "doc": "Modifiers Only",
    "title": "Modifiers Only",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-modifiers-only.html",
    "relUrl": "/pathfinding/heuristics/heuristic-modifiers-only.html"
  },"174": {
    "doc": "Least Nodes",
    "title": "Least Nodes",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-node-count.html#least-nodes",
    "relUrl": "/pathfinding/heuristics/heuristic-node-count.html#least-nodes"
  },"175": {
    "doc": "Least Nodes",
    "title": "Least Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/heuristic-node-count.html",
    "relUrl": "/pathfinding/heuristics/heuristic-node-count.html"
  },"176": {
    "doc": "Custom Graphs",
    "title": "Custom Graphs",
    "content": "Custom graph creation from user-defined rules . Connect points! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#custom-graphs",
    "relUrl": "/nodes/custom-graph/#custom-graphs"
  },"177": {
    "doc": "Custom Graphs",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#nodes",
    "relUrl": "/nodes/custom-graph/#nodes"
  },"178": {
    "doc": "Custom Graphs",
    "title": "Create Params",
    "content": "Create params to build a custom graph from. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#create-params",
    "relUrl": "/nodes/custom-graph/#create-params"
  },"179": {
    "doc": "Custom Graphs",
    "title": "Build",
    "content": "Build a custom graph from a one or multiple params. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#build",
    "relUrl": "/nodes/custom-graph/#build"
  },"180": {
    "doc": "Custom Graphs",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#find-edge-clusters",
    "relUrl": "/nodes/custom-graph/#find-edge-clusters"
  },"181": {
    "doc": "Custom Graphs",
    "title": "Consolidate",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#consolidate",
    "relUrl": "/nodes/custom-graph/#consolidate"
  },"182": {
    "doc": "Custom Graphs",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#delete",
    "relUrl": "/nodes/custom-graph/#delete"
  },"183": {
    "doc": "Custom Graphs",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#promote-edges",
    "relUrl": "/nodes/custom-graph/#promote-edges"
  },"184": {
    "doc": "Custom Graphs",
    "title": "Custom Graph Data",
    "content": "Custom graph data object. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/#custom-graph-data",
    "relUrl": "/nodes/custom-graph/#custom-graph-data"
  },"185": {
    "doc": "Custom Graphs",
    "title": "Custom Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/custom-graph/",
    "relUrl": "/nodes/custom-graph/"
  },"186": {
    "doc": "Smoothing",
    "title": "Smoothing",
    "content": "An inventory of the available smoothing modules. Smoothing modules are primarily used by the Smooth node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/#smoothing",
    "relUrl": "/docs/smoothing/#smoothing"
  },"187": {
    "doc": "Smoothing",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/#modules",
    "relUrl": "/docs/smoothing/#modules"
  },"188": {
    "doc": "Smoothing",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/#radius",
    "relUrl": "/docs/smoothing/#radius"
  },"189": {
    "doc": "Smoothing",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/#moving-average",
    "relUrl": "/docs/smoothing/#moving-average"
  },"190": {
    "doc": "Smoothing",
    "title": "Smoothing",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/",
    "relUrl": "/docs/smoothing/"
  },"191": {
    "doc": "Heuristics",
    "title": "Heuristics",
    "content": "An inventory of the available heuristics modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . Heuristics are basically some under-the-hood maths used by Search Algorithms to gauge whether one path is better than another. Different algorithms use heuristics differently, but their values is computed consistently. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#heuristics",
    "relUrl": "/pathfinding/heuristics/#heuristics"
  },"192": {
    "doc": "Heuristics",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#modules",
    "relUrl": "/pathfinding/heuristics/#modules"
  },"193": {
    "doc": "Heuristics",
    "title": "Modifiers Only",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#modifiers-only",
    "relUrl": "/pathfinding/heuristics/#modifiers-only"
  },"194": {
    "doc": "Heuristics",
    "title": "Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#shortest-distance",
    "relUrl": "/pathfinding/heuristics/#shortest-distance"
  },"195": {
    "doc": "Heuristics",
    "title": "Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#direction",
    "relUrl": "/pathfinding/heuristics/#direction"
  },"196": {
    "doc": "Heuristics",
    "title": "Local Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#local-distance",
    "relUrl": "/pathfinding/heuristics/#local-distance"
  },"197": {
    "doc": "Heuristics",
    "title": "Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/#least-nodes",
    "relUrl": "/pathfinding/heuristics/#least-nodes"
  },"198": {
    "doc": "Heuristics",
    "title": "Heuristics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/",
    "relUrl": "/pathfinding/heuristics/"
  },"199": {
    "doc": "Blending",
    "title": "Blending",
    "content": "An inventory of the available blending modules. Blending modules are primarily used by nodes like Subdivide, as well as under the hood of many nodes where only a sub-selection of parameters will be exposed (as opposed to full module selection) . Blending operate on sub-points groups, not entire groups – what “sub-points” means is up to the node using the blending. Hence, “First” and “Last” refers to the first &amp; last of the sub-points. Checklist . | Modules | Common Properties . | Blendmodes | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#blending",
    "relUrl": "/docs/blending/#blending"
  },"200": {
    "doc": "Blending",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#modules",
    "relUrl": "/docs/blending/#modules"
  },"201": {
    "doc": "Blending",
    "title": "Interpolate",
    "content": "Subtitle . Interpolate values between first and last point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#interpolate",
    "relUrl": "/docs/blending/#interpolate"
  },"202": {
    "doc": "Blending",
    "title": "Inherit First",
    "content": "Copy the first point’ values . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#inherit-first",
    "relUrl": "/docs/blending/#inherit-first"
  },"203": {
    "doc": "Blending",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#inherit-last",
    "relUrl": "/docs/blending/#inherit-last"
  },"204": {
    "doc": "Blending",
    "title": "Common Properties",
    "content": "blending-common-properties . | Selector | Data | . | Default Blending | Pick the default blending mode for both point properties and attributes | . | Properties Overrides | Individual overrides for point properties | . | Attributes Overrides | Individual overrides for attributes | . Disregard which blendmode appears when greyed out, what is selected as Default Blending will be used for those. Blendmodes . | Selector | Data | . | None | Keep the first processed value | . | Weight | Weights all the processed values. **How that weight of each value is calculated depends on the node, module, and data set.** *More often than not, it comes down to a basic lerp.* | . | Average | Average all the processed values | . | Min | Keep the minimum value (component-wise) encountered during processing | . | Max | Keep the maximum value (component-wise) encountered during processing | . | Copy | Overwrites the value with the last processed one | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/#common-properties",
    "relUrl": "/docs/blending/#common-properties"
  },"205": {
    "doc": "Blending",
    "title": "Blending",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/blending/",
    "relUrl": "/docs/blending/"
  },"206": {
    "doc": "Refining",
    "title": "Refining",
    "content": "An inventory of the available edge refinement modules. Refining modules are primarily used by the Refine node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/#refining",
    "relUrl": "/docs/refining/#refining"
  },"207": {
    "doc": "Refining",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/#modules",
    "relUrl": "/docs/refining/#modules"
  },"208": {
    "doc": "Refining",
    "title": "Minimum Spanning Tree",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/#minimum-spanning-tree",
    "relUrl": "/docs/refining/#minimum-spanning-tree"
  },"209": {
    "doc": "Refining",
    "title": "Refining",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/",
    "relUrl": "/docs/refining/"
  },"210": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": "Modules &amp; Documentation . This section is dedicated to broader pathfinding topics &amp; modules. Node specifics can be found on the dedicated node page. Pathfinding modules for Pathfinders nodes. Key steps include heuristic computation, goal picking, and search algorithms finding the best path based on weighted connections. Heuristic modifiers heavily influence outcomes. Note: Plot nodes handle point datasets differently, finding a path through each point in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#pathfinding",
    "relUrl": "/pathfinding/#pathfinding"
  },"211": {
    "doc": "Pathfinding",
    "title": "Pathfinders",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#pathfinders",
    "relUrl": "/pathfinding/#pathfinders"
  },"212": {
    "doc": "Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#edges-pathfinding",
    "relUrl": "/pathfinding/#edges-pathfinding"
  },"213": {
    "doc": "Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#plot-edges-pathfinding",
    "relUrl": "/pathfinding/#plot-edges-pathfinding"
  },"214": {
    "doc": "Pathfinding",
    "title": "How pathfinding works",
    "content": "Although details vary a bit depending on the selected Search algorithm, the basic gist is, for each path &amp; cluster: . | Heuristic Modifiers are computed and cached for each node and edge. | Goal Pickers will find a suitable Seed and Goal point within the cluster. | The Search Algorithm will then find the best path that goes from Seed to Goal, accounting for its internal maths, and using Heuristic Modifiers as additive weight to determine whether one connection is better than another. | . Starting from the seed, each “next step” is weighted according to the V Vertex weight and the E Edge weight that connects to it. The search returns the path found with the lowest possible weight, or score. While the selected search algorithm is important, Heuristic Modifiers are even more critical to the operation, as user-defined weights can drastically change and shape the path deemed best by the search. Note: The Plot nodes variations don’t have a goal picker and instead process each point data set as a list of points to go through from start to finish. The first point is the initial seed, the last point is the final goal, and then a path is found that goes through each point in-between, in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#how-pathfinding-works",
    "relUrl": "/pathfinding/#how-pathfinding-works"
  },"215": {
    "doc": "Pathfinding",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#goal-pickers",
    "relUrl": "/pathfinding/#goal-pickers"
  },"216": {
    "doc": "Pathfinding",
    "title": "Default",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#default",
    "relUrl": "/pathfinding/#default"
  },"217": {
    "doc": "Pathfinding",
    "title": "Random",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#random",
    "relUrl": "/pathfinding/#random"
  },"218": {
    "doc": "Pathfinding",
    "title": "Goal from Attribute",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#goal-from-attribute",
    "relUrl": "/pathfinding/#goal-from-attribute"
  },"219": {
    "doc": "Pathfinding",
    "title": "Search",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#search",
    "relUrl": "/pathfinding/#search"
  },"220": {
    "doc": "Pathfinding",
    "title": "Djikstra",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#djikstra",
    "relUrl": "/pathfinding/#djikstra"
  },"221": {
    "doc": "Pathfinding",
    "title": "A* Star",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#a-star",
    "relUrl": "/pathfinding/#a-star"
  },"222": {
    "doc": "Pathfinding",
    "title": "Heuristics",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#heuristics",
    "relUrl": "/pathfinding/#heuristics"
  },"223": {
    "doc": "Pathfinding",
    "title": "Heuristic Modifiers",
    "content": "How to use heuristic modifiers . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#heuristic-modifiers",
    "relUrl": "/pathfinding/#heuristic-modifiers"
  },"224": {
    "doc": "Pathfinding",
    "title": "Modifiers Only",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#modifiers-only",
    "relUrl": "/pathfinding/#modifiers-only"
  },"225": {
    "doc": "Pathfinding",
    "title": "Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#shortest-distance",
    "relUrl": "/pathfinding/#shortest-distance"
  },"226": {
    "doc": "Pathfinding",
    "title": "Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#direction",
    "relUrl": "/pathfinding/#direction"
  },"227": {
    "doc": "Pathfinding",
    "title": "Local Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#local-distance",
    "relUrl": "/pathfinding/#local-distance"
  },"228": {
    "doc": "Pathfinding",
    "title": "Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/#least-nodes",
    "relUrl": "/pathfinding/#least-nodes"
  },"229": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/",
    "relUrl": "/pathfinding/"
  },"230": {
    "doc": "Edges",
    "title": "Edges",
    "content": "Refinemement, connections, intersections, … . Edge-based operations . This section contains edge-specific operations. Make sure to check out Working with Graphs first. It is tightly related to Graphs and Pathfinders . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#edges",
    "relUrl": "/nodes/edges/#edges"
  },"231": {
    "doc": "Edges",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#nodes",
    "relUrl": "/nodes/edges/#nodes"
  },"232": {
    "doc": "Edges",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#bridge-clusters",
    "relUrl": "/nodes/edges/#bridge-clusters"
  },"233": {
    "doc": "Edges",
    "title": "Refine",
    "content": "Refine edges configuration of a graph (i.e MST) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#refine",
    "relUrl": "/nodes/edges/#refine"
  },"234": {
    "doc": "Edges",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#relax",
    "relUrl": "/nodes/edges/#relax"
  },"235": {
    "doc": "Edges",
    "title": "Write Extras",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#write-extras",
    "relUrl": "/nodes/edges/#write-extras"
  },"236": {
    "doc": "Edges",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#prune-by-length",
    "relUrl": "/nodes/edges/#prune-by-length"
  },"237": {
    "doc": "Edges",
    "title": "Find Intersections",
    "content": "Find and registers edges intersections inside a cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#find-intersections",
    "relUrl": "/nodes/edges/#find-intersections"
  },"238": {
    "doc": "Edges",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/#draw-edges",
    "relUrl": "/nodes/edges/#draw-edges"
  },"239": {
    "doc": "Edges",
    "title": "Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/edges/",
    "relUrl": "/nodes/edges/"
  },"240": {
    "doc": "Relaxing",
    "title": "Relaxing",
    "content": "An inventory of the available relax modules. Smoothing modules are primarily used by the Smooth node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/#relaxing",
    "relUrl": "/docs/relaxing/#relaxing"
  },"241": {
    "doc": "Relaxing",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/#modules",
    "relUrl": "/docs/relaxing/#modules"
  },"242": {
    "doc": "Relaxing",
    "title": "Laplacian",
    "content": "Laplacian / Poisson relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/#laplacian",
    "relUrl": "/docs/relaxing/#laplacian"
  },"243": {
    "doc": "Relaxing",
    "title": "Force Directed",
    "content": "Force-directed relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/#force-directed",
    "relUrl": "/docs/relaxing/#force-directed"
  },"244": {
    "doc": "Relaxing",
    "title": "Relaxing",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/",
    "relUrl": "/docs/relaxing/"
  },"245": {
    "doc": "Installation",
    "title": "Installation",
    "content": "How to install . The best way is to clone the repo as a submodule; though you can also download sources as a .zip to ensure long term stability. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#installation",
    "relUrl": "/installation/#installation"
  },"246": {
    "doc": "Installation",
    "title": "Sources",
    "content": "  Latest (.zip) Github . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#sources",
    "relUrl": "/installation/#sources"
  },"247": {
    "doc": "Installation",
    "title": "Cloning",
    "content": "The best way is to clone the repository to a submodule; that way you can contribute pull requests if you want. The project should placed in your project’s Plugins folder. &gt; cd YourProject &gt; git submodule add https://github.com/Nebukam/PCGExtendedToolkit Plugins/PCGExtendedToolkit &gt; git add ../.gitmodules &gt; git commit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#cloning",
    "relUrl": "/installation/#cloning"
  },"248": {
    "doc": "Installation",
    "title": "Install from the ZIP",
    "content": "  Alternatively you can download the ZIP of this repo and place it in YourProject/Plugins/PCGExtendedToolkit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#install-from-the-zip",
    "relUrl": "/installation/#install-from-the-zip"
  },"249": {
    "doc": "Installation",
    "title": "Installation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/",
    "relUrl": "/installation/"
  },"250": {
    "doc": "Guides",
    "title": "Guides",
    "content": "A few example scenarios . Small examples &amp; step-by-step guides to get going with the more abstract and obscures nodes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/guides/#guides",
    "relUrl": "/guides/#guides"
  },"251": {
    "doc": "Guides",
    "title": "Guides",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/guides/",
    "relUrl": "/guides/"
  },"252": {
    "doc": "Goal Pickers",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/#goal-pickers",
    "relUrl": "/pathfinding/goal-pickers/#goal-pickers"
  },"253": {
    "doc": "Goal Pickers",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/#modules",
    "relUrl": "/pathfinding/goal-pickers/#modules"
  },"254": {
    "doc": "Goal Pickers",
    "title": "Goal Pickers",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/",
    "relUrl": "/pathfinding/goal-pickers/"
  },"255": {
    "doc": "Documentation",
    "title": "Documentation",
    "content": "Notes &amp; informations . This section is dedicated to broader &amp; shared documentation topics. Node specifics can be found on the dedicated node page. When working with specific nodes, make sure to check out the home of the category they belong to as it often contains important infos pertaining to their family of nodes as a whole! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#documentation",
    "relUrl": "/docs/#documentation"
  },"256": {
    "doc": "Documentation",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#pcgex-nodes",
    "relUrl": "/docs/#pcgex-nodes"
  },"257": {
    "doc": "Documentation",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#attribute-selectors",
    "relUrl": "/docs/#attribute-selectors"
  },"258": {
    "doc": "Documentation",
    "title": "Working with Graphs",
    "content": "Vtx? Edges? . A summary of what “graph” means and entails in the context of PCGEx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#working-with-graphs",
    "relUrl": "/docs/#working-with-graphs"
  },"259": {
    "doc": "Documentation",
    "title": "Debug",
    "content": "Working with PCGEx Debug nodes . Need-to-know stuff regarding internal visual debugging tools available in PCGEx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#debug",
    "relUrl": "/docs/#debug"
  },"260": {
    "doc": "Documentation",
    "title": "Modules &amp; Sub-processors",
    "content": "Modules and sub-processors are instanced classes used across a variety of nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#modules--sub-processors",
    "relUrl": "/docs/#modules--sub-processors"
  },"261": {
    "doc": "Documentation",
    "title": "Blending",
    "content": "An inventory of the available blending modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#blending",
    "relUrl": "/docs/#blending"
  },"262": {
    "doc": "Documentation",
    "title": "Orienting",
    "content": "An inventory of the available orientation modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#orienting",
    "relUrl": "/docs/#orienting"
  },"263": {
    "doc": "Documentation",
    "title": "Relaxing",
    "content": "An inventory of the available relax modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#relaxing",
    "relUrl": "/docs/#relaxing"
  },"264": {
    "doc": "Documentation",
    "title": "Tangents",
    "content": "An inventory of the available smoothing modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#tangents",
    "relUrl": "/docs/#tangents"
  },"265": {
    "doc": "Documentation",
    "title": "Smoothing",
    "content": "An inventory of the available smoothing modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#smoothing",
    "relUrl": "/docs/#smoothing"
  },"266": {
    "doc": "Documentation",
    "title": "Refining",
    "content": "An inventory of the available edge refinement modules. Pathfinding and its modules being more complex, they have a dedicated section. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/#refining",
    "relUrl": "/docs/#refining"
  },"267": {
    "doc": "Documentation",
    "title": "Documentation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/",
    "relUrl": "/docs/"
  },"268": {
    "doc": "Tangents",
    "title": "Tangents",
    "content": "An inventory of the available smoothing modules. Tangent modules are primarily used by the Write Tangents node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/#tangents",
    "relUrl": "/docs/tangents/#tangents"
  },"269": {
    "doc": "Tangents",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/#modules",
    "relUrl": "/docs/tangents/#modules"
  },"270": {
    "doc": "Tangents",
    "title": "Auto Tangents",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/#auto-tangents",
    "relUrl": "/docs/tangents/#auto-tangents"
  },"271": {
    "doc": "Tangents",
    "title": "Custom Tangents",
    "content": "Custom attribute-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/#custom-tangents",
    "relUrl": "/docs/tangents/#custom-tangents"
  },"272": {
    "doc": "Tangents",
    "title": "Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/",
    "relUrl": "/docs/tangents/"
  },"273": {
    "doc": "Search",
    "title": "Search",
    "content": "An inventory of the available heuristics modules. Search algorithms are at the core of PCGEx Pathfinding nodes &amp; capabilities. They are responsible for traversing individual clusters in search for the ideal path between the seed and goal points. At the time of writing, there are only two algorithms implemented, A Start and Djikstra. The next implementation candidates will be DFS and BFS as they yield slightly different results, althought less friendly to modifiers. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/#search",
    "relUrl": "/pathfinding/search/#search"
  },"274": {
    "doc": "Search",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/#modules",
    "relUrl": "/pathfinding/search/#modules"
  },"275": {
    "doc": "Search",
    "title": "Djikstra",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/#djikstra",
    "relUrl": "/pathfinding/search/#djikstra"
  },"276": {
    "doc": "Search",
    "title": "A* Star",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/#a-star",
    "relUrl": "/pathfinding/search/#a-star"
  },"277": {
    "doc": "Search",
    "title": "Search",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/",
    "relUrl": "/pathfinding/search/"
  },"278": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": "Delaunay, Voronoi, Convex Hulls, … . Graph generation &amp; operations . This section contains simple graph generators and utilities. Make sure to check out Working with Graphs first. It is tightly related to Edges and Pathfinders . 2D versions of the graphs are marked as they only work over XY plane for now. The projection settings are exposed but ignored. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#graphs",
    "relUrl": "/nodes/graphs/#graphs"
  },"279": {
    "doc": "Graphs",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#nodes",
    "relUrl": "/nodes/graphs/#nodes"
  },"280": {
    "doc": "Graphs",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#convex-hull-3d",
    "relUrl": "/nodes/graphs/#convex-hull-3d"
  },"281": {
    "doc": "Graphs",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#delaunay-3d",
    "relUrl": "/nodes/graphs/#delaunay-3d"
  },"282": {
    "doc": "Graphs",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#voronoi-3d",
    "relUrl": "/nodes/graphs/#voronoi-3d"
  },"283": {
    "doc": "Graphs",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#convex-hull-2d",
    "relUrl": "/nodes/graphs/#convex-hull-2d"
  },"284": {
    "doc": "Graphs",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#delaunay-2d",
    "relUrl": "/nodes/graphs/#delaunay-2d"
  },"285": {
    "doc": "Graphs",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#voronoi-2d",
    "relUrl": "/nodes/graphs/#voronoi-2d"
  },"286": {
    "doc": "Graphs",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/#sanitize-clusters",
    "relUrl": "/nodes/graphs/#sanitize-clusters"
  },"287": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/",
    "relUrl": "/nodes/graphs/"
  },"288": {
    "doc": "Nodes",
    "title": "Nodes",
    "content": "All of ‘em nodes! . Nodes on this page are grouped by categories, but make sure to check each hub as they contains useful infos to better understand the inner workings of their members. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#nodes",
    "relUrl": "/nodes/#nodes"
  },"289": {
    "doc": "Nodes",
    "title": "Graphs",
    "content": "Delaunay, Voronoi, Convex Hulls, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#graphs",
    "relUrl": "/nodes/#graphs"
  },"290": {
    "doc": "Nodes",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#convex-hull-3d",
    "relUrl": "/nodes/#convex-hull-3d"
  },"291": {
    "doc": "Nodes",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#delaunay-3d",
    "relUrl": "/nodes/#delaunay-3d"
  },"292": {
    "doc": "Nodes",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#voronoi-3d",
    "relUrl": "/nodes/#voronoi-3d"
  },"293": {
    "doc": "Nodes",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#convex-hull-2d",
    "relUrl": "/nodes/#convex-hull-2d"
  },"294": {
    "doc": "Nodes",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#delaunay-2d",
    "relUrl": "/nodes/#delaunay-2d"
  },"295": {
    "doc": "Nodes",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#voronoi-2d",
    "relUrl": "/nodes/#voronoi-2d"
  },"296": {
    "doc": "Nodes",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sanitize-clusters",
    "relUrl": "/nodes/#sanitize-clusters"
  },"297": {
    "doc": "Nodes",
    "title": "Edges",
    "content": "Refinemement, connections, intersections, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#edges",
    "relUrl": "/nodes/#edges"
  },"298": {
    "doc": "Nodes",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#bridge-clusters",
    "relUrl": "/nodes/#bridge-clusters"
  },"299": {
    "doc": "Nodes",
    "title": "Refine",
    "content": "Refine edges configuration of a graph (i.e MST) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#refine",
    "relUrl": "/nodes/#refine"
  },"300": {
    "doc": "Nodes",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#relax",
    "relUrl": "/nodes/#relax"
  },"301": {
    "doc": "Nodes",
    "title": "Write Extras",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#write-extras",
    "relUrl": "/nodes/#write-extras"
  },"302": {
    "doc": "Nodes",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#prune-by-length",
    "relUrl": "/nodes/#prune-by-length"
  },"303": {
    "doc": "Nodes",
    "title": "Find Intersections",
    "content": "Find and registers edges intersections inside a cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#find-intersections",
    "relUrl": "/nodes/#find-intersections"
  },"304": {
    "doc": "Nodes",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#draw-edges",
    "relUrl": "/nodes/#draw-edges"
  },"305": {
    "doc": "Nodes",
    "title": "Pathfinders",
    "content": "Seed(s)-to-goal(s), Plots, Navmesh, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#pathfinders",
    "relUrl": "/nodes/#pathfinders"
  },"306": {
    "doc": "Nodes",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#edges-pathfinding",
    "relUrl": "/nodes/#edges-pathfinding"
  },"307": {
    "doc": "Nodes",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#plot-edges-pathfinding",
    "relUrl": "/nodes/#plot-edges-pathfinding"
  },"308": {
    "doc": "Nodes",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#navmesh-pathfinding",
    "relUrl": "/nodes/#navmesh-pathfinding"
  },"309": {
    "doc": "Nodes",
    "title": "Plot Navmesh Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#plot-navmesh-pathfinding",
    "relUrl": "/nodes/#plot-navmesh-pathfinding"
  },"310": {
    "doc": "Nodes",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sampling",
    "relUrl": "/nodes/#sampling"
  },"311": {
    "doc": "Nodes",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sample-nearest-surface",
    "relUrl": "/nodes/#sample-nearest-surface"
  },"312": {
    "doc": "Nodes",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#guided-trace",
    "relUrl": "/nodes/#guided-trace"
  },"313": {
    "doc": "Nodes",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sample-nearest-polyline",
    "relUrl": "/nodes/#sample-nearest-polyline"
  },"314": {
    "doc": "Nodes",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sample-nearest-points",
    "relUrl": "/nodes/#sample-nearest-points"
  },"315": {
    "doc": "Nodes",
    "title": "Misc",
    "content": "Sort, Partition, Fuse, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#misc",
    "relUrl": "/nodes/#misc"
  },"316": {
    "doc": "Nodes",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#sort-points",
    "relUrl": "/nodes/#sort-points"
  },"317": {
    "doc": "Nodes",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#partition-by-values",
    "relUrl": "/nodes/#partition-by-values"
  },"318": {
    "doc": "Nodes",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#fuse-points",
    "relUrl": "/nodes/#fuse-points"
  },"319": {
    "doc": "Nodes",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#draw-attributes",
    "relUrl": "/nodes/#draw-attributes"
  },"320": {
    "doc": "Nodes",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#points-to-bounds",
    "relUrl": "/nodes/#points-to-bounds"
  },"321": {
    "doc": "Nodes",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their size. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#discard-points-by-count",
    "relUrl": "/nodes/#discard-points-by-count"
  },"322": {
    "doc": "Nodes",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#write-index",
    "relUrl": "/nodes/#write-index"
  },"323": {
    "doc": "Nodes",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#flush-debug",
    "relUrl": "/nodes/#flush-debug"
  },"324": {
    "doc": "Nodes",
    "title": "Paths",
    "content": "Smooth, orient, tangents, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#paths",
    "relUrl": "/nodes/#paths"
  },"325": {
    "doc": "Nodes",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#smooth",
    "relUrl": "/nodes/#smooth"
  },"326": {
    "doc": "Nodes",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#orient",
    "relUrl": "/nodes/#orient"
  },"327": {
    "doc": "Nodes",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#fuse-collinear",
    "relUrl": "/nodes/#fuse-collinear"
  },"328": {
    "doc": "Nodes",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#subdivide",
    "relUrl": "/nodes/#subdivide"
  },"329": {
    "doc": "Nodes",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#write-tangents",
    "relUrl": "/nodes/#write-tangents"
  },"330": {
    "doc": "Nodes",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#paths-to-edge-clusters",
    "relUrl": "/nodes/#paths-to-edge-clusters"
  },"331": {
    "doc": "Nodes",
    "title": "Custom Graphs",
    "content": "Custom graph creation from user-defined rules . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#custom-graphs",
    "relUrl": "/nodes/#custom-graphs"
  },"332": {
    "doc": "Nodes",
    "title": "Create Params",
    "content": "Create params to build a custom graph from. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#create-params",
    "relUrl": "/nodes/#create-params"
  },"333": {
    "doc": "Nodes",
    "title": "Build",
    "content": "Build a custom graph from a one or multiple params. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#build",
    "relUrl": "/nodes/#build"
  },"334": {
    "doc": "Nodes",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#find-edge-clusters",
    "relUrl": "/nodes/#find-edge-clusters"
  },"335": {
    "doc": "Nodes",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph generated edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#draw-custom-graph",
    "relUrl": "/nodes/#draw-custom-graph"
  },"336": {
    "doc": "Nodes",
    "title": "Consolidate",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#consolidate",
    "relUrl": "/nodes/#consolidate"
  },"337": {
    "doc": "Nodes",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#delete",
    "relUrl": "/nodes/#delete"
  },"338": {
    "doc": "Nodes",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#promote-edges",
    "relUrl": "/nodes/#promote-edges"
  },"339": {
    "doc": "Nodes",
    "title": "Custom Graph Data",
    "content": "Custom graph data object. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/#custom-graph-data",
    "relUrl": "/nodes/#custom-graph-data"
  },"340": {
    "doc": "Nodes",
    "title": "Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/",
    "relUrl": "/nodes/"
  },"341": {
    "doc": "Misc",
    "title": "Misc",
    "content": "Sort, Partition, Fuse, … . Low level utility nodes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#misc",
    "relUrl": "/nodes/misc/#misc"
  },"342": {
    "doc": "Misc",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#nodes",
    "relUrl": "/nodes/misc/#nodes"
  },"343": {
    "doc": "Misc",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#sort-points",
    "relUrl": "/nodes/misc/#sort-points"
  },"344": {
    "doc": "Misc",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#partition-by-values",
    "relUrl": "/nodes/misc/#partition-by-values"
  },"345": {
    "doc": "Misc",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#fuse-points",
    "relUrl": "/nodes/misc/#fuse-points"
  },"346": {
    "doc": "Misc",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#draw-attributes",
    "relUrl": "/nodes/misc/#draw-attributes"
  },"347": {
    "doc": "Misc",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#points-to-bounds",
    "relUrl": "/nodes/misc/#points-to-bounds"
  },"348": {
    "doc": "Misc",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their size. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#discard-points-by-count",
    "relUrl": "/nodes/misc/#discard-points-by-count"
  },"349": {
    "doc": "Misc",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#write-index",
    "relUrl": "/nodes/misc/#write-index"
  },"350": {
    "doc": "Misc",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/#flush-debug",
    "relUrl": "/nodes/misc/#flush-debug"
  },"351": {
    "doc": "Misc",
    "title": "Misc",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/",
    "relUrl": "/nodes/misc/"
  },"352": {
    "doc": "Orienting",
    "title": "Orienting",
    "content": "An inventory of the available orientation modules. Orient modules are primarily used by the Orient node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/#orienting",
    "relUrl": "/docs/orienting/#orienting"
  },"353": {
    "doc": "Orienting",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/#modules",
    "relUrl": "/docs/orienting/#modules"
  },"354": {
    "doc": "Orienting",
    "title": "LookAt",
    "content": "Look at next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/#lookat",
    "relUrl": "/docs/orienting/#lookat"
  },"355": {
    "doc": "Orienting",
    "title": "Weighted",
    "content": "Distance-weighted interpolation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/#weighted",
    "relUrl": "/docs/orienting/#weighted"
  },"356": {
    "doc": "Orienting",
    "title": "Average",
    "content": "Average between previous and next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/#average",
    "relUrl": "/docs/orienting/#average"
  },"357": {
    "doc": "Orienting",
    "title": "Orienting",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/",
    "relUrl": "/docs/orienting/"
  },"358": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, … . Extract data in relation to surroundings . This section contains raw data samplers. They’re mostly helpers/boilerplate code to sample and write data to attribute without providing immediate mean of using of the results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#sampling",
    "relUrl": "/nodes/sampling/#sampling"
  },"359": {
    "doc": "Sampling",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#nodes",
    "relUrl": "/nodes/sampling/#nodes"
  },"360": {
    "doc": "Sampling",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#sample-nearest-surface",
    "relUrl": "/nodes/sampling/#sample-nearest-surface"
  },"361": {
    "doc": "Sampling",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#guided-trace",
    "relUrl": "/nodes/sampling/#guided-trace"
  },"362": {
    "doc": "Sampling",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#sample-nearest-polyline",
    "relUrl": "/nodes/sampling/#sample-nearest-polyline"
  },"363": {
    "doc": "Sampling",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/#sample-nearest-points",
    "relUrl": "/nodes/sampling/#sample-nearest-points"
  },"364": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/",
    "relUrl": "/nodes/sampling/"
  },"365": {
    "doc": "Paths",
    "title": "Paths",
    "content": "Smooth, orient, tangents, … . Manipulate points as linear datasets . This section contains path-like data utilities. Paths are assumed to be a linearily-ordered list of points; most likely used to generate a spline. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#paths",
    "relUrl": "/nodes/paths/#paths"
  },"366": {
    "doc": "Paths",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#nodes",
    "relUrl": "/nodes/paths/#nodes"
  },"367": {
    "doc": "Paths",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#smooth",
    "relUrl": "/nodes/paths/#smooth"
  },"368": {
    "doc": "Paths",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#orient",
    "relUrl": "/nodes/paths/#orient"
  },"369": {
    "doc": "Paths",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#fuse-collinear",
    "relUrl": "/nodes/paths/#fuse-collinear"
  },"370": {
    "doc": "Paths",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#subdivide",
    "relUrl": "/nodes/paths/#subdivide"
  },"371": {
    "doc": "Paths",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#write-tangents",
    "relUrl": "/nodes/paths/#write-tangents"
  },"372": {
    "doc": "Paths",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/#paths-to-edge-clusters",
    "relUrl": "/nodes/paths/#paths-to-edge-clusters"
  },"373": {
    "doc": "Paths",
    "title": "Paths",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/",
    "relUrl": "/nodes/paths/"
  },"374": {
    "doc": "Pathfinders",
    "title": "Pathfinders",
    "content": "Seed(s)-to-goal(s), Plots, Navmesh, … . Find path inside graphs . This section contains pathfinding utilities. Make sure to check out Working with Graphs first. It is tightly related to Edges and Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#pathfinders",
    "relUrl": "/nodes/pathfinder/#pathfinders"
  },"375": {
    "doc": "Pathfinders",
    "title": "Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#nodes",
    "relUrl": "/nodes/pathfinder/#nodes"
  },"376": {
    "doc": "Pathfinders",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#edges-pathfinding",
    "relUrl": "/nodes/pathfinder/#edges-pathfinding"
  },"377": {
    "doc": "Pathfinders",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#plot-edges-pathfinding",
    "relUrl": "/nodes/pathfinder/#plot-edges-pathfinding"
  },"378": {
    "doc": "Pathfinders",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#navmesh-pathfinding",
    "relUrl": "/nodes/pathfinder/#navmesh-pathfinding"
  },"379": {
    "doc": "Pathfinders",
    "title": "Plot Navmesh Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/#plot-navmesh-pathfinding",
    "relUrl": "/nodes/pathfinder/#plot-navmesh-pathfinding"
  },"380": {
    "doc": "Pathfinders",
    "title": "Pathfinders",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/",
    "relUrl": "/nodes/pathfinder/"
  },"381": {
    "doc": "PCG Extended Toolkit",
    "title": "PCGEx PCGExtendedToolkit",
    "content": "The PCG Extended Toolkit is a free (libre) plugin that extends Unreal Engine’ Procedural Content Generation pipeline, with a focus on building graphs &amp; pathfinding.   Installation Guides Documentation . This documentation is still heavily work-in-progress! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pcgex-pcgextendedtoolkit",
    "relUrl": "/#pcgex-pcgextendedtoolkit"
  },"382": {
    "doc": "PCG Extended Toolkit",
    "title": "Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#nodes",
    "relUrl": "/#nodes"
  },"383": {
    "doc": "PCG Extended Toolkit",
    "title": "Graphs",
    "content": "Delaunay, Voronoi, Convex Hulls, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#graphs",
    "relUrl": "/#graphs"
  },"384": {
    "doc": "PCG Extended Toolkit",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#convex-hull-3d",
    "relUrl": "/#convex-hull-3d"
  },"385": {
    "doc": "PCG Extended Toolkit",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#delaunay-3d",
    "relUrl": "/#delaunay-3d"
  },"386": {
    "doc": "PCG Extended Toolkit",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#voronoi-3d",
    "relUrl": "/#voronoi-3d"
  },"387": {
    "doc": "PCG Extended Toolkit",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#convex-hull-2d",
    "relUrl": "/#convex-hull-2d"
  },"388": {
    "doc": "PCG Extended Toolkit",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#delaunay-2d",
    "relUrl": "/#delaunay-2d"
  },"389": {
    "doc": "PCG Extended Toolkit",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#voronoi-2d",
    "relUrl": "/#voronoi-2d"
  },"390": {
    "doc": "PCG Extended Toolkit",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sanitize-clusters",
    "relUrl": "/#sanitize-clusters"
  },"391": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges",
    "content": "Refinemement, connections, intersections, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges",
    "relUrl": "/#edges"
  },"392": {
    "doc": "PCG Extended Toolkit",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#bridge-clusters",
    "relUrl": "/#bridge-clusters"
  },"393": {
    "doc": "PCG Extended Toolkit",
    "title": "Refine",
    "content": "Refine edges configuration of a graph (i.e MST) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#refine",
    "relUrl": "/#refine"
  },"394": {
    "doc": "PCG Extended Toolkit",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#relax",
    "relUrl": "/#relax"
  },"395": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Extras",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-extras",
    "relUrl": "/#write-extras"
  },"396": {
    "doc": "PCG Extended Toolkit",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#prune-by-length",
    "relUrl": "/#prune-by-length"
  },"397": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Intersections",
    "content": "Find and registers edges intersections inside a cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-intersections",
    "relUrl": "/#find-intersections"
  },"398": {
    "doc": "PCG Extended Toolkit",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#draw-edges",
    "relUrl": "/#draw-edges"
  },"399": {
    "doc": "PCG Extended Toolkit",
    "title": "Pathfinders",
    "content": "Seed(s)-to-goal(s), Plots, Navmesh, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pathfinders",
    "relUrl": "/#pathfinders"
  },"400": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges-pathfinding",
    "relUrl": "/#edges-pathfinding"
  },"401": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-edges-pathfinding",
    "relUrl": "/#plot-edges-pathfinding"
  },"402": {
    "doc": "PCG Extended Toolkit",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#navmesh-pathfinding",
    "relUrl": "/#navmesh-pathfinding"
  },"403": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Navmesh Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-navmesh-pathfinding",
    "relUrl": "/#plot-navmesh-pathfinding"
  },"404": {
    "doc": "PCG Extended Toolkit",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sampling",
    "relUrl": "/#sampling"
  },"405": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-surface",
    "relUrl": "/#sample-nearest-surface"
  },"406": {
    "doc": "PCG Extended Toolkit",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#guided-trace",
    "relUrl": "/#guided-trace"
  },"407": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-polyline",
    "relUrl": "/#sample-nearest-polyline"
  },"408": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-points",
    "relUrl": "/#sample-nearest-points"
  },"409": {
    "doc": "PCG Extended Toolkit",
    "title": "Misc",
    "content": "Sort, Partition, Fuse, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#misc",
    "relUrl": "/#misc"
  },"410": {
    "doc": "PCG Extended Toolkit",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sort-points",
    "relUrl": "/#sort-points"
  },"411": {
    "doc": "PCG Extended Toolkit",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#partition-by-values",
    "relUrl": "/#partition-by-values"
  },"412": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-points",
    "relUrl": "/#fuse-points"
  },"413": {
    "doc": "PCG Extended Toolkit",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#draw-attributes",
    "relUrl": "/#draw-attributes"
  },"414": {
    "doc": "PCG Extended Toolkit",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#points-to-bounds",
    "relUrl": "/#points-to-bounds"
  },"415": {
    "doc": "PCG Extended Toolkit",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their size. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#discard-points-by-count",
    "relUrl": "/#discard-points-by-count"
  },"416": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-index",
    "relUrl": "/#write-index"
  },"417": {
    "doc": "PCG Extended Toolkit",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#flush-debug",
    "relUrl": "/#flush-debug"
  },"418": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths",
    "content": "Smooth, orient, tangents, … . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths",
    "relUrl": "/#paths"
  },"419": {
    "doc": "PCG Extended Toolkit",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#smooth",
    "relUrl": "/#smooth"
  },"420": {
    "doc": "PCG Extended Toolkit",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#orient",
    "relUrl": "/#orient"
  },"421": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-collinear",
    "relUrl": "/#fuse-collinear"
  },"422": {
    "doc": "PCG Extended Toolkit",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#subdivide",
    "relUrl": "/#subdivide"
  },"423": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-tangents",
    "relUrl": "/#write-tangents"
  },"424": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths-to-edge-clusters",
    "relUrl": "/#paths-to-edge-clusters"
  },"425": {
    "doc": "PCG Extended Toolkit",
    "title": "Custom Graphs",
    "content": "Custom graph creation from user-defined rules . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#custom-graphs",
    "relUrl": "/#custom-graphs"
  },"426": {
    "doc": "PCG Extended Toolkit",
    "title": "Create Params",
    "content": "Create params to build a custom graph from. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#create-params",
    "relUrl": "/#create-params"
  },"427": {
    "doc": "PCG Extended Toolkit",
    "title": "Build",
    "content": "Build a custom graph from a one or multiple params. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#build",
    "relUrl": "/#build"
  },"428": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-edge-clusters",
    "relUrl": "/#find-edge-clusters"
  },"429": {
    "doc": "PCG Extended Toolkit",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph generated edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#draw-custom-graph",
    "relUrl": "/#draw-custom-graph"
  },"430": {
    "doc": "PCG Extended Toolkit",
    "title": "Consolidate",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#consolidate",
    "relUrl": "/#consolidate"
  },"431": {
    "doc": "PCG Extended Toolkit",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#delete",
    "relUrl": "/#delete"
  },"432": {
    "doc": "PCG Extended Toolkit",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#promote-edges",
    "relUrl": "/#promote-edges"
  },"433": {
    "doc": "PCG Extended Toolkit",
    "title": "Custom Graph Data",
    "content": "Custom graph data object. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#custom-graph-data",
    "relUrl": "/#custom-graph-data"
  },"434": {
    "doc": "PCG Extended Toolkit",
    "title": "PCG Extended Toolkit",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/",
    "relUrl": "/"
  },"435": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their size. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-discard-points-by-count.html#discard-points-by-count",
    "relUrl": "/nodes/misc/misc-discard-points-by-count.html#discard-points-by-count"
  },"436": {
    "doc": "Discard Points by Count",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | **Blending Settings**| |   | . | Blending | See Blending | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-discard-points-by-count.html#properties",
    "relUrl": "/nodes/misc/misc-discard-points-by-count.html#properties"
  },"437": {
    "doc": "Discard Points by Count",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-discard-points-by-count.html#usage",
    "relUrl": "/nodes/misc/misc-discard-points-by-count.html#usage"
  },"438": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-discard-points-by-count.html",
    "relUrl": "/nodes/misc/misc-discard-points-by-count.html"
  },"439": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. Table of content . | Properties | Individual Debug Settings | Expressions . | Direction | Connection (Position) | Connection (Point Index) | Point | Boolean | Label | . | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html#draw-attributes",
    "relUrl": "/nodes/misc/misc-draw-attributes.html#draw-attributes"
  },"440": {
    "doc": "Draw Attributes",
    "title": "Properties",
    "content": ". Each Draw Attribute node can display any number of things by fetching values from whatever point data is plugged into the input pin; in the order in which they are set up. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html#properties",
    "relUrl": "/nodes/misc/misc-draw-attributes.html#properties"
  },"441": {
    "doc": "Draw Attributes",
    "title": "Individual Debug Settings",
    "content": ". | Property | Description | . | **Settings**| |   | . | Enabled | Whether these settings are enabled or not. Allows to quickly turn a debug display on/off without deleting the entire entry. | . | Selector | The attribute or property to draw. | . | Expressed As | The type of shape/form that will be used to express the selected attribute or property. | . | **Expression Settings**| |   | . | – | Depending on the selected expression, different settings are available. See[Expressions](#expressions). | . | **Thickness &amp; Size**| |   | . | Thickness | The thickness of the debug line, when drawing a line. | . | Size | How the Size is interpreted depends on the chosen expression. See[Expressions](#expressions). | . | Local Size Attribute | When enabled, allows you to use a local attribute as a Size.*If enabled, the fixed Size attribute becomes a multiplier to the local attribute.* | . | **Color**| |   | . | Color | The debug color. | . | Local Color Attribute | When enabled, allows you to use a local attribute instead of the default Color property. | . | Color Is Linear | Specifies whether the Local Color attribute is linear (0-1 based) or hex (0-255).*If disabled, the attribute or property value will be divided by 255 internally.* | . | Depth Priority | Debug draw depth priority. -1 : draw on top of everything.0 : Regular depth sorting.1 : Draw behind everything. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html#individual-debug-settings",
    "relUrl": "/nodes/misc/misc-draw-attributes.html#individual-debug-settings"
  },"442": {
    "doc": "Draw Attributes",
    "title": "Expressions",
    "content": "As of writing time, there are a few expression available: . | Direction | Connection (Position) | Connection (Point index) | Point | Boolean | Label | . Direction . | **Extra Properties**| |   | . | Normalize Before Sizing | If enabled, the incoming vector will be normalized before it is resized and drawn. | . Connection (Position) . Draws a line between the current point’ location and the selected attribute or property as a world space position. | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Connection (Point Index) . Draws a line between the current point’ location and another point within the same group as a world space position. The selected attribute or property is used as the index for the point to use as target position. | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Note: this is a legacy tool for drawing edges, if using graphs, use Draw Edges instead. Point . | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Boolean . Boolean is similar to Point, except it is drawn at the point’ location in space. The debug color is selected based on the input value: If the value is &lt;= 0 the base color will be picked; otherwise Secondary Color is used. | **Extra Properties**| |   | . | Secondary Color | The color to be used for values &gt; 0. | . Label . Label is currently not working as expected, despite using engine APIs and not throwing any error when used. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html#expressions",
    "relUrl": "/nodes/misc/misc-draw-attributes.html#expressions"
  },"443": {
    "doc": "Draw Attributes",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html#usage",
    "relUrl": "/nodes/misc/misc-draw-attributes.html#usage"
  },"444": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-draw-attributes.html",
    "relUrl": "/nodes/misc/misc-draw-attributes.html"
  },"445": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . See Debug . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-flush-debug.html#flush-debug",
    "relUrl": "/nodes/misc/misc-flush-debug.html#flush-debug"
  },"446": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-flush-debug.html",
    "relUrl": "/nodes/misc/misc-flush-debug.html"
  },"447": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-fuse-points.html#fuse-points",
    "relUrl": "/nodes/misc/misc-fuse-points.html#fuse-points"
  },"448": {
    "doc": "Fuse Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Component Wise Radius | Whether to use a component-wise radius or a spherical one.When component-wise is enabled, distance is checked individually on X, Y and Z axis in world-space. | . | Radius | Radius within which multiple points are to be fused into a single one. | . | Preserve Order | If enabled, fused points will be sorted to maintain their original order. | . | **Blending Settings** | Control how removed points’ properties and attributes are blended into the point they are fused to.See Blending | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-fuse-points.html#properties",
    "relUrl": "/nodes/misc/misc-fuse-points.html#properties"
  },"449": {
    "doc": "Fuse Points",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-fuse-points.html#usage",
    "relUrl": "/nodes/misc/misc-fuse-points.html#usage"
  },"450": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-fuse-points.html",
    "relUrl": "/nodes/misc/misc-fuse-points.html"
  },"451": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. Table of content . | Properties . | Partition Rule | . | Why upscale? | How partition Index works . | Raw partition value | Index partition | . | Key Sum | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#partition-by-values",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#partition-by-values"
  },"452": {
    "doc": "Partition by Values",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Split Output | Whether to output individual partitions or simply write the unique partition key to an attribute. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | Key Sum | Outputs the sum of all partition keys to a int64 attribute.**This value is unlikely to be unique, but can come in handy for filtering purposes.**See [Key Sum](#key-sum) | . Partition Rule . | Property | Description | . | Enabled | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Selector | An attribute or property that will be used for partitioning. See Attribute Selectors. | . | Filter Size | The size of the partition in relation the attribute or property uses.*Higher values means fewer larger partitions; smaller values means more smaller partitions.* | . | **Input pre-processing**| |   | . | Upscale | A scale factor to apply to the selected attribute value before partitioning.*This is especially useful when working with smaller range of values like Density.*See [Why upscale?](#why-upscale). | . | Offset | An offset value added to the selected attribute value before partitioning.**Offset is added to the Upscaled value.***This allow to shift separation ‘lines’ when using spatial values for partitioning.* | . | **Partition Key Attribute**| |   | . | Key Attribute Name | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Use Partition Index as Key | Whether to use the partition Index as a key *(starting at 0, up to N partitions)* or the default output *(actual under-the-hood value used to distinguish unique buckets)*.See [How partition Index works](#how-partition-index-works). | . | **Partition Tagging***Only if Split Output is enabled*| |   | . | Tag Prefix Name | Tag the data with the partition key, using the format Prefix::PartitionKey or Prefix::PartitionIndex | . | Tag Use Partition Index as Key | Whether to use the partition Index as a key.See [How partition Index works](#how-partition-index-works). | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#properties",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#properties"
  },"453": {
    "doc": "Partition by Values",
    "title": "Why upscale?",
    "content": "Under the hood, the Partition by Values broadcast and transform the reference values to a int64 used as a unique ID for individual partition. Because of that, any value in the -1..1 range (such as Density, Steepness etc) will be rounded to the nearest integer. Upscaling fixes this problem. For example, without upscaling, [0.1, 0.25, 0.01] will be partitioned as [0, 0, 0]; so a unique 0-id’d partition. On the other end, the same set [0.1, 0.25, 0.01] upscaled by a factor of 100 will be partitioned as [10, 25, 1]; so 3 separated partitions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#why-upscale",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#why-upscale"
  },"454": {
    "doc": "Partition by Values",
    "title": "How partition Index works",
    "content": "The for each partition, the corresponding attribute value is basically upscaled, offsetted and rounded down. This operation is repeated for each partition rule, and points are then distributed into buckets which all have the same partition keys. You can either output this “key” value as-is, or use the partition index. That index correspond to the partition order when all keys are sorted by ascending order. Using a single partition rule based on $Position.X, using a filter size of 10. On the left is the detail panel, on the right is a screencap of the value debugger for that rule . Raw partition value . Index partition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#how-partition-index-works",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#how-partition-index-works"
  },"455": {
    "doc": "Partition by Values",
    "title": "Key Sum",
    "content": "The Key Sum attribute value will be, well, the sum of all unique partitions keys. It’s useful in very specific scenarios, such as when partitioning based on booleans values, in order to filter partitions. Say you have three separate boolean (or 0-1) attributes, with a partition rule set up for each of these attributes; with Use Partition Index as Key enabled. Each partition will either have a 0 or 1 unique key, with a maximum of 9 partitions created (0 0 0, 1 0 0, 0 1 0 etc.). You will only have 4 different Key Sum: 0, 1, 2 and 3, which you can use as sort-of weak flag system: . | 0 0 0 = 0 | 1 0 0 = 1 | 0 1 0 = 1 | 0 0 1 = 1 | 1 1 0 = 2 | 0 1 1 = 2 | 1 0 1 = 2 | 1 1 1 = 3 | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#key-sum",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#key-sum"
  },"456": {
    "doc": "Partition by Values",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html#usage",
    "relUrl": "/nodes/misc/misc-partition-by-values.html#usage"
  },"457": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-partition-by-values.html",
    "relUrl": "/nodes/misc/misc-partition-by-values.html"
  },"458": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-points-to-bounds.html#points-to-bounds",
    "relUrl": "/nodes/misc/misc-points-to-bounds.html#points-to-bounds"
  },"459": {
    "doc": "Points to Bounds",
    "title": "Properties",
    "content": ". Points to bound has no dedicated properties and is pretty straighforward to use. It embeds a data blender module, which you can read more about in the specific Blending section. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-points-to-bounds.html#properties",
    "relUrl": "/nodes/misc/misc-points-to-bounds.html#properties"
  },"460": {
    "doc": "Points to Bounds",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-points-to-bounds.html#usage",
    "relUrl": "/nodes/misc/misc-points-to-bounds.html#usage"
  },"461": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-points-to-bounds.html",
    "relUrl": "/nodes/misc/misc-points-to-bounds.html"
  },"462": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. Table of content . | Properties . | Rules ordering | Sorting Rule | . | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-sort-points.html#sort-points",
    "relUrl": "/nodes/misc/misc-sort-points.html#sort-points"
  },"463": {
    "doc": "Sort Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . Rules ordering . Rules are compared in the same order as in the property panel, starting at index 0. The sorting goes through each rules until it finds a valid comparison (non-equal values) – for each point. Sorting Rule . | Property | Description | . | Selector | An attribute or property to compare. See Attribute Selectors. | . | Tolerance | Equality tolerance used when comparing two values. | . | Invert Rule | Switches from the default &lt; comparison to &gt;. | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-sort-points.html#properties",
    "relUrl": "/nodes/misc/misc-sort-points.html#properties"
  },"464": {
    "doc": "Sort Points",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-sort-points.html#usage",
    "relUrl": "/nodes/misc/misc-sort-points.html#usage"
  },"465": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-sort-points.html",
    "relUrl": "/nodes/misc/misc-sort-points.html"
  },"466": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-write-index.html#write-index",
    "relUrl": "/nodes/misc/misc-write-index.html#write-index"
  },"467": {
    "doc": "Write Index",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-write-index.html#properties",
    "relUrl": "/nodes/misc/misc-write-index.html#properties"
  },"468": {
    "doc": "Write Index",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-write-index.html#usage",
    "relUrl": "/nodes/misc/misc-write-index.html#usage"
  },"469": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/misc/misc-write-index.html",
    "relUrl": "/nodes/misc/misc-write-index.html"
  },"470": {
    "doc": "Heuristic Modifiers",
    "title": "Heuristic Modifiers",
    "content": "How to use heuristic modifiers . Heuristics modifier allows fine-grained and precise control over pathfinding constraints. When dealing with modifiers, keep in mind that lower values are considered better than higher ones by the Search algorithms. Checklist . | Properties | Individual Modifier . | Properties . | Weight | Score Curve 📌 | . | Examples . | A - Linear | B - Expo | C - Inverse Expo | D - Yoyo | . | . | . The heuristic modifiers are available on all edge-based pathfinding nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html#heuristic-modifiers",
    "relUrl": "/pathfinding/heuristics/modifiers.html#heuristic-modifiers"
  },"471": {
    "doc": "Heuristic Modifiers",
    "title": "Properties",
    "content": "| Property | Description | . | Reference Weight | The reference weight is used internally by heuristics to \"adapt\" its scale against modifiers. *In other words, if the heuristic module itself was outputing a value like a modifier, this would its Weight property.* | . | **Modifier List** | A list of individual modifiers. Their values are accumulated per Source, and the final sum is used by the Search algorithm. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html#properties",
    "relUrl": "/pathfinding/heuristics/modifiers.html#properties"
  },"472": {
    "doc": "Heuristic Modifiers",
    "title": "Individual Modifier",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html#individual-modifier",
    "relUrl": "/pathfinding/heuristics/modifiers.html#individual-modifier"
  },"473": {
    "doc": "Heuristic Modifiers",
    "title": "Properties",
    "content": "| Property | Description | . | Enabled | If disabled, this modifier will be ignored by the pathfinding process. *This is basically a QoL toggle to facilitate experimentation and better understand the impact of a specific modifier when they start pilling up.* | . | Source | Source define if the attribute value of the modifier is fetched from the Vtx point data, or from the Edge point data.*See Pathfinding.* | . | **Weight** | The weight of a modifier represent its final maximum value. | . | Selector | Attribute to read modifier value from. Reads a double.*See Attribute Selectors.* | . | Local Weight | If enabled, the weight used for the modifier is fetched from a local attribute (same Source` as base value), allowing for per-point weight. | . | Score Curve | The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit.More infos below. | . Weight . Under the hood, the value of a modifier is remapped from its min/max to 0-1. That remapped value is used to sample the (Score Curve)[#score-curve] and then that value is multiplied by the weight. Depending on the selected Search, this value is post-processed to ensure it is absolute (non-negative) . Score Curve 📌 . The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit. The curve is expected to stay normalized in the 0-1 range on the y axis, and is sampled in the 0-1 range on the x axis. Just keep in mind the resulting sampled value will be made absolute (non-negative), and is used as a multiplier. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html#properties-1",
    "relUrl": "/pathfinding/heuristics/modifiers.html#properties-1"
  },"474": {
    "doc": "Heuristic Modifiers",
    "title": "Examples",
    "content": "Say we set-up a point attribute modifier using MyWeightAttribute, which has raw values ranging from -50 to 50, with a weight of 100. | Raw values will be remapped to 0-1 | The curve will be sampled, then multiplied by the weight. | . A - Linear . This is the default, linear curve. It doesn’t modulate weight, so the final weight will closely match the attribute range. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.5 | **50** | . | 25 | 0.75 | 0.75 | **75** | . | 50 | 1.0 | 1.0 | **100** | . B - Expo . Exponential curve is very useful to emphasize higher values and “ignore” lower ones. This can be especially useful when the attribute is for example the edge length, the resulting weight would strongly discourage long edges . | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0.0 | **0** | . | -25 | 0.25 | 0.01 | **1** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.25 | **25** | . | 50 | 1.0 | 1.0 | **100** | . C - Inverse Expo . Inverted curve (exponential or not) curve is very useful to, well, inverse the weight. This is especially handy if you want to discourage smaller values and ignore higher ones. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 1 | **100** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.01 | **1** | . | 50 | 1.0 | 0 | **0** | . D - Yoyo . This is really just here to make a comparison with other more classic approaches. This resulting weight would ignore extreme values inside the range and strongly discourage anything closer to the center. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.5 | **50** | . | 0 | 0.5 | 1 | **100** | . | 25 | 0.75 | 0.5 | **50** | . | 50 | 1.0 | 0 | **0** | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html#examples",
    "relUrl": "/pathfinding/heuristics/modifiers.html#examples"
  },"475": {
    "doc": "Heuristic Modifiers",
    "title": "Heuristic Modifiers",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/heuristics/modifiers.html",
    "relUrl": "/pathfinding/heuristics/modifiers.html"
  },"476": {
    "doc": "Average",
    "title": "Average",
    "content": "Average between previous and next . This is an overview of the Font Editor. Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-average.html#average",
    "relUrl": "/docs/orienting/orient-average.html#average"
  },"477": {
    "doc": "Average",
    "title": "Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-average.html",
    "relUrl": "/docs/orienting/orient-average.html"
  },"478": {
    "doc": "LookAt",
    "title": "LookAt",
    "content": "Look at next . This is an overview of the Font Editor. Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-lookat.html#lookat",
    "relUrl": "/docs/orienting/orient-lookat.html#lookat"
  },"479": {
    "doc": "LookAt",
    "title": "LookAt",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-lookat.html",
    "relUrl": "/docs/orienting/orient-lookat.html"
  },"480": {
    "doc": "Weighted",
    "title": "Weighted",
    "content": "Distance-weighted interpolation . This is an overview of the Font Editor. Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-weighted.html#weighted",
    "relUrl": "/docs/orienting/orient-weighted.html#weighted"
  },"481": {
    "doc": "Weighted",
    "title": "Weighted",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/orienting/orient-weighted.html",
    "relUrl": "/docs/orienting/orient-weighted.html"
  },"482": {
    "doc": "Statistics",
    "title": "Statistics",
    "content": "Path statistics output . Shared “Statistic” output documentation. Statitics is a property object available on both Edges Pathfinding and Plot Edges Pathfinding. This feature is not implemented yet. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/path-statistics.html#statistics",
    "relUrl": "/pathfinding/path-statistics.html#statistics"
  },"483": {
    "doc": "Statistics",
    "title": "Statistics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/path-statistics.html",
    "relUrl": "/pathfinding/path-statistics.html"
  },"484": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. Table of content . | Properties | Usage | Heuristics | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#plot-edges-pathfinding",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#plot-edges-pathfinding"
  },"485": {
    "doc": "Plot Edges Pathfinding",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#properties",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#properties"
  },"486": {
    "doc": "Plot Edges Pathfinding",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#usage",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#usage"
  },"487": {
    "doc": "Plot Edges Pathfinding",
    "title": "Heuristics",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#heuristics",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#heuristics"
  },"488": {
    "doc": "Plot Edges Pathfinding",
    "title": "Modifiers Only",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#modifiers-only",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#modifiers-only"
  },"489": {
    "doc": "Plot Edges Pathfinding",
    "title": "Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#shortest-distance",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#shortest-distance"
  },"490": {
    "doc": "Plot Edges Pathfinding",
    "title": "Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#direction",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#direction"
  },"491": {
    "doc": "Plot Edges Pathfinding",
    "title": "Local Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#local-distance",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#local-distance"
  },"492": {
    "doc": "Plot Edges Pathfinding",
    "title": "Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html#least-nodes",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html#least-nodes"
  },"493": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges-plot.html",
    "relUrl": "/nodes/pathfinder/pathfinding-edges-plot.html"
  },"494": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. Table of content . | Properties | Usage | Heuristics | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#edges-pathfinding",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#edges-pathfinding"
  },"495": {
    "doc": "Edges Pathfinding",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#properties",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#properties"
  },"496": {
    "doc": "Edges Pathfinding",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#usage",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#usage"
  },"497": {
    "doc": "Edges Pathfinding",
    "title": "Heuristics",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#heuristics",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#heuristics"
  },"498": {
    "doc": "Edges Pathfinding",
    "title": "Modifiers Only",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#modifiers-only",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#modifiers-only"
  },"499": {
    "doc": "Edges Pathfinding",
    "title": "Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#shortest-distance",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#shortest-distance"
  },"500": {
    "doc": "Edges Pathfinding",
    "title": "Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#direction",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#direction"
  },"501": {
    "doc": "Edges Pathfinding",
    "title": "Local Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#local-distance",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#local-distance"
  },"502": {
    "doc": "Edges Pathfinding",
    "title": "Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html#least-nodes",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html#least-nodes"
  },"503": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-edges.html",
    "relUrl": "/nodes/pathfinder/pathfinding-edges.html"
  },"504": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Plot Navmesh Pathfinding",
    "content": "Find a path that goes through multiple chained points. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh-plot.html#plot-navmesh-pathfinding",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh-plot.html#plot-navmesh-pathfinding"
  },"505": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh-plot.html#properties",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh-plot.html#properties"
  },"506": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh-plot.html#usage",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh-plot.html#usage"
  },"507": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Plot Navmesh Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh-plot.html",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh-plot.html"
  },"508": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh.html#navmesh-pathfinding",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh.html#navmesh-pathfinding"
  },"509": {
    "doc": "Navmesh Pathfinding",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh.html#properties",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh.html#properties"
  },"510": {
    "doc": "Navmesh Pathfinding",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh.html#usage",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh.html#usage"
  },"511": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/pathfinder/pathfinding-navmesh.html",
    "relUrl": "/nodes/pathfinder/pathfinding-navmesh.html"
  },"512": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-fuse-collinear.html#fuse-collinear",
    "relUrl": "/nodes/paths/paths-fuse-collinear.html#fuse-collinear"
  },"513": {
    "doc": "Fuse Collinear",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-fuse-collinear.html#properties",
    "relUrl": "/nodes/paths/paths-fuse-collinear.html#properties"
  },"514": {
    "doc": "Fuse Collinear",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-fuse-collinear.html#usage",
    "relUrl": "/nodes/paths/paths-fuse-collinear.html#usage"
  },"515": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-fuse-collinear.html",
    "relUrl": "/nodes/paths/paths-fuse-collinear.html"
  },"516": {
    "doc": "Orient",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . Table of content . | Properties | Orienting | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#orient",
    "relUrl": "/nodes/paths/paths-orient.html#orient"
  },"517": {
    "doc": "Orient",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#properties",
    "relUrl": "/nodes/paths/paths-orient.html#properties"
  },"518": {
    "doc": "Orient",
    "title": "Orienting",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#orienting",
    "relUrl": "/nodes/paths/paths-orient.html#orienting"
  },"519": {
    "doc": "Orient",
    "title": "LookAt",
    "content": "Look at next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#lookat",
    "relUrl": "/nodes/paths/paths-orient.html#lookat"
  },"520": {
    "doc": "Orient",
    "title": "Weighted",
    "content": "Distance-weighted interpolation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#weighted",
    "relUrl": "/nodes/paths/paths-orient.html#weighted"
  },"521": {
    "doc": "Orient",
    "title": "Average",
    "content": "Average between previous and next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#average",
    "relUrl": "/nodes/paths/paths-orient.html#average"
  },"522": {
    "doc": "Orient",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html#usage",
    "relUrl": "/nodes/paths/paths-orient.html#usage"
  },"523": {
    "doc": "Orient",
    "title": "Orient",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-orient.html",
    "relUrl": "/nodes/paths/paths-orient.html"
  },"524": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . Table of content . | Properties | Usage | Smoothing | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#smooth",
    "relUrl": "/nodes/paths/paths-smooth.html#smooth"
  },"525": {
    "doc": "Smooth",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#properties",
    "relUrl": "/nodes/paths/paths-smooth.html#properties"
  },"526": {
    "doc": "Smooth",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#usage",
    "relUrl": "/nodes/paths/paths-smooth.html#usage"
  },"527": {
    "doc": "Smooth",
    "title": "Smoothing",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#smoothing",
    "relUrl": "/nodes/paths/paths-smooth.html#smoothing"
  },"528": {
    "doc": "Smooth",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#radius",
    "relUrl": "/nodes/paths/paths-smooth.html#radius"
  },"529": {
    "doc": "Smooth",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html#moving-average",
    "relUrl": "/nodes/paths/paths-smooth.html#moving-average"
  },"530": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-smooth.html",
    "relUrl": "/nodes/paths/paths-smooth.html"
  },"531": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . Table of content . | Properties | Usage | Blending | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#subdivide",
    "relUrl": "/nodes/paths/paths-subdivide.html#subdivide"
  },"532": {
    "doc": "Subdivide",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#properties",
    "relUrl": "/nodes/paths/paths-subdivide.html#properties"
  },"533": {
    "doc": "Subdivide",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#usage",
    "relUrl": "/nodes/paths/paths-subdivide.html#usage"
  },"534": {
    "doc": "Subdivide",
    "title": "Blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#blending",
    "relUrl": "/nodes/paths/paths-subdivide.html#blending"
  },"535": {
    "doc": "Subdivide",
    "title": "Interpolate",
    "content": "Subtitle . Interpolate values between first and last point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#interpolate",
    "relUrl": "/nodes/paths/paths-subdivide.html#interpolate"
  },"536": {
    "doc": "Subdivide",
    "title": "Inherit First",
    "content": "Copy the first point’ values . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#inherit-first",
    "relUrl": "/nodes/paths/paths-subdivide.html#inherit-first"
  },"537": {
    "doc": "Subdivide",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html#inherit-last",
    "relUrl": "/nodes/paths/paths-subdivide.html#inherit-last"
  },"538": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-subdivide.html",
    "relUrl": "/nodes/paths/paths-subdivide.html"
  },"539": {
    "doc": "Paths to Edge Clusters",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-to-edges.html#paths-to-edge-clusters",
    "relUrl": "/nodes/paths/paths-to-edges.html#paths-to-edge-clusters"
  },"540": {
    "doc": "Paths to Edge Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-to-edges.html#properties",
    "relUrl": "/nodes/paths/paths-to-edges.html#properties"
  },"541": {
    "doc": "Paths to Edge Clusters",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-to-edges.html#usage",
    "relUrl": "/nodes/paths/paths-to-edges.html#usage"
  },"542": {
    "doc": "Paths to Edge Clusters",
    "title": "Paths to Edge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-to-edges.html",
    "relUrl": "/nodes/paths/paths-to-edges.html"
  },"543": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": "Subtitle . Table of content . | Properties | Usage | Tangents | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#write-tangents",
    "relUrl": "/nodes/paths/paths-write-tangents.html#write-tangents"
  },"544": {
    "doc": "Write Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#properties",
    "relUrl": "/nodes/paths/paths-write-tangents.html#properties"
  },"545": {
    "doc": "Write Tangents",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#usage",
    "relUrl": "/nodes/paths/paths-write-tangents.html#usage"
  },"546": {
    "doc": "Write Tangents",
    "title": "Tangents",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#tangents",
    "relUrl": "/nodes/paths/paths-write-tangents.html#tangents"
  },"547": {
    "doc": "Write Tangents",
    "title": "Auto Tangents",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#auto-tangents",
    "relUrl": "/nodes/paths/paths-write-tangents.html#auto-tangents"
  },"548": {
    "doc": "Write Tangents",
    "title": "Custom Tangents",
    "content": "Custom attribute-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html#custom-tangents",
    "relUrl": "/nodes/paths/paths-write-tangents.html#custom-tangents"
  },"549": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/paths/paths-write-tangents.html",
    "relUrl": "/nodes/paths/paths-write-tangents.html"
  },"550": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. A lot of the nodes in PCGEx allow you to select local values or attributes to further tweak and alter the way data is processed. These selectors inherit from native PCG implementation and support both point properties and attribute names as strings. In PCGEx, this is only supported when reading from attributes, not writing to them. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-attribute-selectors.html#attribute-selectors",
    "relUrl": "/docs/pcgex-attribute-selectors.html#attribute-selectors"
  },"551": {
    "doc": "Attribute Selectors",
    "title": "Component selection",
    "content": "PCG natively support suffixing properties &amp; attribute with selectors, such as .X, .Y, .Z; as shown in the debug view. This means you can safely use $Position.Z inside an attribute selector in order to select the Z value of the Position vector. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-attribute-selectors.html#component-selection",
    "relUrl": "/docs/pcgex-attribute-selectors.html#component-selection"
  },"552": {
    "doc": "Attribute Selectors",
    "title": "Extra Selectors",
    "content": "PCGEx expand a tiny bit on that and support additional properties, depending on the underlying data type: . Note that these extra selectors are not case sensitive, and can be used additively: $Transform.Backward.Length is a valid selectors. | Selector | Data | . | : **Vectors** :| |   | . | | Uses the X component (Vector2D, Vector, Vector4) | . | | Uses the Y component (Vector2D, Vector, Vector4) | . | | Uses the Z component (Vector, Vector4), fallbacks to Y. | . | | Uses the W component (Vector4), fallbacks to Z | . | , , | Uses the length of the vector | . | : **Color** :| |   | . | | Uses the Red value | . | | Uses the Green value | . | | Uses the Blue value | . | | Uses the Alpha value | . | : **Rotators** :| |   | . | , , | Uses the Roll component | . | , , | Uses the Yaw component | . | , , | Uses the Pitch component | . | : **Quaternions &amp; Transforms** :| |   | . | , | Uses the Forward direction vector | . | , | Uses the Backward direction vector | . | | Uses the Right direction vector | . | | Uses the Roll direction vector | . | , | Uses the Up direction vector | . | , | Uses the Down direction vector | . | : **Transforms** :| |   | . | , | Uses the Position component (Vector) | . | , , | Uses the Rotation component (Quaternion) | . | | Uses the Scale component (Vector) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-attribute-selectors.html#extra-selectors",
    "relUrl": "/docs/pcgex-attribute-selectors.html#extra-selectors"
  },"553": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-attribute-selectors.html",
    "relUrl": "/docs/pcgex-attribute-selectors.html"
  },"554": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. Almost every node in the PCGEx inherit from the same point processor, and as such they have some shared capabilities. PCGEx has a focus on performance and multithreading – very few nodes are actively computing anything on the main thread, and instead the bulk of the tasks is handled asynchronously; and parallelized whenever possible. This helps keeping the editor relatively smooth when performing heavy tasks. Because of the parallelization, a very few select nodes have non-deterministic outputs; meaning they will yield slightly different results between two runs. These nodes are flagged in the doc. This is something I’m working to fix to ensure all nodes have deterministic results. Common Tweaks . | Performance . | Do Async Processing | Chunk Size | Cache Result | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-node.html#pcgex-nodes",
    "relUrl": "/docs/pcgex-node.html#pcgex-nodes"
  },"555": {
    "doc": "PCGEx Nodes",
    "title": "Performance",
    "content": ". Do Async Processing . Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. (This is a cheap workaround to ensure deterministic result in nodes that are otherwise non-deterministic due to parallel processing) . Note that synchronous execution still processes data in chunks, it just does it with guaranteed order, as opposed to parallel processing. Chunk Size . The chunk size usually represents the number of point a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you’re just hogging thread ressources. Ultimately, it depends on your specific setup. A value of -1 fallbacks to that specific’ node default value under the hood. Unreal PCG plugin recommend a minimum batch size of 256, which is the default value I’m using for most of the nodes. Heavier operations can go as low as 32. Cache Result . Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it’s a compile-time choice, not an editor-time one. I exposed the ability to cache on-demand at the price of some harmless asserts, because once you’re done iterating on certain settings, it’s worth caching the results. Be aware that the cache is easily corrupted, and sometime leads to missing points or data; it’s still a small price to pay when you’re working iteratively with hundreds of thousands points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-node.html#performance",
    "relUrl": "/docs/pcgex-node.html#performance"
  },"556": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/pcgex-node.html",
    "relUrl": "/docs/pcgex-node.html"
  },"557": {
    "doc": "Goal from Attribute",
    "title": "Goal from Attribute",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute",
    "relUrl": "/pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute"
  },"558": {
    "doc": "Goal from Attribute",
    "title": "Goal from Attribute",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-attribute.html",
    "relUrl": "/pathfinding/goal-pickers/picker-attribute.html"
  },"559": {
    "doc": "Default",
    "title": "Default",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-default.html#default",
    "relUrl": "/pathfinding/goal-pickers/picker-default.html#default"
  },"560": {
    "doc": "Default",
    "title": "Default",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-default.html",
    "relUrl": "/pathfinding/goal-pickers/picker-default.html"
  },"561": {
    "doc": "Random",
    "title": "Random",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-random.html#random",
    "relUrl": "/pathfinding/goal-pickers/picker-random.html#random"
  },"562": {
    "doc": "Random",
    "title": "Random",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/goal-pickers/picker-random.html",
    "relUrl": "/pathfinding/goal-pickers/picker-random.html"
  },"563": {
    "doc": "Minimum Spanning Tree",
    "title": "Minimum Spanning Tree",
    "content": "Index-based moving-average sampling . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/prim-mst.html#minimum-spanning-tree",
    "relUrl": "/docs/refining/prim-mst.html#minimum-spanning-tree"
  },"564": {
    "doc": "Minimum Spanning Tree",
    "title": "Minimum Spanning Tree",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/refining/prim-mst.html",
    "relUrl": "/docs/refining/prim-mst.html"
  },"565": {
    "doc": "Projection Settings",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, when relevant. | Property | Description | . | Project Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/projection-settings.html#projection-settings",
    "relUrl": "/nodes/graphs/projection-settings.html#projection-settings"
  },"566": {
    "doc": "Projection Settings",
    "title": "Projection Settings",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/graphs/projection-settings.html",
    "relUrl": "/nodes/graphs/projection-settings.html"
  },"567": {
    "doc": "Force Directed",
    "title": "Force Directed",
    "content": "Force-directed relaxation . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/relax-force-directed.html#force-directed",
    "relUrl": "/docs/relaxing/relax-force-directed.html#force-directed"
  },"568": {
    "doc": "Force Directed",
    "title": "Force Directed",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/relax-force-directed.html",
    "relUrl": "/docs/relaxing/relax-force-directed.html"
  },"569": {
    "doc": "Laplacian",
    "title": "Laplacian",
    "content": "Laplacian / Poisson relaxation . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/relax-laplacian.html#laplacian",
    "relUrl": "/docs/relaxing/relax-laplacian.html#laplacian"
  },"570": {
    "doc": "Laplacian",
    "title": "Laplacian",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/relaxing/relax-laplacian.html",
    "relUrl": "/docs/relaxing/relax-laplacian.html"
  },"571": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-point.html#sample-nearest-points",
    "relUrl": "/nodes/sampling/sampling-nearest-point.html#sample-nearest-points"
  },"572": {
    "doc": "Sample Nearest Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-point.html#properties",
    "relUrl": "/nodes/sampling/sampling-nearest-point.html#properties"
  },"573": {
    "doc": "Sample Nearest Points",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-point.html#usage",
    "relUrl": "/nodes/sampling/sampling-nearest-point.html#usage"
  },"574": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-point.html",
    "relUrl": "/nodes/sampling/sampling-nearest-point.html"
  },"575": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-polyline.html#sample-nearest-polyline",
    "relUrl": "/nodes/sampling/sampling-nearest-polyline.html#sample-nearest-polyline"
  },"576": {
    "doc": "Sample Nearest Polyline",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-polyline.html#properties",
    "relUrl": "/nodes/sampling/sampling-nearest-polyline.html#properties"
  },"577": {
    "doc": "Sample Nearest Polyline",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-polyline.html#usage",
    "relUrl": "/nodes/sampling/sampling-nearest-polyline.html#usage"
  },"578": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-polyline.html",
    "relUrl": "/nodes/sampling/sampling-nearest-polyline.html"
  },"579": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-surface.html#sample-nearest-surface",
    "relUrl": "/nodes/sampling/sampling-nearest-surface.html#sample-nearest-surface"
  },"580": {
    "doc": "Sample Nearest Surface",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-surface.html#properties",
    "relUrl": "/nodes/sampling/sampling-nearest-surface.html#properties"
  },"581": {
    "doc": "Sample Nearest Surface",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-surface.html#usage",
    "relUrl": "/nodes/sampling/sampling-nearest-surface.html#usage"
  },"582": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-nearest-surface.html",
    "relUrl": "/nodes/sampling/sampling-nearest-surface.html"
  },"583": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . Table of content . | Properties | Usage | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-surface-guided.html#guided-trace",
    "relUrl": "/nodes/sampling/sampling-surface-guided.html#guided-trace"
  },"584": {
    "doc": "Guided Trace",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-surface-guided.html#properties",
    "relUrl": "/nodes/sampling/sampling-surface-guided.html#properties"
  },"585": {
    "doc": "Guided Trace",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-surface-guided.html#usage",
    "relUrl": "/nodes/sampling/sampling-surface-guided.html#usage"
  },"586": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/nodes/sampling/sampling-surface-guided.html",
    "relUrl": "/nodes/sampling/sampling-surface-guided.html"
  },"587": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/search-astar.html#a-star",
    "relUrl": "/pathfinding/search/search-astar.html#a-star"
  },"588": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/search-astar.html",
    "relUrl": "/pathfinding/search/search-astar.html"
  },"589": {
    "doc": "Djikstra",
    "title": "Djikstra",
    "content": "Subtitle . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/search-djikstra.html#djikstra",
    "relUrl": "/pathfinding/search/search-djikstra.html#djikstra"
  },"590": {
    "doc": "Djikstra",
    "title": "Djikstra",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/pathfinding/search/search-djikstra.html",
    "relUrl": "/pathfinding/search/search-djikstra.html"
  },"591": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/smoothing-moving-average.html#moving-average",
    "relUrl": "/docs/smoothing/smoothing-moving-average.html#moving-average"
  },"592": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/smoothing-moving-average.html",
    "relUrl": "/docs/smoothing/smoothing-moving-average.html"
  },"593": {
    "doc": "Radius",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/smoothing-radius.html#radius",
    "relUrl": "/docs/smoothing/smoothing-radius.html#radius"
  },"594": {
    "doc": "Radius",
    "title": "Radius",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/smoothing/smoothing-radius.html",
    "relUrl": "/docs/smoothing/smoothing-radius.html"
  },"595": {
    "doc": "Auto Tangents",
    "title": "Auto Tangents",
    "content": "Neighbor-based tangents . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/tangent-auto.html#auto-tangents",
    "relUrl": "/docs/tangents/tangent-auto.html#auto-tangents"
  },"596": {
    "doc": "Auto Tangents",
    "title": "Auto Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/tangent-auto.html",
    "relUrl": "/docs/tangents/tangent-auto.html"
  },"597": {
    "doc": "Custom Tangents",
    "title": "Custom Tangents",
    "content": "Custom attribute-based tangents . Table of content . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/tangent-custom.html#custom-tangents",
    "relUrl": "/docs/tangents/tangent-custom.html#custom-tangents"
  },"598": {
    "doc": "Custom Tangents",
    "title": "Custom Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/tangents/tangent-custom.html",
    "relUrl": "/docs/tangents/tangent-custom.html"
  },"599": {
    "doc": "Working with Graphs",
    "title": "Working with Graphs",
    "content": "Vtx? Edges? . A summary of what “graph” means and entails in the context of PCGEx. One of the main focus of PCGEx is working with graphs and edge-based structures. They’re akin to a mesh without faces: a bunch of vertices connected by a bunch of edges. PCGEx leverage PCG’ point data as data holders in order to enable easy tweaking and manipulation of edge/vertice data using existing vanilla nodes. In short, a graph is represented by at least two separate set of points: the first, Vtx represent individual vertices; others, Edges, represent interconnected clusters. Edges points stores the indices of their start and end point in the matching Vtx group. Because of that approach, nodes that work with graph require Vtx and Edges as separate inputs. Data Tags are used to mark which edges match which vertices, so you will see additional tags appear on your data, formatted as PCGEx/Cluster::UID. Rule of thumb : If you manually alter (as in add or remove points) the content of a Vtx or Edges created by a PCGEx Node, make sure to use the Sanitize Clusters node before using them as inputs for other PCGEx nodes. Checklist . | Vtx . | Cached Index | Cached Edge Num | . | Edges . | Edge Start | Edge End | . | Clusters | Graph Output Settings 📌 | Important Notes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#working-with-graphs",
    "relUrl": "/docs/working-with-graphs.html#working-with-graphs"
  },"600": {
    "doc": "Working with Graphs",
    "title": "Vtx",
    "content": "A Vtx has two important piece of data written on it, and their position in space is relied upon for edge metrics – Vtx being edges’ start and end points. Cached Index . The PCGEx/CachedIndex attribute hold the index of the Vtx when it was written into a graph. This is the index PCGEx/EdgeStart and PCGEx/EdgeEnd refers to on the Edges points. It is primarily useful to know whether the vtx structure has been altered or not, and ensure the graph is safe to use to avoid exceptions. Cached Edge Num . The PCGEx/CachedEdgeNum attribute hold the number of edges connected to that Vtx when it was written into a graph. It is solely used for validation purposes when rebuilding a cluster to process it. Note that this attribute can be reliably fetched to know how many unique edges are connected to a Vtx ;) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#vtx",
    "relUrl": "/docs/working-with-graphs.html#vtx"
  },"601": {
    "doc": "Working with Graphs",
    "title": "Edges",
    "content": "Rule of thumb : The only information that matter on Edges for graphs is their start and end attribute. Their position in space is ignored so feel free to use those points if they can be relevant to you. Edges have two important piece of data written on them, and everything else is pretty much ignored by PCGEx – meaning you can use the set of point almost as you see fit. Edge Start . The PCGEx/EdgeStart attribute hold the cached index of its start Vtx when it was written into a graph. Edge End . The PCGEx/EdgeEnd attribute hold the cached index of its end Vtx when it was written into a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#edges",
    "relUrl": "/docs/working-with-graphs.html#edges"
  },"602": {
    "doc": "Working with Graphs",
    "title": "Clusters",
    "content": "In PCGEx terms, a cluster is “a set of Vtx and Edges that are interconnected in a finite way” – in other words, there is a guaranteed way inside a cluster that a path can be found between any Vtx to any other Vtx when passing through Edges. A graph usually has a single set of vertices, but will output as many edge datasets as there are clusters. These will be then rebuilt inside the nodes to be processed. If you’re unhappy with how clusters have been split in your graph, Bridge Clusters is here to save your day! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#clusters",
    "relUrl": "/docs/working-with-graphs.html#clusters"
  },"603": {
    "doc": "Working with Graphs",
    "title": "Graph Output Settings 📌",
    "content": ". This is a setting block you will see in a form or another on nodes that output sanitized graphs. They expose controls/filters over the Vtx/Edges output of the node to make sure the output is sanitized, i.e, that it can be safely traversed by pathfinding search algorithms. See the Sanitize Clusters node for more infos, as it encapsulate the sanitization behavior embedded in many other nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#graph-output-settings-",
    "relUrl": "/docs/working-with-graphs.html#graph-output-settings-"
  },"604": {
    "doc": "Working with Graphs",
    "title": "Important Notes",
    "content": "Altering PCGEx/CachedIndex, PCGEx/CachedEdgeNum, PCGEx/EdgeStart or PCGEx/EdgeEnd voids the guarantee that PCGEx nodes will work as expected. The UID used for the tagging is NOT deterministic, and will change at each execution of the graph, and for each node. It is used under the hood only, and should not be edited, nor relied upon for any kind of tag-related operations. For the same reason, if you create custom tags starting with PCGEx/Cluster::, it will break existing vtx/edge associations. Because of the reliance on the tagging system, if you edit Vtx and Edges before using them with a PCGEx node, make sure tags are preserved. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html#important-notes",
    "relUrl": "/docs/working-with-graphs.html#important-notes"
  },"605": {
    "doc": "Working with Graphs",
    "title": "Working with Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/docs/working-with-graphs.html",
    "relUrl": "/docs/working-with-graphs.html"
  }
}
