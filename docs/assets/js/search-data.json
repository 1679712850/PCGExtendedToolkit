{"0": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": "Frequently Asked Questions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#faq",
    "relUrl": "/FAQ.html#faq"
  },"1": {
    "doc": "F.A.Q",
    "title": "Q: I get ‚ÄúEnsure condition failed: InDependenciesCrc.IsValid()‚Äù when caching/uncaching PCGEx nodes!",
    "content": "Yes. It‚Äôs ok, you can ignore these. PCG isn‚Äôt natively architectured to support node that switch between cacheable/not-cacheable, which sometime generates failed checks. It‚Äôs annoying but is harmless. The benefits of switching caching mode outweights the assert in my opinion ‚Äì if that bugs you, don‚Äôt touch to the checkbox, it‚Äôs generally safer not to ship with cached data anyway. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes",
    "relUrl": "/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes"
  },"2": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html",
    "relUrl": "/FAQ.html"
  },"3": {
    "doc": "About",
    "title": "I‚Äôm Tim!",
    "content": "I made this. Follow @Nebukam . I made PCGEx as a way to bring some my personal Houdini toolkit into Unreal, and figured it could be useful to my fellow artists and designers. I love my current workflow &amp; tools when it comes to procedural generation, and often needed ways to generate data &amp; structures to‚Ä¶ well, generate more data and structures to spawn stuff on. Unreal PCG has powerful tools to generate and work with splines, but unless you‚Äôre making them by hand, spline are a pain to manipulate and maintain at scale ‚Äì that‚Äôs the main reason why I wanted to have tools to create graphs and pathfind in them. Turns out, it‚Äôs useful for plenty of other things :) . Special Thanks . Massive kudo to MikeC, who has been an early adopter, and whose feedback and suggestions tremendously helped make PCGEx a better and more useful tool &lt;3 Also thanks to Sinbad, as I shamelessly pasted some of his C++ formatting and practices for this documentation ^_^ . Source code . PCGEx is licensed under MIT : if you want to look at the code, or if you‚Äôre worried it could hurt your machine, the code is available in full on github. It does not rely on nor embbed any third party library/dlls. Bugs! . If you encounter a bug, please fill an issue here. Please provide as much information as you can (stack traces, node setup, ‚Ä¶). Improvement &amp; Feature Requests . If you have a feature or improvement requestion, please start a discussion here! . Footnotes &amp; Credits . | I am not affiliated with Unreal! | Photo of Edsger W. Dijkstra from Wikipedia, (c) Hamilton Richards / CC BY-SA 3.0 : source | Photo of Bertran Raphael from Wikipedia, (c) Blogjack / CC BY-SA 3.0 : source | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/#im-tim",
    "relUrl": "/about/#im-tim"
  },"4": {
    "doc": "About",
    "title": "About",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/",
    "relUrl": "/about/"
  },"5": {
    "doc": "üùê Write Attributes",
    "title": "üùê Write Attributes",
    "content": "The **Write Attribute action‚Ä¶** . TBD . ConditionsFilters used as condition to check which match to choose from Match SuccessAttributes that will be written if the conditions pass Match FailAttributes that will be written if the conditions fails ActionA single action definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-attributes.html#write-attributes",
    "relUrl": "/doc-misc/conditional-actions/action-write-attributes.html#write-attributes"
  },"6": {
    "doc": "üùê Write Attributes",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-attributes.html#properties",
    "relUrl": "/doc-misc/conditional-actions/action-write-attributes.html#properties"
  },"7": {
    "doc": "üùê Write Attributes",
    "title": "üùê Write Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-attributes.html",
    "relUrl": "/doc-misc/conditional-actions/action-write-attributes.html"
  },"8": {
    "doc": "üùê Write Result",
    "title": "üùê Write Result",
    "content": "The **Write Results action‚Ä¶** . TBD . ConditionsFilters whose results will be consolidated and written to an attribute ActionA single action definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-result.html#write-result",
    "relUrl": "/doc-misc/conditional-actions/action-write-result.html#write-result"
  },"9": {
    "doc": "üùê Write Result",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-result.html#properties",
    "relUrl": "/doc-misc/conditional-actions/action-write-result.html#properties"
  },"10": {
    "doc": "üùê Write Result",
    "title": "üùê Write Result",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/action-write-result.html",
    "relUrl": "/doc-misc/conditional-actions/action-write-result.html"
  },"11": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": "Comprehensive list of all PCGEx nodes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#all-nodes",
    "relUrl": "/all-nodes.html#all-nodes"
  },"12": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#all-nodes",
    "relUrl": "/all-nodes.html#all-nodes"
  },"13": {
    "doc": "All Nodes",
    "title": "Cluster Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#cluster-nodes",
    "relUrl": "/all-nodes.html#cluster-nodes"
  },"14": {
    "doc": "All Nodes",
    "title": "Connect Points",
    "content": "Creates connections between points using various probes. ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#connect-points",
    "relUrl": "/all-nodes.html#connect-points"
  },"15": {
    "doc": "All Nodes",
    "title": "Graphs",
    "content": "Delaunay 2D / 3D, Voronoi 2D / 3D . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#graphs",
    "relUrl": "/all-nodes.html#graphs"
  },"16": {
    "doc": "All Nodes",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable cluster clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#mesh-to-clusters",
    "relUrl": "/all-nodes.html#mesh-to-clusters"
  },"17": {
    "doc": "All Nodes",
    "title": "Flag Nodes",
    "content": "Find conditional-based states to nodes within a graph . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#flag-nodes",
    "relUrl": "/all-nodes.html#flag-nodes"
  },"18": {
    "doc": "All Nodes",
    "title": "Copy Cluster to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#copy-cluster-to-points",
    "relUrl": "/all-nodes.html#copy-cluster-to-points"
  },"19": {
    "doc": "All Nodes",
    "title": "Break to Paths",
    "content": "Breaks clusters edge chains into individual paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#break-to-paths",
    "relUrl": "/all-nodes.html#break-to-paths"
  },"20": {
    "doc": "All Nodes",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-clusters",
    "relUrl": "/all-nodes.html#fuse-clusters"
  },"21": {
    "doc": "All Nodes",
    "title": "Hulls",
    "content": "Convex hull algorithms . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#hulls",
    "relUrl": "/all-nodes.html#hulls"
  },"22": {
    "doc": "All Nodes",
    "title": "Pick Closest Clusters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#pick-closest-clusters",
    "relUrl": "/all-nodes.html#pick-closest-clusters"
  },"23": {
    "doc": "All Nodes",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#partition-vertices",
    "relUrl": "/all-nodes.html#partition-vertices"
  },"24": {
    "doc": "All Nodes",
    "title": "Make Unique",
    "content": "Forward clusters with a new pair of unique tags. Like a copy, only much faster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#make-unique",
    "relUrl": "/all-nodes.html#make-unique"
  },"25": {
    "doc": "All Nodes",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sanitize-clusters",
    "relUrl": "/all-nodes.html#sanitize-clusters"
  },"26": {
    "doc": "All Nodes",
    "title": "Packing Clusters",
    "content": "Two nodes to conveniently pack/unpack cluster data. ¬∑ ¬∑ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#packing-clusters",
    "relUrl": "/all-nodes.html#packing-clusters"
  },"27": {
    "doc": "All Nodes",
    "title": "Edges Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#edges-nodes",
    "relUrl": "/all-nodes.html#edges-nodes"
  },"28": {
    "doc": "All Nodes",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#pathfinding-nodes",
    "relUrl": "/all-nodes.html#pathfinding-nodes"
  },"29": {
    "doc": "All Nodes",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#edges-pathfinding",
    "relUrl": "/all-nodes.html#edges-pathfinding"
  },"30": {
    "doc": "All Nodes",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#plot-edges-pathfinding",
    "relUrl": "/all-nodes.html#plot-edges-pathfinding"
  },"31": {
    "doc": "All Nodes",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#navmesh-pathfinding",
    "relUrl": "/all-nodes.html#navmesh-pathfinding"
  },"32": {
    "doc": "All Nodes",
    "title": "Plot Navmesh",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#plot-navmesh",
    "relUrl": "/all-nodes.html#plot-navmesh"
  },"33": {
    "doc": "All Nodes",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#paths-nodes",
    "relUrl": "/all-nodes.html#paths-nodes"
  },"34": {
    "doc": "All Nodes",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#smooth",
    "relUrl": "/all-nodes.html#smooth"
  },"35": {
    "doc": "All Nodes",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#orient",
    "relUrl": "/all-nodes.html#orient"
  },"36": {
    "doc": "All Nodes",
    "title": "Path Spline Mesh",
    "content": "Create SplineMesh components from paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#path-spline-mesh",
    "relUrl": "/all-nodes.html#path-spline-mesh"
  },"37": {
    "doc": "All Nodes",
    "title": "Solidify Path",
    "content": "Solidify paths into ‚Äúedges‚Äù . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#solidify-path",
    "relUrl": "/all-nodes.html#solidify-path"
  },"38": {
    "doc": "All Nodes",
    "title": "Path √ó Path Crossings",
    "content": "Find crossings within &amp; against paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#path--path-crossings",
    "relUrl": "/all-nodes.html#path--path-crossings"
  },"39": {
    "doc": "All Nodes",
    "title": "Path √ó Bounds Intersections",
    "content": "Find intersections with points bounds. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#path--bounds-intersections",
    "relUrl": "/all-nodes.html#path--bounds-intersections"
  },"40": {
    "doc": "All Nodes",
    "title": "Blend",
    "content": "Blend individual points between from paths‚Äô start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#blend",
    "relUrl": "/all-nodes.html#blend"
  },"41": {
    "doc": "All Nodes",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-collinear",
    "relUrl": "/all-nodes.html#fuse-collinear"
  },"42": {
    "doc": "All Nodes",
    "title": "Offset",
    "content": "Offset path along a direction . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#offset",
    "relUrl": "/all-nodes.html#offset"
  },"43": {
    "doc": "All Nodes",
    "title": "Attribute Rolling",
    "content": "Does a rolling operation over properties &amp; attributes along a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#attribute-rolling",
    "relUrl": "/all-nodes.html#attribute-rolling"
  },"44": {
    "doc": "All Nodes",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-collinear-1",
    "relUrl": "/all-nodes.html#fuse-collinear-1"
  },"45": {
    "doc": "All Nodes",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#subdivide",
    "relUrl": "/all-nodes.html#subdivide"
  },"46": {
    "doc": "All Nodes",
    "title": "Write Paths Properties",
    "content": "Compute extra path informations . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-paths-properties",
    "relUrl": "/all-nodes.html#write-paths-properties"
  },"47": {
    "doc": "All Nodes",
    "title": "Write Tangents",
    "content": "Subtitle . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-tangents",
    "relUrl": "/all-nodes.html#write-tangents"
  },"48": {
    "doc": "All Nodes",
    "title": "Paths to Clusters",
    "content": "Convert paths to clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#paths-to-clusters",
    "relUrl": "/all-nodes.html#paths-to-clusters"
  },"49": {
    "doc": "All Nodes",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#misc-nodes",
    "relUrl": "/all-nodes.html#misc-nodes"
  },"50": {
    "doc": "All Nodes",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sort-points",
    "relUrl": "/all-nodes.html#sort-points"
  },"51": {
    "doc": "All Nodes",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#partition-by-values",
    "relUrl": "/all-nodes.html#partition-by-values"
  },"52": {
    "doc": "All Nodes",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#attribute-remap",
    "relUrl": "/all-nodes.html#attribute-remap"
  },"53": {
    "doc": "All Nodes",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-points",
    "relUrl": "/all-nodes.html#fuse-points"
  },"54": {
    "doc": "All Nodes",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#points-to-bounds",
    "relUrl": "/all-nodes.html#points-to-bounds"
  },"55": {
    "doc": "All Nodes",
    "title": "Reverse Points Order",
    "content": "Reverse current points order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#reverse-points-order",
    "relUrl": "/all-nodes.html#reverse-points-order"
  },"56": {
    "doc": "All Nodes",
    "title": "Cherry Pick Points",
    "content": "Cherry pick points using their indices. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#cherry-pick-points",
    "relUrl": "/all-nodes.html#cherry-pick-points"
  },"57": {
    "doc": "All Nodes",
    "title": "Conditional Actions",
    "content": "Unified approach to Match &amp; Set. ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#conditional-actions",
    "relUrl": "/all-nodes.html#conditional-actions"
  },"58": {
    "doc": "All Nodes",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#uber-filter",
    "relUrl": "/all-nodes.html#uber-filter"
  },"59": {
    "doc": "All Nodes",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#d-lloyd-relaxation",
    "relUrl": "/all-nodes.html#d-lloyd-relaxation"
  },"60": {
    "doc": "All Nodes",
    "title": "Meta Filter",
    "content": "Filter point collections based on tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#meta-filter",
    "relUrl": "/all-nodes.html#meta-filter"
  },"61": {
    "doc": "All Nodes",
    "title": "Merge Points by Tags",
    "content": "Merge points based on shared tags . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#merge-points-by-tags",
    "relUrl": "/all-nodes.html#merge-points-by-tags"
  },"62": {
    "doc": "All Nodes",
    "title": "Meta Cleanup",
    "content": "Keep/Remove tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#meta-cleanup",
    "relUrl": "/all-nodes.html#meta-cleanup"
  },"63": {
    "doc": "All Nodes",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-index",
    "relUrl": "/all-nodes.html#write-index"
  },"64": {
    "doc": "All Nodes",
    "title": "3D Lloyd Relaxation",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#d-lloyd-relaxation-1",
    "relUrl": "/all-nodes.html#d-lloyd-relaxation-1"
  },"65": {
    "doc": "All Nodes",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#refresh-seed",
    "relUrl": "/all-nodes.html#refresh-seed"
  },"66": {
    "doc": "All Nodes",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#discard-points-by-count",
    "relUrl": "/all-nodes.html#discard-points-by-count"
  },"67": {
    "doc": "All Nodes",
    "title": "Discard Points by Overlap",
    "content": "Kindda like self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#discard-points-by-overlap",
    "relUrl": "/all-nodes.html#discard-points-by-overlap"
  },"68": {
    "doc": "All Nodes",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sampling-nodes",
    "relUrl": "/all-nodes.html#sampling-nodes"
  },"69": {
    "doc": "All Nodes",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-surface",
    "relUrl": "/all-nodes.html#sample-nearest-surface"
  },"70": {
    "doc": "All Nodes",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#guided-trace",
    "relUrl": "/all-nodes.html#guided-trace"
  },"71": {
    "doc": "All Nodes",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-polyline",
    "relUrl": "/all-nodes.html#sample-nearest-polyline"
  },"72": {
    "doc": "All Nodes",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-points",
    "relUrl": "/all-nodes.html#sample-nearest-points"
  },"73": {
    "doc": "All Nodes",
    "title": "Sample Overlap Stats",
    "content": "Compute overlap statistics between point collections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-overlap-stats",
    "relUrl": "/all-nodes.html#sample-overlap-stats"
  },"74": {
    "doc": "All Nodes",
    "title": "Sample Nearest Bounds",
    "content": "Sample within bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-bounds",
    "relUrl": "/all-nodes.html#sample-nearest-bounds"
  },"75": {
    "doc": "All Nodes",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-neighbors",
    "relUrl": "/all-nodes.html#sample-neighbors"
  },"76": {
    "doc": "All Nodes",
    "title": "Staging Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#staging-nodes",
    "relUrl": "/all-nodes.html#staging-nodes"
  },"77": {
    "doc": "All Nodes",
    "title": "Asset Staging",
    "content": "Prepare points before spawning. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#asset-staging",
    "relUrl": "/all-nodes.html#asset-staging"
  },"78": {
    "doc": "All Nodes",
    "title": "Asset Collection to Set",
    "content": "Converts an asset collection to an attribute set. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#asset-collection-to-set",
    "relUrl": "/all-nodes.html#asset-collection-to-set"
  },"79": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html",
    "relUrl": "/all-nodes.html"
  },"80": {
    "doc": "all-pathfinding-modules",
    "title": "üùì Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#-goal-pickers",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#-goal-pickers"
  },"81": {
    "doc": "all-pathfinding-modules",
    "title": "üùì Default",
    "content": "Match seeds to goals at the same index. The Default picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#default",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#default"
  },"82": {
    "doc": "all-pathfinding-modules",
    "title": "üùì Random",
    "content": "Match seeds to goals at a random index. The Random picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#random",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#random"
  },"83": {
    "doc": "all-pathfinding-modules",
    "title": "üùì Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. The Goal from Attribute picker ‚Ä¶ . ## . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#goal-from-attribute"
  },"84": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Heuristics",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#-heuristics",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#-heuristics"
  },"85": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#heuristic-attribute",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#heuristic-attribute"
  },"86": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#shortest-distance",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#shortest-distance"
  },"87": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#inertia",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#inertia"
  },"88": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#turning",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#turning"
  },"89": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#steepness",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#steepness"
  },"90": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#azimuth",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#azimuth"
  },"91": {
    "doc": "all-pathfinding-modules",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#least-nodes",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#least-nodes"
  },"92": {
    "doc": "all-pathfinding-modules",
    "title": "all-pathfinding-modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html"
  },"93": {
    "doc": "üù± Actor Collection",
    "title": "üù± Actor Collection",
    "content": "Actor Collection DataAsset . The Actor Collection DataAsset is a list of Actors, that comes with all the Asset Collection goodies. Related . | Asset Collection | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-actors.html#actor-collection",
    "relUrl": "/doc-assets/asset-collections/asset-collection-actors.html#actor-collection"
  },"94": {
    "doc": "üù± Actor Collection",
    "title": "Properties",
    "content": ". | Property | Description | . | Entries | Entries are a list of actors (soft) references and their associated shared properties.*You really just need to set the Actor property for it to work.* | . | Do Not Ignore Invalid Entries | Forces distribution of this to NOT skip over invalid entries.This can be useful to create ‚Äòweighted‚Äô spaces, and can be overriden on a per-node basis. | . | : **Advanced** :| | ¬† | . | Auto Rebuild Staging | Enabled by default.When enabled, any user-made modification to the asset collection will trigger a rebuilding of the staging data *(saves you a click, in case your forget about it.)* | . Common properties . Common properties are properties shared amonst all asset collection‚Äô entries . | Property | Description | . | : Sub Collection : | ¬† | . | Sub Collection | If Is Sub Collection is enabled, lets you pick an Asset Collection that will work like a list of alternative choices for this entry. | . | Is Sub Collection | Whether this entry is a sub-collection or not.Enabling this option will reveal the Asset Collection picker. | . | : Settings : | ¬† | . | Weight | The weight of this entry, relative to the others in the list.Higher weights means higher chance of being picked, if the context is using weighted random selection. | . | Category | A category associated with this entry. Think of it as a unique tag. | . An entry Weight is not only used for Weighted Random selection, but is also used to sort entries in certain cases; among which Indexed Weight (Ascending/Descending) distribution mode of the Asset Staging node. Variations . Optionally, you may enter a few random ranges for staging nodes to use, should you want to. This can come in handy if you want to have high-level, per-asset variations. | : Positions : | Additive | . | Offset Min | Minimum offset range. | . | Offset Max | Maximum offset range. | . | Absolute offset | Whether the offset should be applied in world space, or ‚Äúlocal‚Äù to the point‚Äô transform. | . | : Rotation : | Additive | . | Rotation Min | Minimum rotation offset range. | . | Rotation Max | Maximum rotation offset range. | . | : Scale : | Multiplicative | . | Scale Min | Minimum scale multiplier range. | . | Scale Max | Maximum scale multiplier range. | . | Uniform Scale | Whether the random scale multiplier should be applied per-component or uniformly (in which case it uses X for all components). | . Note that variations are never applied by default by any nodes, and are considered an advanced tweak. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-actors.html#properties",
    "relUrl": "/doc-assets/asset-collections/asset-collection-actors.html#properties"
  },"95": {
    "doc": "üù± Actor Collection",
    "title": "üù± Actor Collection",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-actors.html",
    "relUrl": "/doc-assets/asset-collections/asset-collection-actors.html"
  },"96": {
    "doc": "üù± Mesh Collection",
    "title": "üù± Mesh Collection",
    "content": "Mesh Collection DataAsset . The Mesh Collection DataAsset is a list of Meshes with ISM/HISM Descriptors, that comes with all the Asset Collection goodies. Related . | Asset Collection | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-meshes.html#mesh-collection",
    "relUrl": "/doc-assets/asset-collections/asset-collection-meshes.html#mesh-collection"
  },"97": {
    "doc": "üù± Mesh Collection",
    "title": "Properties",
    "content": ". | Property | Description | . | : **Settings** :| | ¬† | . | Entries | Entries are a list of meshes (soft) references descriptor and their associated shared properties.*You really just need to set the Descriptor‚Äô StaticMesh property for it to work.* | . | Do Not Ignore Invalid Entries | Forces distribution of this collection to NOT skip over invalid entries.This can be useful to create ‚Äòweighted‚Äô spaces, and can be overriden on a per-node basis. | . | : **Advanced** :| | ¬† | . | Auto Rebuild Staging | Enabled by default.When enabled, any user-made modification to the asset collection will trigger a rebuilding of the staging data *(saves you a click, in case your forget about it.)* | . Common properties . Common properties are properties shared amonst all asset collection‚Äô entries . | Property | Description | . | : Sub Collection : | ¬† | . | Sub Collection | If Is Sub Collection is enabled, lets you pick an Asset Collection that will work like a list of alternative choices for this entry. | . | Is Sub Collection | Whether this entry is a sub-collection or not.Enabling this option will reveal the Asset Collection picker. | . | : Settings : | ¬† | . | Weight | The weight of this entry, relative to the others in the list.Higher weights means higher chance of being picked, if the context is using weighted random selection. | . | Category | A category associated with this entry. Think of it as a unique tag. | . An entry Weight is not only used for Weighted Random selection, but is also used to sort entries in certain cases; among which Indexed Weight (Ascending/Descending) distribution mode of the Asset Staging node. Variations . Optionally, you may enter a few random ranges for staging nodes to use, should you want to. This can come in handy if you want to have high-level, per-asset variations. | : Positions : | Additive | . | Offset Min | Minimum offset range. | . | Offset Max | Maximum offset range. | . | Absolute offset | Whether the offset should be applied in world space, or ‚Äúlocal‚Äù to the point‚Äô transform. | . | : Rotation : | Additive | . | Rotation Min | Minimum rotation offset range. | . | Rotation Max | Maximum rotation offset range. | . | : Scale : | Multiplicative | . | Scale Min | Minimum scale multiplier range. | . | Scale Max | Maximum scale multiplier range. | . | Uniform Scale | Whether the random scale multiplier should be applied per-component or uniformly (in which case it uses X for all components). | . Note that variations are never applied by default by any nodes, and are considered an advanced tweak. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-meshes.html#properties",
    "relUrl": "/doc-assets/asset-collections/asset-collection-meshes.html#properties"
  },"98": {
    "doc": "üù± Mesh Collection",
    "title": "üù± Mesh Collection",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/asset-collection-meshes.html",
    "relUrl": "/doc-assets/asset-collections/asset-collection-meshes.html"
  },"99": {
    "doc": "Asset Collection to Set",
    "title": "Asset Collection to Set",
    "content": "PCGEx | Asset Collection to Set Converts an asset collection to an attribute set. The Asset Collection to Set offers a variety of options &amp; settings to turn an Asset Collection to a more common Attribute Set. Attribute SetAttribute set from asset collection . Related . | Asset Collection | . Table of content . | Properties . | Sub Collection Handling | Outputs | . | . The Asset Collection to Set exists in order to support Attribute-set based workflows and still be able to rely and re-use Asset Collections in meaningful ways. It‚Äôs a very straightfoward node that takes an Asset Collection as input and outputs an attribute set from that. Since an Asset Collection support the concept of nested collections, it can also be leveraged as an interesting way to generate random pre-selections of assets! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-collection-to-set.html#asset-collection-to-set",
    "relUrl": "/doc-assets/assets-collection-to-set.html#asset-collection-to-set"
  },"100": {
    "doc": "Asset Collection to Set",
    "title": "Properties",
    "content": "| Property | Description | . | Asset Collection | The Asset Collection to build an attribute set from. | . | Sub Collection Handling | Defines how sub-collection entries are handled during the generation process *(more below)* | . | Allow Duplicates | Whether or not to allow duplicate entries inside the output attribute set.*(Same object path is considered a duplicate)* | . | Omit Invalid and Empty | Whether or not to strip out invalid or empty entries from the output attribute set.*(invalid or empty entries are null or invalid object paths)* | . Sub Collection Handling . | : Handling | | ¬† | . | Ignore | Skips entry. | . | Expand | Recursively add sub-collection entries. | . | Random | Picks a random entry from the sub-collection, recursive until it‚Äôs a non-collection entry. | . | Random Weighted | Picks a random weighted entry from the sub-collection, recursive until it‚Äôs a non-collection entry. | . | First Item | Picks the first entry from the sub-collection, recursive until it‚Äôs a non-collection entry. | . | Last Item | Picks the first entry from the sub-collection, recursive until it‚Äôs a non-collection entry. | . Outputs . You can choose which property from the Asset Collection to build the attribute set from. | : Output properties | | ¬† | . | Asset Path | *FSoftbjectPath* | . | Weight | *int32* | . | Category | *FName* | . | Extents | *FVector* | . | BoundsMin | *FVector* | . | BoundsMax | *FVector* | . | Nesting Depth | *int32* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-collection-to-set.html#properties",
    "relUrl": "/doc-assets/assets-collection-to-set.html#properties"
  },"101": {
    "doc": "Asset Collection to Set",
    "title": "Asset Collection to Set",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-collection-to-set.html",
    "relUrl": "/doc-assets/assets-collection-to-set.html"
  },"102": {
    "doc": "Asset Staging",
    "title": "Asset Staging",
    "content": "PCGEx | Asset Staging Prepare points before spawning. The Asset Staging node lets your prepare points for spawning assets. InPoints to be prepared Attribute SetOptional attribute set to be used as a collection, if the node is set-up that way. OutModified points, with added attributes . Related . | Asset Collection | . Table of content . | Properties . | Scale to Fit | Justification . | From | To | . | Variations | Distribution Settings . | Distribution | Index Settings | . | Output | . | Modules . | Available Asset Collections modules | . | . The Asset Staging exists for many reasons, but primarily to ‚Äúpre-spawn‚Äù assets from an Asset Collection, and modify points according to various rules, in relation to their associated asset. This is especially useful if you want to have pruning control on overlaps, or require very tight placement rules no matter how the assets have been authored (pivot point location etc) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#asset-staging",
    "relUrl": "/doc-assets/assets-staging.html#asset-staging"
  },"103": {
    "doc": "Asset Staging",
    "title": "Properties",
    "content": "| Property | Description | . | Source | Which type of source to use for the asset collection.Can be either Asset for an Asset Collection picker, or Attribute Set, which will reveal a new input pin that accepts an attribute set. | . | Asset Collection | If Asset is selected as a source, this is the Asset Collection that will be used for staging points.*See [Available Asset Collections](#available-asset-collections).* | . When using the Attribute Set source, the node will create a temp, internal Asset Collection from the source attribute set. | : **Attribute Set Details** :| | ¬† | . | Asset Path Source Attribute | The name of the attribute within the Attribute Set that contains the entry‚Äô **Asset Path**.*FSoftObjectPath is preferred, but FString and FName are supported.* | . | Weight Source Attribute | The name of the attribute within the Attribute Set that contains the entry‚Äô **Weight**.*int32 is preferred, but float, double and int64 are supported.* | . | Category Source Attribute | The name of the attribute within the Attribute Set that contains the entry‚Äô **Category**.*FName is preferred, but FString is supported.* | . While it‚Äôs a needed option, keep in mind that using an attribute set prevents access to any asset cached data. As such, all assets from the Attribute Set will be first loaded (asynchronously) in memory in order to compute their bounds; before the node execution can properly start. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#properties",
    "relUrl": "/doc-assets/assets-staging.html#properties"
  },"104": {
    "doc": "Asset Staging",
    "title": "Scale to Fit",
    "content": ". Scale the spawned asset bounds in order to fit within the host point‚Äô bounds. | Scale to Fit Mode | Which type of scale-to-fit mode is to be applied. None disables this section, Uniform applies the same rule to each individual component, while Individual lets you pick per-component rules. | . | Scale to Fit *(value)* | If Asset is selected as a source, this is the Asset Collection that will be used for staging points. | . You can use the following rules: . | : Scale to Fit | | ¬† | . | | **None**Disable the scaling rule. | . | | **Fill**Scale the asset so it fills the point‚Äô bounds. | . | | **Min**Scale the asset so it fits snuggly within the minimum point‚Äô bounds. | . | | **Max**Scale the asset so it fits snuggly within the maximum point‚Äô bounds. | . | | **Average**Scale the asset so it fits the average of the point‚Äô bounds. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#scale-to-fit",
    "relUrl": "/doc-assets/assets-staging.html#scale-to-fit"
  },"105": {
    "doc": "Asset Staging",
    "title": "Justification",
    "content": ". Offset the spawned asset bounds relative to the host point‚Äô bounds. Justification is done &amp; tweaked per-component. | : **Per component** :| | ¬† | . | From | The location within the **Asset** bounds that will be justified *To* the point‚Äô bounds. *i.e, from which location in the asset do i start moving.* | . | To | The location withn the **Point** bounds to which the **Asset** bounds will be justified. *i.e, to which location in the point do i want to go.* | . | : **Consolidated custom inputs** :| | ¬† | . | Custom from Vector Attribute | An FVector whose individual component will be used to drive From properties set to Custom.*Prefer this consolidated approach if you‚Äôre using custom values on more than one component.* | . | Custom to Vector Attribute | An FVector whose individual component will be used to drive To properties set to Custom. *Prefer this consolidated approach if you‚Äôre using custom values on more than one component.* | . From . You can use the following rules for From: . | : Justify From | | ¬† | . | | **Min**Uses the asset bounds‚Äô min as reference point. | . | | **Center**Uses the asset bounds‚Äô local center as reference point. | . | | **Max**Uses the asset bounds‚Äô max as reference point. | . | | **Pivot**Uses the asset pivot as reference point, ignoring bounds. | . | | **Custom**Uses a lerped reference point between the asset bounds‚Äô min &amp; max.*Value is expected to be in the range 0-1 but isn‚Äôt clamped.* | . To . You can use the following rules for To: . | : Justify To | | ¬† | . | | **Same**Auto-selects the same justification as From, but computed against the point‚Äô bounds. | . | | **Min**Uses the point bounds‚Äô min as reference point. | . | | **Center**Uses the point bounds‚Äô local center as reference point. | . | | **Max**Uses the point bounds‚Äô max as reference point. | . | | **Pivot**Uses the point bounds‚Äô pivot, ignoring bounds. | . | | **Custom**Uses a lerped reference point between the asset bounds‚Äô min &amp; max.*Value is expected to be in the range 0-1 but isn‚Äôt clamped.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#justification",
    "relUrl": "/doc-assets/assets-staging.html#justification"
  },"106": {
    "doc": "Asset Staging",
    "title": "Variations",
    "content": "When to apply the asset‚Äô variations, if any, as defined in the Source. At the time of writing, this is not supported for Attribute Set source. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#variations",
    "relUrl": "/doc-assets/assets-staging.html#variations"
  },"107": {
    "doc": "Asset Staging",
    "title": "Distribution Settings",
    "content": "Distribution drives how assets are selected within the collection &amp; assigned to points. | : Seed components | | ¬† | . | Seed components lets you choose which seed source you want to combined to drive randomness. | | ¬† | . | None | Will only use the point‚Äô seed. | . | Local | The local user-set seed *see property below* | . | Settings | This node‚Äô Settings seed. | . | Component | The parent PCG component‚Äô seed. | . Distribution . | : Distribution | | ¬† | . | Index | Index-based selection within the collection.*Enable a lot of additional options.* | . | Random | Plain old random selection. | . | Weighted Random | Weighted random selection, using entries‚Äô Weight property. | . Index Settings . Index settings offer granular controls over what the Index actually is, and how it is used. | Index Setting | Description | . | Pick Mode | Choose in which ordered context the input index should be used. | . | Index Safety | Defines how the index value should be sanitized/post-processed. | . | Index Source | The source of the index value. | . | Remap Index to Collection Size | If enabled, the input index is first remapped to the size of the collection.**This enable the use of basically any input value and distribute the entierety of the collection over its range.***Note that this can have a noticeable performance impact since all input indices must be loaded in memory first to find the min/max range.* | . | Truncate Remap | Lets you choose how the remapped value (floating point) should be truncated to an integer. | . Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (wrapped around) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#distribution-settings",
    "relUrl": "/doc-assets/assets-staging.html#distribution-settings"
  },"108": {
    "doc": "Asset Staging",
    "title": "Output",
    "content": "Lets you output the Weight of the selection to each node, using different post-processing methods. This can be very handy to identify ‚Äúrare‚Äù spawns and preserve them during self-pruning operations. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#output",
    "relUrl": "/doc-assets/assets-staging.html#output"
  },"109": {
    "doc": "Asset Staging",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#modules",
    "relUrl": "/doc-assets/assets-staging.html#modules"
  },"110": {
    "doc": "Asset Staging",
    "title": "Available Asset Collections modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#available-asset-collections-modules",
    "relUrl": "/doc-assets/assets-staging.html#available-asset-collections-modules"
  },"111": {
    "doc": "Asset Staging",
    "title": "üù± Mesh Collection",
    "content": "Mesh Collection DataAsset . The Mesh Collection DataAsset is a list of Meshes with ISM/HISM Descriptors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#mesh-collection",
    "relUrl": "/doc-assets/assets-staging.html#mesh-collection"
  },"112": {
    "doc": "Asset Staging",
    "title": "üù± Actor Collection",
    "content": "Actor Collection DataAsset . The Actor Collection DataAsset is a list of Actors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html#actor-collection",
    "relUrl": "/doc-assets/assets-staging.html#actor-collection"
  },"113": {
    "doc": "Asset Staging",
    "title": "Asset Staging",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/assets-staging.html",
    "relUrl": "/doc-assets/assets-staging.html"
  },"114": {
    "doc": "‚ã∞ Inherit Last",
    "title": "‚ã∞ Inherit Last",
    "content": "Copy the last point‚Äô values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-end.html#inherit-last",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-end.html#inherit-last"
  },"115": {
    "doc": "‚ã∞ Inherit Last",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Blending Settings | SeeBlending *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-end.html#properties",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-end.html#properties"
  },"116": {
    "doc": "‚ã∞ Inherit Last",
    "title": "‚ã∞ Inherit Last",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-end.html",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-end.html"
  },"117": {
    "doc": "‚ã∞ Inherit First",
    "title": "‚ã∞ Inherit First",
    "content": "Copy the first point‚Äô values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-start.html#inherit-first",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-start.html#inherit-first"
  },"118": {
    "doc": "‚ã∞ Inherit First",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Blending Settings | SeeBlending *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-start.html#properties",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-start.html#properties"
  },"119": {
    "doc": "‚ã∞ Inherit First",
    "title": "‚ã∞ Inherit First",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-inherit-start.html",
    "relUrl": "/doc-paths/paths-subdivide/blending-inherit-start.html"
  },"120": {
    "doc": "‚ã∞ Interpolate",
    "title": "‚ã∞ Interpolate",
    "content": "Interpolates values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. Table of content . | Properties . | Blend Over Methods . | Distance | Count | Fixed | . | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-interpolate.html#interpolate",
    "relUrl": "/doc-paths/paths-subdivide/blending-interpolate.html#interpolate"
  },"121": {
    "doc": "‚ã∞ Interpolate",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Blending Over | Defines the method used to compute the alpha value for the interpolation. | . | Blending Settings | SeeBlending *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-interpolate.html#properties",
    "relUrl": "/doc-paths/paths-subdivide/blending-interpolate.html#properties"
  },"122": {
    "doc": "‚ã∞ Interpolate",
    "title": "Blend Over Methods",
    "content": ". | Distance | Count | Fixed | . Distance . Distance will first calculate the total distance covered by the subpoints (from current to next), and compute their individual lerp as Local Distance / Total Distance. This usually gives more better-looking results if the distance between points is irregular; but the difference in values between a point and the next can either be brutal or negligible. If points are equally spaced, it will look very similar to Point Count. Count . Point Count uses the current point index, and compute their individual lerp as Current Index / Total Point Count. Using this method is equivalent of using a fixed blending step between each point. If points are irregularly spaced, it may look a bit random. Fixed . Uses a unique fixed lerp value for each point. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-interpolate.html#blend-over-methods",
    "relUrl": "/doc-paths/paths-subdivide/blending-interpolate.html#blend-over-methods"
  },"123": {
    "doc": "‚ã∞ Interpolate",
    "title": "‚ã∞ Interpolate",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/blending-interpolate.html",
    "relUrl": "/doc-paths/paths-subdivide/blending-interpolate.html"
  },"124": {
    "doc": "Blending",
    "title": "Blending",
    "content": "PCGEx‚Äô blendings overview . This page lists the blending used by a bunch of different nodes. There‚Äôs a lot of node in PCGEx that offer blending settings ‚Äì and while what is blended is highly contextual, they all share the same settings. Generally speaking, blending happens between at least two points, but it can sometimes be more, much more. When a node creates new points, the final point‚Äô properties and attributes is usually the result of all other blended points ‚Äì however, certain nodes blend point properties into an existing point which changes slightly the behavior of the selected blendmode. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/blending.html#blending",
    "relUrl": "/doc-general/blending.html#blending"
  },"125": {
    "doc": "Blending",
    "title": "Properties",
    "content": ". | Property | Description | . | Blending Filter | How to filter which attributes are going to be blended.*This only applies to attribute, not points properties*. | . | Filtered Attributes | Based on the selected filter above, this is the list of attributes that will have to match it.If the filter is inclusive (Include), only the listed attributes will be blended.If the filter is exclusive (Exclude), listed attribute won‚Äôt be blended, but every other will be. | . | Default Blending | This is the default blending applied to both point‚Äô Attributes and Properties.*Per-attribute &amp; per-property blending can be different.* | . | Properties Overrides | Lets you select per-property override modes, if you want them to be different from the selected default. | . | Attribute Overrides | Lets you select per-attribute override modes, if you want them to be different from the selected default. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/blending.html#properties",
    "relUrl": "/doc-general/blending.html#properties"
  },"126": {
    "doc": "Blending",
    "title": "Blend modes",
    "content": "| : Blend Mode | | ¬† | . | | **None**No blending is applied, keep the original value. | . | | **Average**Average all sampled values. | . | | **Weight**Weights based on distance to blend targets. If the results are unexpected, try ‚ÄòLerp‚Äô instead. | . | | **Min**Component-wise MIN operation.*Keeps the smallest value of all inputs, per-component.* | . | | **Max**Component-wise MAX operation.*Keeps the largest value of all inputs, per-component.* | . | | **Copy**Copy the latest incoming value, in no particular order. | . | | **Sum**Component-wise sum of all the inputs. | . | | **Weighted Sum**Component-wise weighted sum of all the inputs.*What qualify as weight depends on context*. | . | | **Lerp**Uses weight as lerp. If the results are unexpected, try ‚ÄòWeight‚Äô instead.*Lerp only works properly for nodes that do a simple two-point blending.*. | . | | **Substract**Opposite of Sum, but substract all inputs. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/blending.html#blend-modes",
    "relUrl": "/doc-general/blending.html#blend-modes"
  },"127": {
    "doc": "Blending",
    "title": "Blending",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/blending.html",
    "relUrl": "/doc-general/blending.html"
  },"128": {
    "doc": "Bounds to Points",
    "title": "Bounds to Points",
    "content": "Not to confuse with Points to Bounds . The Bounds to Points node‚Ä¶ . InPoints to be used as bounds which surface will be used to generate new points OutNew points . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/bounds-to-points.html#bounds-to-points",
    "relUrl": "/doc-transforms/bounds-to-points.html#bounds-to-points"
  },"129": {
    "doc": "Bounds to Points",
    "title": "Properties",
    "content": ". WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/bounds-to-points.html#properties",
    "relUrl": "/doc-transforms/bounds-to-points.html#properties"
  },"130": {
    "doc": "Bounds to Points",
    "title": "Bounds to Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/bounds-to-points.html",
    "relUrl": "/doc-transforms/bounds-to-points.html"
  },"131": {
    "doc": "Break to Paths",
    "title": "Break to Paths",
    "content": "Breaks clusters edge chains into individual paths . The Break Clusters to Paths node ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs Packed ClustersIndividually packed vtx/edges pairs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-break-to-paths.html#break-to-paths",
    "relUrl": "/doc-clusters/clusters-break-to-paths.html#break-to-paths"
  },"132": {
    "doc": "Break to Paths",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-break-to-paths.html#properties",
    "relUrl": "/doc-clusters/clusters-break-to-paths.html#properties"
  },"133": {
    "doc": "Break to Paths",
    "title": "Break to Paths",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-break-to-paths.html",
    "relUrl": "/doc-clusters/clusters-break-to-paths.html"
  },"134": {
    "doc": "Connect",
    "title": "Connect",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties . | Bridge Methods | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-connect.html#connect",
    "relUrl": "/doc-clusters/clusters-connect.html#connect"
  },"135": {
    "doc": "Connect",
    "title": "Properties",
    "content": ". | Property | Description | . | Bridge Method | The method that will be used to identify and create bridges between clusters. | . Note that no matter what method is selected, a bridge will always connect the two closest points between two clusters. The chosen method only drives which cluster is connected to which other cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-connect.html#properties",
    "relUrl": "/doc-clusters/clusters-connect.html#properties"
  },"136": {
    "doc": "Connect",
    "title": "Bridge Methods",
    "content": "| Method | Description | . | **Delaunay**| | ¬† | . | | When using this method, each cluster is abstracted into a single bounding box that encapsulates all its vertices. A 3D Delaunay is generated using each bounding box center as an input, and the resulting delaunay edges are used as bridges. | . | **Least Edges**| | ¬† | . | | When using this method, the algorithm will generate the least possible amount of bridge in order to connect all the clusters together.*Careful because it can easily look like a minimum spanning tree, but it‚Äôs not.* | . | **Most Edges**| | ¬† | . | | When using this method, the algorithm will create a bridge from each cluster to every other cluster. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-connect.html#bridge-methods",
    "relUrl": "/doc-clusters/clusters-connect.html#bridge-methods"
  },"137": {
    "doc": "Connect",
    "title": "Connect",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-connect.html",
    "relUrl": "/doc-clusters/clusters-connect.html"
  },"138": {
    "doc": "Copy Cluster to Points",
    "title": "Copy Cluster to Points",
    "content": "DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-copy-to-points.html",
    "relUrl": "/doc-clusters/clusters-copy-to-points.html"
  },"139": {
    "doc": "Fuse Clusters",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. The Fuse Clusters node ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-fuse-cluster.html#fuse-clusters",
    "relUrl": "/doc-clusters/clusters-fuse-cluster.html#fuse-clusters"
  },"140": {
    "doc": "Fuse Clusters",
    "title": "Properties",
    "content": ". Current implementation is WIP: not all attributes from the inputs are not forwarded to the output cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-fuse-cluster.html#properties",
    "relUrl": "/doc-clusters/clusters-fuse-cluster.html#properties"
  },"141": {
    "doc": "Fuse Clusters",
    "title": "Fuse Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-fuse-cluster.html",
    "relUrl": "/doc-clusters/clusters-fuse-cluster.html"
  },"142": {
    "doc": "Make Unique",
    "title": "Make Unique",
    "content": "Forward clusters with a new pair of unique tags. Like a copy, only much faster. The Make Clusters Unique ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . This node has no specific properties. This node creates a duplicate of the input data with new unique cluster tags. This node primarily exists to allow certain advanced operations such as copying an existing cluster configuration, modify it and then fuse it with the original one. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-make-unique.html#make-unique",
    "relUrl": "/doc-clusters/clusters-make-unique.html#make-unique"
  },"143": {
    "doc": "Make Unique",
    "title": "Make Unique",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-make-unique.html",
    "relUrl": "/doc-clusters/clusters-make-unique.html"
  },"144": {
    "doc": "Mesh to Clusters",
    "title": "Mesh to Clusters",
    "content": "DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-mesh-to-clusters.html",
    "relUrl": "/doc-clusters/clusters-mesh-to-clusters.html"
  },"145": {
    "doc": "Pack Clusters",
    "title": "Pack Clusters",
    "content": "Pack Clusters . The Pack Clusters node ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs Packed ClustersIndividually packed vtx/edges pairs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-pack-clusters.html#pack-clusters",
    "relUrl": "/doc-clusters/packing-clusters/clusters-pack-clusters.html#pack-clusters"
  },"146": {
    "doc": "Pack Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-pack-clusters.html#properties",
    "relUrl": "/doc-clusters/packing-clusters/clusters-pack-clusters.html#properties"
  },"147": {
    "doc": "Pack Clusters",
    "title": "Pack Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-pack-clusters.html",
    "relUrl": "/doc-clusters/packing-clusters/clusters-pack-clusters.html"
  },"148": {
    "doc": "Partition Vertices",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . The Partition Vertices splits input vtx into separate output groups, so that each Edge dataset is associated to a unique Vtx dataset (as opposed to a shared Vtx dataset for multiple edge groups) . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . This node has no specific properties. Contrary to other edge &amp; cluster processors, this node does not produce a sanitized result. If the input is unsanitized, you may have unexpected results. This node primarily exists to allow certain advanced operations such as easily finding individual convex hull of isolated clusters. This is not a default behavior as doing so slightly increases processing times. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-partition-vertices.html#partition-vertices",
    "relUrl": "/doc-clusters/clusters-partition-vertices.html#partition-vertices"
  },"149": {
    "doc": "Partition Vertices",
    "title": "Partition Vertices",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-partition-vertices.html",
    "relUrl": "/doc-clusters/clusters-partition-vertices.html"
  },"150": {
    "doc": "Pick Closest Clusters",
    "title": "Pick Closest Clusters",
    "content": ". The Pick Closest Clusters node filters out input clusters based on proximity to target points. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs In TargetsTarget points used to test for proximity VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-pick-closest-clusters.html#pick-closest-clusters",
    "relUrl": "/doc-clusters/clusters-pick-closest-clusters.html#pick-closest-clusters"
  },"151": {
    "doc": "Pick Closest Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-pick-closest-clusters.html#properties",
    "relUrl": "/doc-clusters/clusters-pick-closest-clusters.html#properties"
  },"152": {
    "doc": "Pick Closest Clusters",
    "title": "Pick Closest Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-pick-closest-clusters.html",
    "relUrl": "/doc-clusters/clusters-pick-closest-clusters.html"
  },"153": {
    "doc": "Properties : Edge",
    "title": "Properties : Edge",
    "content": "PCGEx | Cluster : Edge Properties Compute edge extra data from its vertices . The Edge Properties node allows you to compute and write additional cluster-related data for edges, as well as ‚Äúsolidify‚Äù their bounds, giving them a more defined shape. The direction of the edge, from start to end, is determined by the chosen direction method and is used to influence outputs. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | | . Table of content . | Properties . | Direction Method | Outputs | . | Solidfication . | Radiuses | . | . The Edge Properties node lets you extract &amp; write cluster-related properties to individual Edges points, as well as ‚Äúsolidify‚Äù the edge points (i.e giving their bounds an decent shape). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-properties-edge.html#properties--edge",
    "relUrl": "/doc-clusters/clusters-properties-edge.html#properties--edge"
  },"154": {
    "doc": "Properties : Edge",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Direction Method | Defines which endpoints \"order\" will be used to define the edge‚Äô direction for the ouputs. | . | Direction Choice | Further refines the direction method, based on the above selection.-Smallest to Greatest will order direction reference metrics in ascending order.-Greatest to Smallest will order direction reference metrics in descending order.*Really it‚Äôs how the endpoint reference value is sorted, but I couldn‚Äôt call that Direction‚Äô direction.* | . Direction Method . The Direction method, combined with the Direction Choice determine which endpoint should be considered the Start &amp; End of the edge. The ‚Äúdirection‚Äù of the edge used for computing outputs &amp; properties is the safe normal going from the start to the end of the edge. | Endpoints order | Will use the endpoints‚Äô point index*This method offers no real control, cluster indices, while deterministic, are mostly random.* | . | Endpoints indices | Will use the endpoints‚Äô point index*This method offers no real control, cluster indices, while deterministic, are mostly random.* | . | Endpoints Attribute | Will use an attribute (converted to a Double) from the endpoints‚Äô*This method, combined with Direction Choice offers full control over direction.* | . | Edge Dot Attribute | Will use an attribute (converted to an FVector) from the endpoints‚Äô and do a Dot Product with the edge‚Äô direction.*This method, combined with Direction Choice offers full control over direction.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-properties-edge.html#properties",
    "relUrl": "/doc-clusters/clusters-properties-edge.html#properties"
  },"155": {
    "doc": "Properties : Edge",
    "title": "Outputs",
    "content": "| Property | Description | . | **Outputs**| | ¬† | . | Edge Length | ¬† | . | Edge Direction | ¬† | . | Endpoints Blending | ¬† | . | Endpoints Weights | ¬† | . | Blending Settings | Defines how each enpoint‚Äô property (Start and End Vtx) is blended into the edge.*See Blending*. | . | Heuristics | If enabled, will reveal a new Heuristic input.**This is used to ouput &amp; debug the heuristic score of each edge.***Note that heuristics that require external parameters won‚Äôt work correctly and output a constant value.* | . Note on blending: this is a 2-point blend, hence Lerp yields more accurate results than Weight. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-properties-edge.html#outputs",
    "relUrl": "/doc-clusters/clusters-properties-edge.html#outputs"
  },"156": {
    "doc": "Properties : Edge",
    "title": "Solidfication",
    "content": ". Solidifying an edge means computing its bounds so they visually connect the start &amp; end point. This makes edge point incredibly more useful than just ‚Äúdata holders‚Äù! . Solidification is fairly straightforward on paper, but in order to be flexible it also exposes an overwhelming amount of parameters. Unreal has a visual bug in the detail panel: the first time you select a solidification axis, remaining axis‚Äô properties will not show up. *You have to deselect the node then select it again for the details panel to properly refresh. | Property | Description | . | **Settings**| | ¬† | . | Write Edge Position | ¬† | . | Edge Position Lerp | ¬† | . | Solidification Axis | ¬† | . | Solidification Lerp Operand | ¬† | . | Solidification Lerp Constant | ¬† | . | Radiuses | ¬† | . Note that if solidification is enabled, the specified Edge Position Lerp will override the Endpoints Weights specified for Outputs, to enforce consistency. Radiuses . When a solidification axis is selected, lets you set the edge bounds‚Äô remaining two axis as ‚Äúradiuses‚Äù. Each component shares the same following properties: . | Enabled | ¬† | . | Radius Type | ¬† | . | Radius Constant | ¬† | . | Radius Attribute | ¬† | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-properties-edge.html#solidfication",
    "relUrl": "/doc-clusters/clusters-properties-edge.html#solidfication"
  },"157": {
    "doc": "Properties : Edge",
    "title": "Properties : Edge",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-properties-edge.html",
    "relUrl": "/doc-clusters/clusters-properties-edge.html"
  },"158": {
    "doc": "Prune edges by Length",
    "title": "Prune edges by Length",
    "content": "Remove edges from a cluster using length data. The Prune by Length node offers a very circumvoluted approach to removing edges using length-based statistics. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties . | Measure | Mean Methods . | Average (Arithmetic mean) | Median | Mode (Shortest or Longest) | Central | Fixed | . | . | Usage . | Easy pruning . | Prune any edge longer than X | Prune any edge shorter than X | . | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#prune-edges-by-length",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#prune-edges-by-length"
  },"159": {
    "doc": "Prune edges by Length",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Measure | The \"unit\" system to use for measuring edges.*See [Measure](#measure).* | . | Mean Method | The method used to compute the **mean value** for a cluster.**The mean is what will be used as a reference values to prune edges.***See [Mean Methods](#mean-methods).* | . | Mode Tolerance | Value used for length equality tolerance.*Only available when using Mode (Shortest) or Mode (Longest) mean methods.* | . | **Pruning**| | ¬† | . | Prune Below | If enabled, edges with a value **below the mean from the specified threshold** will be pruned. | . | Prune Above | If enabled, edges with a value **above the mean from the specified threshold** will be pruned. | . | **Output**| | ¬† | . | **Mean** Attribute Name | When enabled, the computed mean value will be written to the specified attribute.*Useful for debugging, and probably has other applications.Note that the mean value is the same for all edges of a given cluster.* | . Keep in mind that calculations are relative to the mean value. Example . If using Relative measure and Average mean method, the mean value will be the average edge length. The Prune Below value is substracted from that average to find the minimum acceptable length (in relative terms), while the Prune Above value is added to that average to find the maximum acceptable length. In other words, if the average relative mean is 0.5, using Prune Below = 0.1 and Prune Above = 0.1, edges with a relative length &lt; 0.4 and &gt; 0.6 will be pruned. See Easy pruning if this gives you headaches. Measure . | Method | Description | . | **Relative** | When using Relative measure, edge lengths are pre-processed in order to find the min/max values, in order for the other calculation to work from **normalized** values.This is a bit clumsy to use, but also highly scalable if you‚Äôre doing sub-graph with no control over the input scale/dimensions. | . | **Absolute** | This measure uses the **raw** edge length.It‚Äôs very straighforward to use, but for obvious reason scales poorly; or through PCG overrides by forwarding params from outside. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#properties",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#properties"
  },"160": {
    "doc": "Prune edges by Length",
    "title": "Mean Methods",
    "content": "The mean method is used to find the reference threshold value that will be used by Prune Below and Prune Above. Below are an explanation on how each method works. For the example, let‚Äôs say we‚Äôre working on a cluster with 10 edges that have the following lengths: . Absolute lengths = [10, 20, 30, 40, 50, 50, 55, 60, 1200, 500] Relative lengths = [0.0083, 0.016, 0.025, 0.03, 0.041, 0.041, 0.045, 0.05, 1, 0.41] . | Average | Median | Mode | Central | Fixed | . Average (Arithmetic mean) . Average mean is, well, the averaged value of all the lengths. Absolute Average Mean = 201.5 Relative Average Mean = 0.125 . Median . Median uses the median value of all the available lengths, sorted. Sorted Absolute lengths = [10, 20, 30, 40, 50, 50, 55, 60, 500, 1200] Absolute Median Mean = 50 // [.., 50, 50, ...] Sorted Relative lengths = [0.0083, 0.016, 0.025, 0.03, 0.041, 0.041, 0.045, 0.05, 0.41, 1] Relative Median Mean = 0.041 // [.., 0.041, 0.041, ...] . Mode (Shortest or Longest) . See Mode (statitics) on Wikipedia. If there are concurrent mode values (multiple buckets containing the same amount of values), the selected mode variant allows you to select either the mode with the shortest lengths, or the one with the longest out of the available conflicting modes. Absolute Mode Mean = 50 // [50, 50] is the largest bucket of equal values Absolute Mode Mean = 0.041 // [0.041, 0.041] is the largest bucket of equal values . In this is scenario, there is no conflicting frequencies. The Mode Tolerance property is used to fill frequency buckets based on equality with already sampled values. Central . Central uses the middle value between the shortest and longest lengths as mean. Absolute Central Mean = 605 // 10 + (1200-10)/2 Relative Central Mean = 0.504 // 0.0083 + (1-0.0083)/2 . Fixed . Fixed mean is basically user-defined mean. This is the way to go if you don‚Äôt care about statistics or if you have a consistent, metrics-driven setup. This is the least flexible but most performant approach as there is no need to sample any statistics prior to pruning. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#mean-methods",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#mean-methods"
  },"161": {
    "doc": "Prune edges by Length",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#usage",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#usage"
  },"162": {
    "doc": "Prune edges by Length",
    "title": "Easy pruning",
    "content": "If you just want to prune edge above or below a certain fixed length ‚Äì i.e any edge longer than 500 or any edge shorter than 42, just do the following: . Prune any edge longer than X . Measure: Absolute, Mean Method: Fixed, Mean Value: 500, Prune Above : 0. This basically prune all edges which length is above 500 + 0. Prune any edge shorter than X . Measure: Absolute, Mean Method: Fixed, Mean Value: 42, Prune Below : 0. This basically prune all edges which length is below 42 - 0. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#easy-pruning",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#easy-pruning"
  },"163": {
    "doc": "Prune edges by Length",
    "title": "Cluster Output Settings",
    "content": "See Working with Clusters. | Property | Description | . | Edge Position | If enabled, edge point‚Äô position will be the result of that value used as a lerp between its start and end Vtx point. | . | : Pruning : | ¬† | . | Min Vtx Count | If enabled, only ouputs clusters that have more ( &gt; ) Vtx than the specified number. | . | Max Vtx Count | If enabled, only ouputs clusters that have less ( &lt; ) Vtx than the specified number. | . | Min Edge Count | If enabled, only ouputs clusters that have more ( &gt; ) Edge than the specified number. | . | Max Edge Count | If enabled, only ouputs clusters that have less ( &lt; ) Edge than the specified number. | . | Refresh Edge Seed | If enabled, Edge points gets a fresh seed. | . | Build and Cache Cluster | If enabled, pre-build and cache cluster along with the point data.This has a slight memory cost associated to it, but can offer tremendous performance improvement.If disabled, cluster processors that comes down the line have to rebuild clusters from point data, which is very costly as they are also tested for errors and possible disconnections in the process. | . | Expand Clusters | If enabled, also build &amp; cache another layer of cache data.This can have a significant memory cost, as well as a minimal performance overhead, but can greatly improve certain specific operations down the line. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html#cluster-output-settings",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html#cluster-output-settings"
  },"164": {
    "doc": "Prune edges by Length",
    "title": "Prune edges by Length",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-prune-by-length.html",
    "relUrl": "/doc-clusters/clusters-prune-by-length.html"
  },"165": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-sanitize-clusters.html#sanitize-clusters",
    "relUrl": "/doc-clusters/clusters-sanitize-clusters.html#sanitize-clusters"
  },"166": {
    "doc": "Sanitize Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | Prune Isolated Points | If enabled, input points that are not part of a valid cluster *(either no edges or pruned cluster)* will be omitted from the Vtx output.If disabled, the input points are forwarded as-is in the Vtx output (with added attributes). | . | Edge Position | If enabled, this sets the position of the Edge points to a lerp between their Start and End points.*By default, Edges point are placed at the center between their two Vtx.* | . | Min Cluster Size | If enabled, any cluster with less **edges** than specified will be pruned from the output. | . | Max Cluster Size | If enabled, any cluster with more **edges** than specified will be pruned from the output. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-sanitize-clusters.html#properties",
    "relUrl": "/doc-clusters/clusters-sanitize-clusters.html#properties"
  },"167": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/clusters-sanitize-clusters.html",
    "relUrl": "/doc-clusters/clusters-sanitize-clusters.html"
  },"168": {
    "doc": "Unpack Clusters",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . The Unpack Clusters node ‚Ä¶ . Packed ClustersIndividually packed vtx/edges pairs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-unpack-clusters.html#unpack-clusters",
    "relUrl": "/doc-clusters/packing-clusters/clusters-unpack-clusters.html#unpack-clusters"
  },"169": {
    "doc": "Unpack Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-unpack-clusters.html#properties",
    "relUrl": "/doc-clusters/packing-clusters/clusters-unpack-clusters.html#properties"
  },"170": {
    "doc": "Unpack Clusters",
    "title": "Unpack Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/clusters-unpack-clusters.html",
    "relUrl": "/doc-clusters/packing-clusters/clusters-unpack-clusters.html"
  },"171": {
    "doc": "Comparisons",
    "title": "Comparisons",
    "content": "PCGEx‚Äô comparison overview . This page lists the comparison used by a bunch of different nodes. There‚Äôs a lot of node in PCGEx that offer comparison settings ‚Äì either numeric or string based. This is a summary of these; individual pages will link to this. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/comparisons.html#comparisons",
    "relUrl": "/doc-general/comparisons.html#comparisons"
  },"172": {
    "doc": "Comparisons",
    "title": "Numeric comparisons",
    "content": ". | Comparison | Data | . | == | Strictly equal. | . | != | Strictly not equal. | . | &gt;= | Equal or greater. | . | &lt;= | Equal or smaller. | . | &gt; | Strictly greater. | . | &lt; | Strictly smaller. | . | ~= | Nearly equal. | . | !~= | Nearly not equal. | . Approximative comparison will reveal an additional parameter, dubbed Tolerance. This represents the size of acceptable approximation for the comparison to pass. For example, when checking if 0.5 ~= 0.4 with a tolerance of 0.1 will return true. Large tolerances can be a great, cheap way to achieve results akin to a ‚Äúwithin range‚Äù comparison! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/comparisons.html#numeric-comparisons",
    "relUrl": "/doc-general/comparisons.html#numeric-comparisons"
  },"173": {
    "doc": "Comparisons",
    "title": "String comparisons",
    "content": ". | Comparison | Data | . | == | Strictly equal. | . | != | Strictly not equal. | . | == (Length) | String lengths are strictly equal. | . | != (Length) | String lengths are strictly not equal. | . | &gt;= (Length) | String length is equal or greater. | . | &lt;= (Length) | String lengths are is equal or smaller. | . | &gt; (Length) | String lengths is strictly greater. | . | &lt; (Length) | String lengths is Strictly smaller. | . | &gt; (Locale) | String locale is strictly greater.*In alphabetical order. (Z is greater than A)* | . | &lt; (Locale) | String locale is strictly smaller.*In alphabetical order. (A is smaller than Z)* | . | Contains | Check if string is contained in another one.*Useful if you have solid naming conventions.* | . | Starts With | Check if the string starts with another one.*Useful for prefixes.* | . | Ends With | Check if the string ends with another one.*Useful for suffixes.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/comparisons.html#string-comparisons",
    "relUrl": "/doc-general/comparisons.html#string-comparisons"
  },"174": {
    "doc": "Comparisons",
    "title": "Comparisons",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/comparisons.html",
    "relUrl": "/doc-general/comparisons.html"
  },"175": {
    "doc": "Debug",
    "title": "Debug",
    "content": "Working with PCGEx Debug nodes . Need-to-know stuff regarding internal visual debugging tools available in PCGEx. | Visual Debugging | Debugging inside subgraphs | Available debug nodes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#debug",
    "relUrl": "/doc-misc/debug/debug.html#debug"
  },"176": {
    "doc": "Debug",
    "title": "Visual Debugging",
    "content": "PCGEx Debug node draw debug information flagged as persistent, and as such needs to be flushed. However, there is currently no way in Unreal to selectively flush or tag debug line ‚Äì hence they needs to be flushed before they are redrawn (Or thousands of thousands of line willl stack and bring the editor to its knees). This means you need to use Flush Debug in your flow before using other PCGEx‚Äô debug nodes. The Flush Debug is basically there to manage execution order and ensure stuffs aren‚Äôt flushed from the buffer right after they‚Äôre drawn. It‚Äôs non-intrusive, and sometimes needs an update or two to work right. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#visual-debugging",
    "relUrl": "/doc-misc/debug/debug.html#visual-debugging"
  },"177": {
    "doc": "Debug",
    "title": "Debugging inside subgraphs",
    "content": ". When disabled, the input data of a node becomes a simple passthrough. The PCGExDebug property in the Debug details of the node is overridable and basically allows you to remotely disable the PCGEx debug nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#debugging-inside-subgraphs",
    "relUrl": "/doc-misc/debug/debug.html#debugging-inside-subgraphs"
  },"178": {
    "doc": "Debug",
    "title": "Available debug nodes",
    "content": "At the time of writing, there are three main debug nodes: . | Draw Attributes | Draw Edges | . Draw Edges is specific to Edges &amp; Clusters, however Draw Attributes is designed to work with any input. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#available-debug-nodes",
    "relUrl": "/doc-misc/debug/debug.html#available-debug-nodes"
  },"179": {
    "doc": "Debug",
    "title": "Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html",
    "relUrl": "/doc-misc/debug/debug.html"
  },"180": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. The Draw Edges node ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-draw.html#draw-edges",
    "relUrl": "/doc-clusters/edges-draw.html#draw-edges"
  },"181": {
    "doc": "Draw Edges",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Color | Primary debug color | . | Secondary Color | If enabled, each cluster will have a different color ranging from the primary color to the secondary color, based on the dataset index in the inputs. | . | Thickness | Line thickness | . | Depth Priority | Debug draw depth priority. - -1 : draw on top of everything.- 0 : Regular depth sorting.- 1 : Draw behind everything. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-draw.html#properties",
    "relUrl": "/doc-clusters/edges-draw.html#properties"
  },"182": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-draw.html",
    "relUrl": "/doc-clusters/edges-draw.html"
  },"183": {
    "doc": "üùñ Adjacency",
    "title": "üùñ Adjacency",
    "content": "PCGEx | Cluster Filter : Adjacency Check if adjacent node meet specific conditions . The Adjacency filter performs numeric comparisons on each connection of a Vtx, allowing precise control over success criteria based on the number of passed comparisons, offering the flexibility to test either discrete or relative connections. FilterA single cluster filter definition . Table of content . | Properties | . The adjacency filter does a simple numeric comparison on each individual connections of a Vtx, and offer fine grained control over what qualifies as a ‚Äúsuccess‚Äù, based on how many connections passed the comparison or not. What makes it equally useful and tricky to set-up is its ability to test against either a discrete number of connection, or relative ones. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-adjacency.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/filter-adjacency.html#adjacency"
  },"184": {
    "doc": "üùñ Adjacency",
    "title": "Properties",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Priority | Defines the order in which this flag operation will be processed.*See Flag Nodes* | . | Adjacency Settings | Defines how to deal with the number of adjacent nodes *as a criteria to the filter success*.*Covered in more depth later in this page* | . | Compare Against | TBD | . | Operand A Constant | TBD | . | Operand A Attribute | TBD | . | Comparison | How to compare Operand A against Operand B*See Flag Nodes* | . | Operand B Source | TBD | . | Operand B (Neighbor) | TBD | . | Tolerance | Comparison tolerance, for non-strict comparison modes. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-adjacency.html#properties",
    "relUrl": "/doc-clusters/flag-nodes/filter-adjacency.html#properties"
  },"185": {
    "doc": "üùñ Adjacency",
    "title": "Adjacency",
    "content": "| Property | Description | . | : Settings : | ¬† | . | Mode | The mode lets you choose how to set the flags value, as a user.- Direct is probably the most useful, as it can be set using an override pin.- Individual lets you use an array where you can set individual bits by their position (index), and whether they‚Äôre true or false.- Composite lets you set individual bits using dropdowns. | . Mode : All . This mode consolidate all the connections‚Äô values into a single one to test against. | : Consolidation : | ¬† | . | Individual | Test individual neighbors one by one | . | Individual | Test against averaged value of all neighbors | . | Individual | Test against the Min value of all neighbors | . | Individual | Test against the Max value of all neighbors | . | Individual | Test against the Sum value of all neighbors | . DOC TBD . Mode : Some . This mode test individual connections, but only some of them are required to pass for the entire filter to be considered a success. How that ‚Äúsome‚Äù is defined relies on a comparison against a threshold: how many neighbors pass the test vs. how many neighbors there are. | : Threshold Settings : | ¬† | . | Threshold Comparison | TBD | . | Threshold Type | TBD | . | Threshold Source | TBD | . | Discrete Threshold | TBD | . | Relative Threshold | TBD | . | Threshold Attribute | TBD | . | Threshold Source | TBD | . | Rounding | TBD | . | Threshold Tolerance | TBD | . DOC TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-adjacency.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/filter-adjacency.html#adjacency"
  },"186": {
    "doc": "üùñ Adjacency",
    "title": "üùñ Adjacency",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-adjacency.html",
    "relUrl": "/doc-clusters/flag-nodes/filter-adjacency.html"
  },"187": {
    "doc": "üùñ Bitmask",
    "title": "üùñ Bitmask",
    "content": "The **Bitmask Filter compares a bitmask against another** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bitmask.html#bitmask",
    "relUrl": "/doc-misc/uber-filter/filter-bitmask.html#bitmask"
  },"188": {
    "doc": "üùñ Bitmask",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bitmask.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-bitmask.html#properties"
  },"189": {
    "doc": "üùñ Bitmask",
    "title": "üùñ Bitmask",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bitmask.html",
    "relUrl": "/doc-misc/uber-filter/filter-bitmask.html"
  },"190": {
    "doc": "üùñ Bool",
    "title": "üùñ Bool",
    "content": "The **Bool Filter does a simple bool comparison** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bool.html#bool",
    "relUrl": "/doc-misc/uber-filter/filter-bool.html#bool"
  },"191": {
    "doc": "üùñ Bool",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bool.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-bool.html#properties"
  },"192": {
    "doc": "üùñ Bool",
    "title": "üùñ Bool",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bool.html",
    "relUrl": "/doc-misc/uber-filter/filter-bool.html"
  },"193": {
    "doc": "üùñ Bounds",
    "title": "üùñ Bounds",
    "content": "The **Bounds Filter check if a point is inside or outside provided bounds** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bounds.html#bounds",
    "relUrl": "/doc-misc/uber-filter/filter-bounds.html#bounds"
  },"194": {
    "doc": "üùñ Bounds",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bounds.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-bounds.html#properties"
  },"195": {
    "doc": "üùñ Bounds",
    "title": "üùñ Bounds",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-bounds.html",
    "relUrl": "/doc-misc/uber-filter/filter-bounds.html"
  },"196": {
    "doc": "üùñ Dot Product",
    "title": "üùñ Dot Product",
    "content": "The **Dot Product Filter compares the dot product of two direction vectors** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html#dot-product",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html#dot-product"
  },"197": {
    "doc": "üùñ Dot Product",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html#properties"
  },"198": {
    "doc": "üùñ Dot Product",
    "title": "üùñ Dot Product",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html"
  },"199": {
    "doc": "üùñ Edge Direction",
    "title": "üùñ Edge Direction",
    "content": "PCGEx | Cluster Filter : Edge Direction Check if adjacent node meet specific conditions . The Edge Direction filter ‚Ä¶ . FilterA single cluster filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-edge-direction.html#edge-direction",
    "relUrl": "/doc-clusters/flag-nodes/filter-edge-direction.html#edge-direction"
  },"200": {
    "doc": "üùñ Edge Direction",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-edge-direction.html#properties",
    "relUrl": "/doc-clusters/flag-nodes/filter-edge-direction.html#properties"
  },"201": {
    "doc": "üùñ Edge Direction",
    "title": "Adjacency",
    "content": "| Property | Description | . | : Settings : | ¬† | . | Mode | The mode lets you choose how to set the flags value, as a user.- Direct is probably the most useful, as it can be set using an override pin.- Individual lets you use an array where you can set individual bits by their position (index), and whether they‚Äôre true or false.- Composite lets you set individual bits using dropdowns. | . Mode : All . This mode consolidate all the connections‚Äô values into a single one to test against. | : Consolidation : | ¬† | . | Individual | Test individual neighbors one by one | . | Individual | Test against averaged value of all neighbors | . | Individual | Test against the Min value of all neighbors | . | Individual | Test against the Max value of all neighbors | . | Individual | Test against the Sum value of all neighbors | . DOC TBD . Mode : Some . This mode test individual connections, but only some of them are required to pass for the entire filter to be considered a success. How that ‚Äúsome‚Äù is defined relies on a comparison against a threshold: how many neighbors pass the test vs. how many neighbors there are. | : Threshold Settings : | ¬† | . | Threshold Comparison | TBD | . | Threshold Type | TBD | . | Threshold Source | TBD | . | Discrete Threshold | TBD | . | Relative Threshold | TBD | . | Threshold Attribute | TBD | . | Threshold Source | TBD | . | Rounding | TBD | . | Threshold Tolerance | TBD | . DOC TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-edge-direction.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/filter-edge-direction.html#adjacency"
  },"202": {
    "doc": "üùñ Edge Direction",
    "title": "üùñ Edge Direction",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-edge-direction.html",
    "relUrl": "/doc-clusters/flag-nodes/filter-edge-direction.html"
  },"203": {
    "doc": "üùñ Group (AND/OR)",
    "title": "üùñ Group (AND/OR)",
    "content": "The **Group Filter allows setting up complex AND/OR branches.** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-group.html#group-andor",
    "relUrl": "/doc-misc/uber-filter/filter-group.html#group-andor"
  },"204": {
    "doc": "üùñ Group (AND/OR)",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-group.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-group.html#properties"
  },"205": {
    "doc": "üùñ Group (AND/OR)",
    "title": "üùñ Group (AND/OR)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-group.html",
    "relUrl": "/doc-misc/uber-filter/filter-group.html"
  },"206": {
    "doc": "üùñ Mean Value",
    "title": "üùñ Mean Value",
    "content": "The **Mean Value Filter compares the mean statistical value of two attributes** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html#mean-value",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html#mean-value"
  },"207": {
    "doc": "üùñ Mean Value",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html#properties"
  },"208": {
    "doc": "üùñ Mean Value",
    "title": "üùñ Mean Value",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html"
  },"209": {
    "doc": "üùñ Modulo Comparison",
    "title": "üùñ Modulo Comparison",
    "content": "The **Modulo Comparison Filter compares the module value of two attributes against a third operand** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-modulo-compare.html#modulo-comparison",
    "relUrl": "/doc-misc/uber-filter/filter-modulo-compare.html#modulo-comparison"
  },"210": {
    "doc": "üùñ Modulo Comparison",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-modulo-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-modulo-compare.html#properties"
  },"211": {
    "doc": "üùñ Modulo Comparison",
    "title": "üùñ Modulo Comparison",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-modulo-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-modulo-compare.html"
  },"212": {
    "doc": "üùñ Neighbors Count",
    "title": "üùñ Neighbors Count",
    "content": "PCGEx | Cluster Filter : Neighbors Count Check a node‚Äô neighbors count . The Neighbor Count filter ‚Ä¶ . FilterA single cluster filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-neighbors-count.html#neighbors-count",
    "relUrl": "/doc-clusters/flag-nodes/filter-neighbors-count.html#neighbors-count"
  },"213": {
    "doc": "üùñ Neighbors Count",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-neighbors-count.html#properties",
    "relUrl": "/doc-clusters/flag-nodes/filter-neighbors-count.html#properties"
  },"214": {
    "doc": "üùñ Neighbors Count",
    "title": "Adjacency",
    "content": "| Property | Description | . | : Settings : | ¬† | . | Mode | The mode lets you choose how to set the flags value, as a user.- Direct is probably the most useful, as it can be set using an override pin.- Individual lets you use an array where you can set individual bits by their position (index), and whether they‚Äôre true or false.- Composite lets you set individual bits using dropdowns. | . Mode : All . This mode consolidate all the connections‚Äô values into a single one to test against. | : Consolidation : | ¬† | . | Individual | Test individual neighbors one by one | . | Individual | Test against averaged value of all neighbors | . | Individual | Test against the Min value of all neighbors | . | Individual | Test against the Max value of all neighbors | . | Individual | Test against the Sum value of all neighbors | . DOC TBD . Mode : Some . This mode test individual connections, but only some of them are required to pass for the entire filter to be considered a success. How that ‚Äúsome‚Äù is defined relies on a comparison against a threshold: how many neighbors pass the test vs. how many neighbors there are. | : Threshold Settings : | ¬† | . | Threshold Comparison | TBD | . | Threshold Type | TBD | . | Threshold Source | TBD | . | Discrete Threshold | TBD | . | Relative Threshold | TBD | . | Threshold Attribute | TBD | . | Threshold Source | TBD | . | Rounding | TBD | . | Threshold Tolerance | TBD | . DOC TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-neighbors-count.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/filter-neighbors-count.html#adjacency"
  },"215": {
    "doc": "üùñ Neighbors Count",
    "title": "üùñ Neighbors Count",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/filter-neighbors-count.html",
    "relUrl": "/doc-clusters/flag-nodes/filter-neighbors-count.html"
  },"216": {
    "doc": "üùñ Numeric Comparison",
    "title": "üùñ Numeric Comparison",
    "content": "The **Numeric Comparison Filter compares the arithmetic value of two attributes** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html#numeric-comparison",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html#numeric-comparison"
  },"217": {
    "doc": "üùñ Numeric Comparison",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html#properties"
  },"218": {
    "doc": "üùñ Numeric Comparison",
    "title": "üùñ Numeric Comparison",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html"
  },"219": {
    "doc": "üùñ String Compare",
    "title": "üùñ String Compare",
    "content": "The **Compare String Filter compares two strings** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html#string-compare",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html#string-compare"
  },"220": {
    "doc": "üùñ String Compare",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html#properties"
  },"221": {
    "doc": "üùñ String Compare",
    "title": "üùñ String Compare",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html"
  },"222": {
    "doc": "üùñ Within Range",
    "title": "üùñ Within Range",
    "content": "The **Within Range Filter checks if a value is inside a given range** . TBD . FilterA single filter definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-within-range.html#within-range",
    "relUrl": "/doc-misc/uber-filter/filter-within-range.html#within-range"
  },"223": {
    "doc": "üùñ Within Range",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-within-range.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-within-range.html#properties"
  },"224": {
    "doc": "üùñ Within Range",
    "title": "üùñ Within Range",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-within-range.html",
    "relUrl": "/doc-misc/uber-filter/filter-within-range.html"
  },"225": {
    "doc": "Node Flag",
    "title": "Node Flag",
    "content": "PCGEx | Cluster : Node Flag A single flag definition . The Node Flag uses a variety of filters to perform bitmask-based flag operations that can be set in three modes; Direct, Individual, or Composite, with various logical operations like AND, OR, NOT, and XOR. FiltersAny number of filters. Supports both regular point filters as well as special cluster filters. FlagA single flag definition used along with a Flag Node node. Pass Bitmask(Advanced output) - Outputs the Pass State Flags as a re-usable bitmask. Fail Bitmask(Advanced output) - Outputs the Fail State Flags as a re-usable bitmask. Related . | Working with Clusters | Flag Nodes | Uber Filter | . Table of content . | Properties . | State Flags . | Mode : Direct | Mode : Individual | Mode : Composite | . | Operation | Available Cluster Filters | Available Regular Filters | . | . The Node Flag, not to be confused with Flag Nodes, performs a single per-point bitmask-based operation on an incoming value; based on any number of input filters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#node-flag",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#node-flag"
  },"226": {
    "doc": "Node Flag",
    "title": "Properties",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Name | If enabled, the direction of the probe will be adjusted by the current probing point‚Äô transform.*If disabled, the direction is in world space.* | . | Priority | Fixed maximum connections for every point. | . | Pass State Flags | If enabled, will apply the specified flags to the incoming bitmask **when the filters are true.***See below for more infos on flag operation.* | . | Fail State Flags | If enabled, will apply the specified flags to the incoming bitmask **when the filters return false.***See below for more infos on flag operation.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#properties",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#properties"
  },"227": {
    "doc": "Node Flag",
    "title": "State Flags",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Mode | The mode lets you choose how to set the flags value, as a user.- Direct is probably the most useful, as it can be set using an override pin.- Individual lets you use an array where you can set individual bits by their position (index), and whether they‚Äôre true or false.- Composite lets you set individual bits using dropdowns. | . Mode : Direct . This is probably the most useful &amp; straightforward mode, as it can be set using an override pin. | Bitmask | Sets the raw bitmask value, as an int64. | . | Op | Which operation to do on the selected bit using the value set below.Can be either:=, AND, OR, NOT, or XOR.*See below for more infos.* | . Mode : Individual . Individual mode lets you cherry pick which operation you want to perform on specific bits, using an array. Note that the order of the array itself is of no consequence; the Bit Index property is what matters. | : **Individual Operation** : | ¬† | . | Bit Index | The index of the bit this operation will be applied to.Keep the ranges between 0 and 63 | . | Op | Which operation to do on the selected bit using the value set below.Can be either:=, AND, OR, NOT, or XOR.*See below for more infos.* | . | Value | If Individual is selected, this an array where each bit is an index/operation pair. | . Mode : Composite . This lets you set the full width of the int64 using a single dropdown per byte. | Op | Which operation to do on the incoming flags using the bitmask created from the dropdowns.Can be either:=, AND, OR, NOT, or XOR.*See below for more infos.* | . | 0-64 Bits | If Composite is selected, a whole bunch of dropdowns will show up. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#state-flags",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#state-flags"
  },"228": {
    "doc": "Node Flag",
    "title": "Operation",
    "content": "| : **Op** : | ¬† | . | = | Set the bit value, with no regard for its current value. | . | AND | TBD | . | OR | TBD | . | NOT | TBD | . | XOR | TBD | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#operation",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#operation"
  },"229": {
    "doc": "Node Flag",
    "title": "Available Cluster Filters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#available-cluster-filters",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#available-cluster-filters"
  },"230": {
    "doc": "Node Flag",
    "title": "üùñ Edge Direction",
    "content": "Check if adjacent node meet specific conditions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#edge-direction",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#edge-direction"
  },"231": {
    "doc": "Node Flag",
    "title": "üùñ Neighbors Count",
    "content": "Check a node‚Äô neighbors count . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#neighbors-count",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#neighbors-count"
  },"232": {
    "doc": "Node Flag",
    "title": "üùñ Adjacency",
    "content": "Check if adjacent node meet specific conditions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#adjacency"
  },"233": {
    "doc": "Node Flag",
    "title": "Available Regular Filters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#available-regular-filters",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#available-regular-filters"
  },"234": {
    "doc": "Node Flag",
    "title": "üùñ Bitmask",
    "content": "The Bitmask Filter compares a bitmask against another . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#bitmask",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#bitmask"
  },"235": {
    "doc": "Node Flag",
    "title": "üùñ Bool",
    "content": "The Bool Filter does a simple bool comparison . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#bool",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#bool"
  },"236": {
    "doc": "Node Flag",
    "title": "üùñ Bounds",
    "content": "The Bounds Filter check if a point is inside or outside provided bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#bounds",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#bounds"
  },"237": {
    "doc": "Node Flag",
    "title": "üùñ Dot Product",
    "content": "The Dot Product Filter compares the dot product of two direction vectors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#dot-product",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#dot-product"
  },"238": {
    "doc": "Node Flag",
    "title": "üùñ Group (AND/OR)",
    "content": "The Group Filter allows setting up complex AND/OR branches. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#group-andor",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#group-andor"
  },"239": {
    "doc": "Node Flag",
    "title": "üùñ Mean Value",
    "content": "The Mean Value Filter compares the mean statistical value of two attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#mean-value",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#mean-value"
  },"240": {
    "doc": "Node Flag",
    "title": "üùñ Modulo Comparison",
    "content": "The Modulo Comparison Filter compares the module value of two attributes against a third operand . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#modulo-comparison",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#modulo-comparison"
  },"241": {
    "doc": "Node Flag",
    "title": "üùñ Numeric Comparison",
    "content": "The Numeric Comparison Filter compares the arithmetic value of two attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#numeric-comparison",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#numeric-comparison"
  },"242": {
    "doc": "Node Flag",
    "title": "üùñ String Compare",
    "content": "The Compare String Filter compares two strings . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#string-compare",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#string-compare"
  },"243": {
    "doc": "Node Flag",
    "title": "üùñ Within Range",
    "content": "The Within Range Filter checks if a value is inside a given range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html#within-range",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html#within-range"
  },"244": {
    "doc": "Node Flag",
    "title": "Node Flag",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/flag-node.html",
    "relUrl": "/doc-clusters/flag-nodes/flag-node.html"
  },"245": {
    "doc": "Flat Projection",
    "title": "Flat Projection",
    "content": "TBD . The Flat Projection node‚Ä¶ . InPoints that will be projected or unprojected OutPoints that have been projected or unprojected . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/flat-projection.html#flat-projection",
    "relUrl": "/doc-transforms/flat-projection.html#flat-projection"
  },"246": {
    "doc": "Flat Projection",
    "title": "Properties",
    "content": ". WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/flat-projection.html#properties",
    "relUrl": "/doc-transforms/flat-projection.html#properties"
  },"247": {
    "doc": "Flat Projection",
    "title": "Flat Projection",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/flat-projection.html",
    "relUrl": "/doc-transforms/flat-projection.html"
  },"248": {
    "doc": "Basics",
    "title": "Basics",
    "content": "General concepts &amp; disambiguation . An overview of the concepts PCGEx uses, and assumption around the meaning of certain keywords. Throrough this doc, you will find mention of points, Dataset, vtx, edges, clusters, paths and more. While more advanced concepts are expanded on their own page, here are a few basics: . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html#basics",
    "relUrl": "/doc-general/general-concepts.html#basics"
  },"249": {
    "doc": "Basics",
    "title": "Points",
    "content": "Points are smallest piece of data you work with within PCG. They have a list of Static properties such as $Density, $Color, $Position, $Rotation etc. While you can change their values, you can‚Äôt remove any of them from a point. They‚Äôre its DNA. On top of static properties, point can have Dynamic attributes, which are custom, user-defined properties which type, names and value you control. PCGEx leverages attributes a lot, and doesn‚Äôt deal too much in properties except for blending. Some PCGEx nodes uses attributes to store internal data. These are prefixed PCGEx/. Try not do modify these unless you know exactly what you‚Äôre doing ‚Äì most of them are more complex data stored as uint64. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html#points",
    "relUrl": "/doc-general/general-concepts.html#points"
  },"250": {
    "doc": "Basics",
    "title": "Dataset",
    "content": "Often Point Datasets, they are container for a single type of more atomic data ‚Äì i.e, points. Contrary to points that share a common set of static properties, each Dataset can have its own custom list of attributes; with per-point values. Most PCGEx nodes can take multiple Dataset as input, and will process them in parallel. Some very specific nodes are processing Dataset against each others, but it‚Äôs clear when they do so. It‚Äôs important to understand that most PCGEx nodes will do their biding on individual Datasets, ignoring what‚Äôs going on with others processed in parallel : things like min/max values for example are computed per Dataset, and never against the entierety of the inputs. As a rule of thumb, PCGEx will always process Dataset in solation of the others, and output Dataset in the same order as they are in the input. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html#dataset",
    "relUrl": "/doc-general/general-concepts.html#dataset"
  },"251": {
    "doc": "Basics",
    "title": "Paths, Vtx and Edges",
    "content": "PCGEx uses the terms Paths, Vtx and Edges for some inputs &amp; ouputs. These are just regular Point Datasets whose name is used to convey certain assumptions. Those assumptions are covered in more details on specific sections of the doc. Namely Clusters and Paths . Keep in mind that these are just points and they can be used with any other regular node ‚Äì not just PCGEx! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html#paths-vtx-and-edges",
    "relUrl": "/doc-general/general-concepts.html#paths-vtx-and-edges"
  },"252": {
    "doc": "Basics",
    "title": "Clusters",
    "content": "Clusters is the word PCGEx uses to mean Connected pair/groups of points. Pairs/groups are identified &amp; retrieved through tags at the moment; that will change in the future for a more robust approach. While they are still just points, make sure to check out the Clusters specific documentation! . Cluster-related nodes uses tags to store internal data. These are prefixed PCGEx/. Try not do modify these unless you know exactly what you‚Äôre doing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html#clusters",
    "relUrl": "/doc-general/general-concepts.html#clusters"
  },"253": {
    "doc": "Basics",
    "title": "Basics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/general-concepts.html",
    "relUrl": "/doc-general/general-concepts.html"
  },"254": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-2d.html#convex-hull-2d",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-2d.html#convex-hull-2d"
  },"255": {
    "doc": "Convex Hull 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Prune Points | If enabled, Vtx that aren‚Äôt part of the hull are pruned from the output. | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-2d.html#properties",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-2d.html#properties"
  },"256": {
    "doc": "Convex Hull 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use ‚Äì it‚Äôs very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-2d.html#projection-settings",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-2d.html#projection-settings"
  },"257": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-2d.html",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-2d.html"
  },"258": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-3d.html#convex-hull-3d",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-3d.html#convex-hull-3d"
  },"259": {
    "doc": "Convex Hull 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Prune Points | If enabled, Vtx that aren‚Äôt part of the hull are pruned from the output. | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-3d.html#properties",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-3d.html#properties"
  },"260": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/graphs-convex-hull-3d.html",
    "relUrl": "/doc-clusters/hulls/graphs-convex-hull-3d.html"
  },"261": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. The Delaunay 2D node outputs a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs ‚òÖ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Delaunay-2D . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-2d.html#delaunay-2d",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-2d.html#delaunay-2d"
  },"262": {
    "doc": "Delaunay 2D",
    "title": "Properties",
    "content": ". If you‚Äôd like to know more about Delaunay intrinsic properties, check out the Wikipedia article! . | Property | Description | . | **Settings**| | ¬† | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| | ¬† | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-2d.html#properties",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-2d.html#properties"
  },"263": {
    "doc": "Delaunay 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use ‚Äì it‚Äôs very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-2d.html#projection-settings",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-2d.html#projection-settings"
  },"264": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-2d.html",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-2d.html"
  },"265": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. The Delaunay 3D node outputs a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs ‚òÖ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Delaunay-3D . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-3d.html#delaunay-3d",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-3d.html#delaunay-3d"
  },"266": {
    "doc": "Delaunay 3D",
    "title": "Properties",
    "content": ". If you‚Äôd like to know more about Delaunay intrinsic properties, check out the Wikipedia article! . | Property | Description | . | **Settings**| | ¬† | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| | ¬† | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-3d.html#properties",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-3d.html#properties"
  },"267": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-delaunay-3d.html",
    "relUrl": "/doc-clusters/graphs/graphs-delaunay-3d.html"
  },"268": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs ‚òÖ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Voronoi-2D . Related . | Working with Clusters | . Table of content . | Properties . | Method | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-2d.html#voronoi-2d",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-2d.html#voronoi-2d"
  },"269": {
    "doc": "Voronoi 2D",
    "title": "Properties",
    "content": ". If you‚Äôd like to know more about Voronoi intrinsic properties, check out the Wikipedia article! . | Property | Description | . | **Settings**| | ¬† | . | Method | The method used to position Voronoi‚Äô sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points‚Äô bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Clusters.* | . | **Hull Identification**| | ¬† | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-2d.html#properties",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-2d.html#properties"
  },"270": {
    "doc": "Voronoi 2D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi‚Äô site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay‚Äô triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-2d.html#method",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-2d.html#method"
  },"271": {
    "doc": "Voronoi 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use ‚Äì it‚Äôs very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-2d.html#projection-settings",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-2d.html#projection-settings"
  },"272": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-2d.html",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-2d.html"
  },"273": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. InPoints clouds that will be triangulated VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs ‚òÖ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Voronoi-3D . Related . | Working with Clusters | . Table of content . | Properties . | Method | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-3d.html#voronoi-3d",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-3d.html#voronoi-3d"
  },"274": {
    "doc": "Voronoi 3D",
    "title": "Properties",
    "content": ". If you‚Äôd like to know more about Voronoi intrinsic properties, check out the Wikipedia article! . | Property | Description | . | **Settings**| | ¬† | . | Method | The method used to position Voronoi‚Äô sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points‚Äô bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Clusters.* | . | **Hull Identification**| | ¬† | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don‚Äôt mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-3d.html#properties",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-3d.html#properties"
  },"275": {
    "doc": "Voronoi 3D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi‚Äô site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay‚Äô triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-3d.html#method",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-3d.html#method"
  },"276": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/graphs-voronoi-3d.html",
    "relUrl": "/doc-clusters/graphs/graphs-voronoi-3d.html"
  },"277": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . DOC TDB ‚Äì Heuristics underwent a thorough refactor that isn‚Äôt documented yet. See the example project! . Heuristics Attribute allows fine-grained and precise control over pathfinding constraints by leveraging user-defined attributes. When dealing with modifiers, keep in mind that lower values are considered better than higher ones by the ‚äö Search algorithms. Checklist . | Properties | Individual Modifier . | Properties . | Weight | Score Curve üìå | . | Examples . | A - Linear | B - Expo | C - Inverse Expo | D - Yoyo | . | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#heuristic-attribute",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#heuristic-attribute"
  },"278": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "Properties",
    "content": "| Property | Description | . | Reference Weight | The reference weight is used internally by heuristics to \"adapt\" its scale against modifiers. *In other words, if the heuristic module itself was outputing a value like a modifier, this would its Weight property.* | . | **Modifier List** | A list of individual modifiers. Their values are accumulated per Source, and the final sum is used by the ‚äö Search algorithm. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#properties"
  },"279": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "Individual Modifier",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#individual-modifier",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#individual-modifier"
  },"280": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "Properties",
    "content": "| Property | Description | . | Enabled | If disabled, this modifier will be ignored by the pathfinding process. *This is basically a QoL toggle to facilitate experimentation and better understand the impact of a specific modifier when they start pilling up.* | . | Source | Source define if the attribute value of the modifier is fetched from the Vtx point data, or from the Edge point data.*See Pathfinding.* | . | **Weight** | The weight of a modifier represent its final maximum value. | . | Selector | Attribute to read modifier value from. Reads a double.*See Attribute Selectors.* | . | Local Weight | If enabled, the weight used for the modifier is fetched from a local attribute (same Source` as base value), allowing for per-point weight. | . | Score Curve | The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit.More infos below. | . Weight . Under the hood, the value of a modifier is remapped from its min/max to 0-1. That remapped value is used to sample the (Score Curve)[#score-curve] and then that value is multiplied by the weight. Depending on the selected Search, this value is post-processed to ensure it is absolute (non-negative) . Score Curve üìå . The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit. The curve is expected to stay normalized in the 0-1 range on the y axis, and is sampled in the 0-1 range on the x axis. Just keep in mind the resulting sampled value will be made absolute (non-negative), and is used as a multiplier. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#properties-1",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#properties-1"
  },"281": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "Examples",
    "content": "Say we set-up a point attribute modifier using MyWeightAttribute, which has raw values ranging from -50 to 50, with a weight of 100. | Raw values will be remapped to 0-1 | The curve will be sampled, then multiplied by the weight. | . A - Linear . This is the default, linear curve. It doesn‚Äôt modulate weight, so the final weight will closely match the attribute range. | Raw attribute value | ‚Üí Remapped to | ‚Üí Sampled at | ‚Üí Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.5 | **50** | . | 25 | 0.75 | 0.75 | **75** | . | 50 | 1.0 | 1.0 | **100** | . B - Expo . Exponential curve is very useful to emphasize higher values and ‚Äúignore‚Äù lower ones. This can be especially useful when the attribute is for example the edge length, the resulting weight would strongly discourage long edges . | Raw attribute value | ‚Üí Remapped to | ‚Üí Sampled at | ‚Üí Final weight | . | -50 | 0.0 | 0.0 | **0** | . | -25 | 0.25 | 0.01 | **1** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.25 | **25** | . | 50 | 1.0 | 1.0 | **100** | . C - Inverse Expo . Inverted curve (exponential or not) curve is very useful to, well, inverse the weight. This is especially handy if you want to discourage smaller values and ignore higher ones. | Raw attribute value | ‚Üí Remapped to | ‚Üí Sampled at | ‚Üí Final weight | . | -50 | 0.0 | 1 | **100** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.01 | **1** | . | 50 | 1.0 | 0 | **0** | . D - Yoyo . This is really just here to make a comparison with other more classic approaches. This resulting weight would ignore extreme values inside the range and strongly discourage anything closer to the center. | Raw attribute value | ‚Üí Remapped to | ‚Üí Sampled at | ‚Üí Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.5 | **50** | . | 0 | 0.5 | 1 | **100** | . | 25 | 0.75 | 0.5 | **50** | . | 50 | 1.0 | 0 | **0** | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#examples",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#examples"
  },"282": {
    "doc": "üù∞ Heuristic Attribute",
    "title": "üù∞ Heuristic Attribute",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html"
  },"283": {
    "doc": "üù∞ Azimuth",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-azimuth.html#azimuth",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-azimuth.html#azimuth"
  },"284": {
    "doc": "üù∞ Azimuth",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-azimuth.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-azimuth.html#properties"
  },"285": {
    "doc": "üù∞ Azimuth",
    "title": "üù∞ Azimuth",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-azimuth.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-azimuth.html"
  },"286": {
    "doc": "üù∞ Shortest Distance",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html#shortest-distance",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html#shortest-distance"
  },"287": {
    "doc": "üù∞ Shortest Distance",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html#properties"
  },"288": {
    "doc": "üù∞ Shortest Distance",
    "title": "üù∞ Shortest Distance",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html"
  },"289": {
    "doc": "üù∞ Inertia",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-inertia.html#inertia",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-inertia.html#inertia"
  },"290": {
    "doc": "üù∞ Inertia",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-inertia.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-inertia.html#properties"
  },"291": {
    "doc": "üù∞ Inertia",
    "title": "üù∞ Inertia",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-inertia.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-inertia.html"
  },"292": {
    "doc": "üù∞ Least Nodes",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html#least-nodes",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html#least-nodes"
  },"293": {
    "doc": "üù∞ Least Nodes",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html#properties"
  },"294": {
    "doc": "üù∞ Least Nodes",
    "title": "üù∞ Least Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html"
  },"295": {
    "doc": "üù∞ Steepness",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html#steepness",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html#steepness"
  },"296": {
    "doc": "üù∞ Steepness",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html#properties"
  },"297": {
    "doc": "üù∞ Steepness",
    "title": "üù∞ Steepness",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html"
  },"298": {
    "doc": "üù∞ Turning",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . None üù∞ HeuristicsA single heuristics definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-turning.html#turning",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-turning.html#turning"
  },"299": {
    "doc": "üù∞ Turning",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-turning.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-turning.html#properties"
  },"300": {
    "doc": "üù∞ Turning",
    "title": "üù∞ Turning",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-turning.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-turning.html"
  },"301": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . The Smooth node enhances path appearance. Customize closed paths, protect start and end points. Adjust global influence for overall smoothing. Use local influence to tailor per-point impact. Explore different smoothing types for varied effects. PathsPaths which points will be smoothed PathsPaths with updated points positions . Table of content . | Properties . | Smoothing modules | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#smooth",
    "relUrl": "/doc-paths/paths-smooth/#smooth"
  },"302": {
    "doc": "Smooth",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Preserve Start | If enabled, the first point will be unaffected by the smoothing*Same as if its local influence was 0.* | . | Preserve End | If enabled, the last point will be unaffected by the smoothing*Same as if its local influence was 0.* | . | Influence | Global influence.This is used as a value to lerp the smoothed points properties with the unsmoothed one.- 0 = Not smoothed- 1 = Fully smoothed | . | Local Influence | If enabled, the influence property is applied per-point using the specified attribute from the point being smoothed. | . | **Smoothing** | This property lets you select which kind of smoothing you want to apply to the input paths.*See [Available Smoothing Modules](#available-smoothing-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#properties",
    "relUrl": "/doc-paths/paths-smooth/#properties"
  },"303": {
    "doc": "Smooth",
    "title": "Smoothing modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#smoothing-modules",
    "relUrl": "/doc-paths/paths-smooth/#smoothing-modules"
  },"304": {
    "doc": "Smooth",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#radius",
    "relUrl": "/doc-paths/paths-smooth/#radius"
  },"305": {
    "doc": "Smooth",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#moving-average",
    "relUrl": "/doc-paths/paths-smooth/#moving-average"
  },"306": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/",
    "relUrl": "/doc-paths/paths-smooth/"
  },"307": {
    "doc": "Clusters",
    "title": "Clusters",
    "content": "Arithmetic vtx/edge clusters generation &amp; operations . Easily generate relational structures from points . This section contains simple cluster generators and utilities. Make sure to check out Working with Clusters first. It is tightly related to and Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#clusters",
    "relUrl": "/doc-clusters/#clusters"
  },"308": {
    "doc": "Clusters",
    "title": "Clusters Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#clusters-nodes",
    "relUrl": "/doc-clusters/#clusters-nodes"
  },"309": {
    "doc": "Clusters",
    "title": "Connect Points",
    "content": "Creates connections between points using various probes. ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#connect-points",
    "relUrl": "/doc-clusters/#connect-points"
  },"310": {
    "doc": "Clusters",
    "title": "Graphs",
    "content": "Delaunay 2D / 3D, Voronoi 2D / 3D . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#graphs",
    "relUrl": "/doc-clusters/#graphs"
  },"311": {
    "doc": "Clusters",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable cluster clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#mesh-to-clusters",
    "relUrl": "/doc-clusters/#mesh-to-clusters"
  },"312": {
    "doc": "Clusters",
    "title": "Prune edges by Length",
    "content": "Remove edges from a cluster using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#prune-edges-by-length",
    "relUrl": "/doc-clusters/#prune-edges-by-length"
  },"313": {
    "doc": "Clusters",
    "title": "Properties : Edge",
    "content": "Compute edge extra data from its vertices . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#properties--edge",
    "relUrl": "/doc-clusters/#properties--edge"
  },"314": {
    "doc": "Clusters",
    "title": "Properties : Vtx",
    "content": "Compute vtx extra data . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#properties--vtx",
    "relUrl": "/doc-clusters/#properties--vtx"
  },"315": {
    "doc": "Clusters",
    "title": "Refine",
    "content": "Algorithmic edge refinement . ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#refine",
    "relUrl": "/doc-clusters/#refine"
  },"316": {
    "doc": "Clusters",
    "title": "Flag Nodes",
    "content": "Find conditional-based states to nodes within a graph . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#flag-nodes",
    "relUrl": "/doc-clusters/#flag-nodes"
  },"317": {
    "doc": "Clusters",
    "title": "Break to Paths",
    "content": "Breaks clusters edge chains into individual paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#break-to-paths",
    "relUrl": "/doc-clusters/#break-to-paths"
  },"318": {
    "doc": "Clusters",
    "title": "Copy Cluster to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#copy-cluster-to-points",
    "relUrl": "/doc-clusters/#copy-cluster-to-points"
  },"319": {
    "doc": "Clusters",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#fuse-clusters",
    "relUrl": "/doc-clusters/#fuse-clusters"
  },"320": {
    "doc": "Clusters",
    "title": "Pick Closest Clusters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#pick-closest-clusters",
    "relUrl": "/doc-clusters/#pick-closest-clusters"
  },"321": {
    "doc": "Clusters",
    "title": "Relax",
    "content": "Relax points positions of a graph. ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#relax",
    "relUrl": "/doc-clusters/#relax"
  },"322": {
    "doc": "Clusters",
    "title": "Hulls",
    "content": "Convex hull algorithms . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#hulls",
    "relUrl": "/doc-clusters/#hulls"
  },"323": {
    "doc": "Clusters",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#partition-vertices",
    "relUrl": "/doc-clusters/#partition-vertices"
  },"324": {
    "doc": "Clusters",
    "title": "Make Unique",
    "content": "Forward clusters with a new pair of unique tags. Like a copy, only much faster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#make-unique",
    "relUrl": "/doc-clusters/#make-unique"
  },"325": {
    "doc": "Clusters",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#sanitize-clusters",
    "relUrl": "/doc-clusters/#sanitize-clusters"
  },"326": {
    "doc": "Clusters",
    "title": "Connect",
    "content": "Connects clusters together. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#connect",
    "relUrl": "/doc-clusters/#connect"
  },"327": {
    "doc": "Clusters",
    "title": "Packing Clusters",
    "content": "Two nodes to conveniently pack/unpack cluster data. ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#packing-clusters",
    "relUrl": "/doc-clusters/#packing-clusters"
  },"328": {
    "doc": "Clusters",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/#draw-edges",
    "relUrl": "/doc-clusters/#draw-edges"
  },"329": {
    "doc": "Clusters",
    "title": "Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/",
    "relUrl": "/doc-clusters/"
  },"330": {
    "doc": "‚à∑ General",
    "title": "‚à∑ General",
    "content": "Notes &amp; informations . This section is dedicated to broader &amp; shared documentation topics. Node specifics can be found on the dedicated node page. When working with specific nodes, make sure to check out the home of the category they belong to as it often contains important infos pertaining to their family of nodes as a whole! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#general",
    "relUrl": "/doc-general/#general"
  },"331": {
    "doc": "‚à∑ General",
    "title": "Basics",
    "content": "General concepts &amp; disambiguation . An overview of the concepts PCGEx uses, and assumption around the meaning of certain keywords. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#basics",
    "relUrl": "/doc-general/#basics"
  },"332": {
    "doc": "‚à∑ General",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#pcgex-nodes",
    "relUrl": "/doc-general/#pcgex-nodes"
  },"333": {
    "doc": "‚à∑ General",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#attribute-selectors",
    "relUrl": "/doc-general/#attribute-selectors"
  },"334": {
    "doc": "‚à∑ General",
    "title": "Working with Clusters",
    "content": "Vtx? Edges? . A summary of what ‚Äúgraph‚Äù means and entails in the context of PCGEx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#working-with-clusters",
    "relUrl": "/doc-general/#working-with-clusters"
  },"335": {
    "doc": "‚à∑ General",
    "title": "Comparisons",
    "content": "PCGEx‚Äô comparison overview . This page lists the comparison used by a bunch of different nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#comparisons",
    "relUrl": "/doc-general/#comparisons"
  },"336": {
    "doc": "‚à∑ General",
    "title": "Blending",
    "content": "PCGEx‚Äô blendings overview . This page lists the blending used by a bunch of different nodes. Some topics and their modules are more complex, and have a dedicated section: . | Pathfinding | Clusters | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#blending",
    "relUrl": "/doc-general/#blending"
  },"337": {
    "doc": "‚à∑ General",
    "title": "Modules &amp; Sub-processors",
    "content": "Modules and sub-processors are instanced classes used across a variety of nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#modules--sub-processors",
    "relUrl": "/doc-general/#modules--sub-processors"
  },"338": {
    "doc": "‚à∑ General",
    "title": "‚à∑ General",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/",
    "relUrl": "/doc-general/"
  },"339": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Heuristics",
    "content": "An inventory of the available heuristics modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . Heuristics are basically some under-the-hood maths used by ‚äö Search Algorithms to gauge whether one path is better than another. Different algorithms use heuristics differently, but their values is computed consistently. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#heuristics",
    "relUrl": "/doc-pathfinding/heuristics/#heuristics"
  },"340": {
    "doc": "üù∞ Heuristics",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#modules",
    "relUrl": "/doc-pathfinding/heuristics/#modules"
  },"341": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#heuristic-attribute",
    "relUrl": "/doc-pathfinding/heuristics/#heuristic-attribute"
  },"342": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#shortest-distance",
    "relUrl": "/doc-pathfinding/heuristics/#shortest-distance"
  },"343": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#inertia",
    "relUrl": "/doc-pathfinding/heuristics/#inertia"
  },"344": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#turning",
    "relUrl": "/doc-pathfinding/heuristics/#turning"
  },"345": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#steepness",
    "relUrl": "/doc-pathfinding/heuristics/#steepness"
  },"346": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#azimuth",
    "relUrl": "/doc-pathfinding/heuristics/#azimuth"
  },"347": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#least-nodes",
    "relUrl": "/doc-pathfinding/heuristics/#least-nodes"
  },"348": {
    "doc": "üù∞ Heuristics",
    "title": "üù∞ Heuristics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/",
    "relUrl": "/doc-pathfinding/heuristics/"
  },"349": {
    "doc": "Flag Nodes",
    "title": "Flag Nodes",
    "content": "PCGEx | Cluster : Flag Nodes Find conditional-based states to nodes within a graph . The Flag Nodes node identifies and marks complex, non-mutually exclusive states within a cluster by applying filters and conditions to bitmask attributes, allowing for fine-tuned control over node selection and flagging based on specific criteria. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs FlagsNode flags and their associated filters VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | Node Flag | Uber Filter | . Table of content . | Order of operation | Properties . | Individual Node Flag | Available Cluster Filters | . | . The Flag Nodes node helps you find &amp; mark complex, non-mutually exclusive states on each Vtx of a cluster. It takes any number of Node Flag and processes their associated filters &amp; conditions in order to update a bitmask attribute on individual points. It is primarily used to identify nodes within a graph that meet very specific set of criterias that are not mutually exclusive. Output attribute can then be filtered using üùñ Bitmask, and works with the Bitmasks toolset. Bitmasks &amp; bit fields can be obscure to work with if it‚Äôs not something you‚Äôre used to. Sadly the Wikipedia article on the topic isn‚Äôt super helpful, and digging into the specifics wouldn‚Äôt be very helpful. If you have a user-friendly resources I could add to the doc, please poke me. Bitmasks fields in PCGEx are using a int64, which loosely translate as storing 63 boolean values on a single attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#flag-nodes",
    "relUrl": "/doc-clusters/flag-nodes/#flag-nodes"
  },"350": {
    "doc": "Flag Nodes",
    "title": "Order of operation",
    "content": "Connected s are first sorted (ascending) using their individual Priority, and then processed in that order; using the result of the previous operation, if any. What this means is higher priorities have the ability to radically change the entire bitmask, should you chose to. It synergize very well with the Conditional Actions node that lets you match &amp; set attributes using filters; such as the üùñ Bitmask one. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#order-of-operation",
    "relUrl": "/doc-clusters/flag-nodes/#order-of-operation"
  },"351": {
    "doc": "Flag Nodes",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Flag Attributeint64 | This is the name of the attribute the final bitmask will be written to. | . | Initial Flag | This is the flag to start operating from.*Setting this value manually isn‚Äôt recommended, instead use a Bitmask and plug it into the override pin.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#properties",
    "relUrl": "/doc-clusters/flag-nodes/#properties"
  },"352": {
    "doc": "Flag Nodes",
    "title": "Individual Node Flag",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#individual-node-flag",
    "relUrl": "/doc-clusters/flag-nodes/#individual-node-flag"
  },"353": {
    "doc": "Flag Nodes",
    "title": "Node Flag",
    "content": "A single flag definition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#node-flag",
    "relUrl": "/doc-clusters/flag-nodes/#node-flag"
  },"354": {
    "doc": "Flag Nodes",
    "title": "Available Cluster Filters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#available-cluster-filters",
    "relUrl": "/doc-clusters/flag-nodes/#available-cluster-filters"
  },"355": {
    "doc": "Flag Nodes",
    "title": "üùñ Edge Direction",
    "content": "Check if adjacent node meet specific conditions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#edge-direction",
    "relUrl": "/doc-clusters/flag-nodes/#edge-direction"
  },"356": {
    "doc": "Flag Nodes",
    "title": "üùñ Neighbors Count",
    "content": "Check a node‚Äô neighbors count . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#neighbors-count",
    "relUrl": "/doc-clusters/flag-nodes/#neighbors-count"
  },"357": {
    "doc": "Flag Nodes",
    "title": "üùñ Adjacency",
    "content": "Check if adjacent node meet specific conditions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/#adjacency"
  },"358": {
    "doc": "Flag Nodes",
    "title": "Flag Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/",
    "relUrl": "/doc-clusters/flag-nodes/"
  },"359": {
    "doc": "Orient",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . The Orient node compute individual point transforms &amp; orientation based on its next &amp; previous neighbors. PathsPaths which points will be oriented PathsPaths with updated points orientation . Table of content . | Properties . | Orientation modules | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#orient",
    "relUrl": "/doc-paths/paths-orient/#orient"
  },"360": {
    "doc": "Orient",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | **Orientation** | This property lets you select which kind of orientation arithmetics you want to apply to the input paths.*See [Available Orientation Modules](#available-orienting-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#properties",
    "relUrl": "/doc-paths/paths-orient/#properties"
  },"361": {
    "doc": "Orient",
    "title": "Orientation modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#orientation-modules",
    "relUrl": "/doc-paths/paths-orient/#orientation-modules"
  },"362": {
    "doc": "Orient",
    "title": "‚ãã Look At",
    "content": "Look at next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#look-at",
    "relUrl": "/doc-paths/paths-orient/#look-at"
  },"363": {
    "doc": "Orient",
    "title": "‚ãã Weighted",
    "content": "Distance-weighted interpolation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#weighted",
    "relUrl": "/doc-paths/paths-orient/#weighted"
  },"364": {
    "doc": "Orient",
    "title": "‚ãã Average",
    "content": "Average between previous and next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#average",
    "relUrl": "/doc-paths/paths-orient/#average"
  },"365": {
    "doc": "Orient",
    "title": "Orient",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/",
    "relUrl": "/doc-paths/paths-orient/"
  },"366": {
    "doc": "Bitmasks",
    "title": "Bitmasks",
    "content": "TBD . TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/#bitmasks",
    "relUrl": "/doc-misc/bitmasks/#bitmasks"
  },"367": {
    "doc": "Bitmasks",
    "title": "Bitmasks Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/#bitmasks-nodes",
    "relUrl": "/doc-misc/bitmasks/#bitmasks-nodes"
  },"368": {
    "doc": "Bitmasks",
    "title": "Bitmask",
    "content": "A simple, single bitmask attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/#bitmask",
    "relUrl": "/doc-misc/bitmasks/#bitmask"
  },"369": {
    "doc": "Bitmasks",
    "title": "Bitmask Merge",
    "content": "A simple, single bitmask attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/#bitmask-merge",
    "relUrl": "/doc-misc/bitmasks/#bitmask-merge"
  },"370": {
    "doc": "Bitmasks",
    "title": "Bitmasks",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/",
    "relUrl": "/doc-misc/bitmasks/"
  },"371": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": "Delaunay 2D / 3D, Voronoi 2D / 3D . TBD . Classic graphs are very basic generators that can turn any random point cloud into a nicely interconnected structure. Delaunay &amp; Voronoi are two of the most popular algorithms to achieve that; as they offer the benefit of interesting &amp; useful properties. Note that the 3D version of those generators requires the points to NOT be coplanar for the maths to work ‚Äì you‚Äôll be prompted to use the 2D version otherwise. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#graphs",
    "relUrl": "/doc-clusters/graphs/#graphs"
  },"372": {
    "doc": "Graphs",
    "title": "Classic Graphs",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#classic-graphs",
    "relUrl": "/doc-clusters/graphs/#classic-graphs"
  },"373": {
    "doc": "Graphs",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#delaunay-3d",
    "relUrl": "/doc-clusters/graphs/#delaunay-3d"
  },"374": {
    "doc": "Graphs",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#voronoi-3d",
    "relUrl": "/doc-clusters/graphs/#voronoi-3d"
  },"375": {
    "doc": "Graphs",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#delaunay-2d",
    "relUrl": "/doc-clusters/graphs/#delaunay-2d"
  },"376": {
    "doc": "Graphs",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/#voronoi-2d",
    "relUrl": "/doc-clusters/graphs/#voronoi-2d"
  },"377": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/graphs/",
    "relUrl": "/doc-clusters/graphs/"
  },"378": {
    "doc": "Hulls",
    "title": "Hulls",
    "content": "Convex hull algorithms . TBD . Table of content . | Properties . | Hulls | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/#hulls",
    "relUrl": "/doc-clusters/hulls/#hulls"
  },"379": {
    "doc": "Hulls",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/#properties",
    "relUrl": "/doc-clusters/hulls/#properties"
  },"380": {
    "doc": "Hulls",
    "title": "Hulls",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/#hulls",
    "relUrl": "/doc-clusters/hulls/#hulls"
  },"381": {
    "doc": "Hulls",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/#convex-hull-3d",
    "relUrl": "/doc-clusters/hulls/#convex-hull-3d"
  },"382": {
    "doc": "Hulls",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/#convex-hull-2d",
    "relUrl": "/doc-clusters/hulls/#convex-hull-2d"
  },"383": {
    "doc": "Hulls",
    "title": "Hulls",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/hulls/",
    "relUrl": "/doc-clusters/hulls/"
  },"384": {
    "doc": "Asset Collection",
    "title": "Asset Collection",
    "content": "Glorified Data Tables . Asset Collection represent collections of things (meshes, actors) that can be used with the Asset Staging node. Table of content . | Creating new collections | Rebuilding staging data | Available Collections | . Asset Collections are basically lists of assets that you can then use inside PCG; that all share some basic properties. They exist in different flavors, for different purposes (i.e actors vs meshes), but their main appeal over Data Table or PCG Data Asset is caching and nesting. Cached bounds data . Each entry has some basic information cached, amongst which the bounds of the referenced asset. This is especially useful as it allows nodes to access an asset bounds‚Äô without having to load the asset in memory. It enables nodes like Asset Staging to do some interesting work on points before spawning anything in the world. Nested collections . Each entry can be another collection. This is where the Asset Collection shines, because a collection can be weighted like any other entry. PCGEx will recognize sub-collection and will keep on digging in these until an asset is found. This is particulary handy when doing random weighted selection, where you want only a subset of items to be associated to a particular weight range, and then have a new random weighted pick from inside that range. Collections can be nested without limits, offering highly granular control over weighted &amp; random distribution. Re-usability &amp; templating . Since they‚Äôre regular DataAssets, Asset Collections can easily be extended, re-used, shared amongst different settings &amp; PCG setups. Convertible . In order to support any workflow, Asset Collection to Set makes it easy to convert any PCGEx‚Äô Asset Collection to a good ol‚Äô attribute set, on the fly. Note: Collections currently don‚Äôt properly check for circular dependencies, so be careful or you‚Äôre in for a ride. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#asset-collection",
    "relUrl": "/doc-assets/asset-collections/#asset-collection"
  },"385": {
    "doc": "Asset Collection",
    "title": "Creating new collections",
    "content": "You can create Asset Collection just like any other DataAsset: . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#creating-new-collections",
    "relUrl": "/doc-assets/asset-collections/#creating-new-collections"
  },"386": {
    "doc": "Asset Collection",
    "title": "Rebuilding staging data",
    "content": "‚ÄúStaging data‚Äù is basically per-item cached information. It‚Äôs pretty lightweight and consist mostly of internal stuffs; and more importantly, asset bounds. Note: Staging data is refreshed &amp; stored whenever an update is made to the collection, but won‚Äôt refresh when the referenced assets are updated. As such you will need to trigger a manual refresh from to time. You can do so using the three buttons at the top of any open Asset Collection: . | Button | Effect | . | Rebuild Staging | Rebuilds the currently open Asset Collection | . | Rebuild Staging (Recursive) | Rebuild the currently open Asset Collection, as well as any sub-collections; recursively. | . | Rebuild Staging (Project) | Rebuild ALL the project‚Äô Asset Collection.Use carefully as assets needs to be loaded temporarily in memory in order to compute their bounds. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#rebuilding-staging-data",
    "relUrl": "/doc-assets/asset-collections/#rebuilding-staging-data"
  },"387": {
    "doc": "Asset Collection",
    "title": "Available Collections",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#available-collections",
    "relUrl": "/doc-assets/asset-collections/#available-collections"
  },"388": {
    "doc": "Asset Collection",
    "title": "üù± Mesh Collection",
    "content": "Mesh Collection DataAsset . The Mesh Collection DataAsset is a list of Meshes with ISM/HISM Descriptors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#mesh-collection",
    "relUrl": "/doc-assets/asset-collections/#mesh-collection"
  },"389": {
    "doc": "Asset Collection",
    "title": "üù± Actor Collection",
    "content": "Actor Collection DataAsset . The Actor Collection DataAsset is a list of Actors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/#actor-collection",
    "relUrl": "/doc-assets/asset-collections/#actor-collection"
  },"390": {
    "doc": "Asset Collection",
    "title": "Asset Collection",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/",
    "relUrl": "/doc-assets/asset-collections/"
  },"391": {
    "doc": "Relax",
    "title": "Relax",
    "content": "PCGEx | Cluster : Relax Relax points positions of a graph. The Relax node smooths a graph‚Äôs point positions by applying iterative relaxation algorithms, allowing control over the number of iterations, type of relaxation, and influence settings for fine-tuning results. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | | . Table of content . | Properties . | Relaxing modules | . | . The relax point node smoothes cluster‚Äô topology by iteratively applying a given relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#relax",
    "relUrl": "/doc-clusters/edges-relax/#relax"
  },"392": {
    "doc": "Relax",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Iterations | The number of time to additively apply the relaxing algorithm.Each iteration uses the previous‚Äô iteration results. | . | Relaxing | This property lets you select which kind of relaxing you want to apply to the input clusters.**Specifics of the instanced module will be available under its inner Settings section.***See .* | . | **Influence**| | ¬† | . | Influence | Interpolate between the original position and the final, relaxed position.- 1.0 means fully relaxed- 0.0 means the original position is preserved. | . | Local Influence | If enabled, will use a per-point attribute value as *Influence*. | . | Progressive Influence | Switchs betweeen factoring the influence after each *per-iteration* (progressive) or once all iterations have been processed.*This yields vastly different results, so don‚Äôt hesite to try it.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#properties",
    "relUrl": "/doc-clusters/edges-relax/#properties"
  },"393": {
    "doc": "Relax",
    "title": "Relaxing modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#relaxing-modules",
    "relUrl": "/doc-clusters/edges-relax/#relaxing-modules"
  },"394": {
    "doc": "Relax",
    "title": "‚òç Laplacian",
    "content": "Laplacian / Poisson relaxation . The Laplacian relaxation ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#laplacian",
    "relUrl": "/doc-clusters/edges-relax/#laplacian"
  },"395": {
    "doc": "Relax",
    "title": "‚òç Force Directed",
    "content": "Force-directed relaxation . The Force-directed relaxation ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#force-directed",
    "relUrl": "/doc-clusters/edges-relax/#force-directed"
  },"396": {
    "doc": "Relax",
    "title": "Cluster Output Settings",
    "content": "See Working with Clusters. | Property | Description | . | Edge Position | If enabled, edge point‚Äô position will be the result of that value used as a lerp between its start and end Vtx point. | . | : Pruning : | ¬† | . | Min Vtx Count | If enabled, only ouputs clusters that have more ( &gt; ) Vtx than the specified number. | . | Max Vtx Count | If enabled, only ouputs clusters that have less ( &lt; ) Vtx than the specified number. | . | Min Edge Count | If enabled, only ouputs clusters that have more ( &gt; ) Edge than the specified number. | . | Max Edge Count | If enabled, only ouputs clusters that have less ( &lt; ) Edge than the specified number. | . | Refresh Edge Seed | If enabled, Edge points gets a fresh seed. | . | Build and Cache Cluster | If enabled, pre-build and cache cluster along with the point data.This has a slight memory cost associated to it, but can offer tremendous performance improvement.If disabled, cluster processors that comes down the line have to rebuild clusters from point data, which is very costly as they are also tested for errors and possible disconnections in the process. | . | Expand Clusters | If enabled, also build &amp; cache another layer of cache data.This can have a significant memory cost, as well as a minimal performance overhead, but can greatly improve certain specific operations down the line. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/#cluster-output-settings",
    "relUrl": "/doc-clusters/edges-relax/#cluster-output-settings"
  },"397": {
    "doc": "Relax",
    "title": "Relax",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/",
    "relUrl": "/doc-clusters/edges-relax/"
  },"398": {
    "doc": "Conditional Actions",
    "title": "Conditional Actions",
    "content": "Unified approach to Match &amp; Set. The Conditional Actions node is executing ‚Äúactions‚Äù based on filters. InPoints to be matchmaked ActionsActions to be processed OutIn after actions. Table of content . | Properties . | Available Actions | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/#conditional-actions",
    "relUrl": "/doc-misc/conditional-actions/#conditional-actions"
  },"399": {
    "doc": "Conditional Actions",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/#properties",
    "relUrl": "/doc-misc/conditional-actions/#properties"
  },"400": {
    "doc": "Conditional Actions",
    "title": "Available Actions",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/#available-actions",
    "relUrl": "/doc-misc/conditional-actions/#available-actions"
  },"401": {
    "doc": "Conditional Actions",
    "title": "üùê Write Result",
    "content": "The Write Results action‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/#write-result",
    "relUrl": "/doc-misc/conditional-actions/#write-result"
  },"402": {
    "doc": "Conditional Actions",
    "title": "üùê Write Attributes",
    "content": "The Write Attribute action‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/#write-attributes",
    "relUrl": "/doc-misc/conditional-actions/#write-attributes"
  },"403": {
    "doc": "Conditional Actions",
    "title": "Conditional Actions",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/conditional-actions/",
    "relUrl": "/doc-misc/conditional-actions/"
  },"404": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . The Subdivide Path nodes create new point between existing ones on a path. Define closure behavior, choose a subdivide method (Distance or Count), and specify an amount. Opt for blending options to refine subpoints further. PathsPaths which segments will be subdivided PathsSubdivided paths . Table of content . | Properties . | Subdivide Method | . | Modules . | Blending | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#subdivide",
    "relUrl": "/doc-paths/paths-subdivide/#subdivide"
  },"405": {
    "doc": "Subdivide",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Subdivide Method | Method to be used to define how many points are going to be inserted between existing ones.See [Subdivide Method](#subdivide-method) | . | Distance *or* Count | Based on the method, specifies how many points will be created. | . | **Blending** | This property lets you select which kind of blending you want to apply to the input paths.*See [Available Blending Modules](#available-blending-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#properties",
    "relUrl": "/doc-paths/paths-subdivide/#properties"
  },"406": {
    "doc": "Subdivide",
    "title": "Subdivide Method",
    "content": "| Method | Description | . | **Distance** | will create a new point every X units inside existing segments, as specified in the Distance property.*Smaller values will create more points, larger values will create less points.* | . | **Count** | will create X new points for each existing segments, as specified in the Count property. | . Distance will create more uniform looking subdivisions, while Count is more predictable. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#subdivide-method",
    "relUrl": "/doc-paths/paths-subdivide/#subdivide-method"
  },"407": {
    "doc": "Subdivide",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#modules",
    "relUrl": "/doc-paths/paths-subdivide/#modules"
  },"408": {
    "doc": "Subdivide",
    "title": "Blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#blending",
    "relUrl": "/doc-paths/paths-subdivide/#blending"
  },"409": {
    "doc": "Subdivide",
    "title": "‚ã∞ Interpolate",
    "content": "Interpolates values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#interpolate",
    "relUrl": "/doc-paths/paths-subdivide/#interpolate"
  },"410": {
    "doc": "Subdivide",
    "title": "‚ã∞ Inherit First",
    "content": "Copy the first point‚Äô values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#inherit-first",
    "relUrl": "/doc-paths/paths-subdivide/#inherit-first"
  },"411": {
    "doc": "Subdivide",
    "title": "‚ã∞ Inherit Last",
    "content": "Copy the last point‚Äô values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/#inherit-last",
    "relUrl": "/doc-paths/paths-subdivide/#inherit-last"
  },"412": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide/",
    "relUrl": "/doc-paths/paths-subdivide/"
  },"413": {
    "doc": "Packing Clusters",
    "title": "Packing Clusters",
    "content": "Two nodes to conveniently pack/unpack cluster data. TBD . Table of content . | Packing &amp; Unpacking Clusters | . TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/#packing-clusters",
    "relUrl": "/doc-clusters/packing-clusters/#packing-clusters"
  },"414": {
    "doc": "Packing Clusters",
    "title": "Packing &amp; Unpacking Clusters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/#packing--unpacking-clusters",
    "relUrl": "/doc-clusters/packing-clusters/#packing--unpacking-clusters"
  },"415": {
    "doc": "Packing Clusters",
    "title": "Pack Clusters",
    "content": "Pack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/#pack-clusters",
    "relUrl": "/doc-clusters/packing-clusters/#pack-clusters"
  },"416": {
    "doc": "Packing Clusters",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/#unpack-clusters",
    "relUrl": "/doc-clusters/packing-clusters/#unpack-clusters"
  },"417": {
    "doc": "Packing Clusters",
    "title": "Packing Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/packing-clusters/",
    "relUrl": "/doc-clusters/packing-clusters/"
  },"418": {
    "doc": "Properties : Vtx",
    "title": "Properties : Vtx",
    "content": "PCGEx | Cluster : Vtx Properties Compute vtx extra data . The Vtx Properties node allows you to compute and write additional data for vertices within a cluster. It utilizes external nodes to define individual property outputs. You can input multiple property nodes, ensuring unique names for each to avoid overwriting issues. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs PropertiesIndividual 'Vtx Property' nodes VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | . Table of content . | Property Nodes | Properties | . The Vtx Properties node lets you extract &amp; write cluster-related properties to individual Vtx points. Individual output definitions/settings use external nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#properties--vtx",
    "relUrl": "/doc-clusters/properties-vtx/#properties--vtx"
  },"419": {
    "doc": "Properties : Vtx",
    "title": "Property Nodes",
    "content": "Properties input are at the core of the Vtx Properties node. You can connect as many properties node as you‚Äôd like to the Properties input. Make sure not to use duplicate output names otherwise they will overwrite each other in no guaranteed order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#property-nodes",
    "relUrl": "/doc-clusters/properties-vtx/#property-nodes"
  },"420": {
    "doc": "Properties : Vtx",
    "title": "üùä Special Edges",
    "content": "Gather infos from special-case edges . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#special-edges",
    "relUrl": "/doc-clusters/properties-vtx/#special-edges"
  },"421": {
    "doc": "Properties : Vtx",
    "title": "üùä Special Neighbors",
    "content": "Gather infos from special-case neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#special-neighbors",
    "relUrl": "/doc-clusters/properties-vtx/#special-neighbors"
  },"422": {
    "doc": "Properties : Vtx",
    "title": "üùä Edge Match",
    "content": "Find the neighbors that best match a given direction . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#edge-match",
    "relUrl": "/doc-clusters/properties-vtx/#edge-match"
  },"423": {
    "doc": "Properties : Vtx",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Edge Count | If enabled, output the number of edges this vtx is connected to. | . | Normal | If enabled, output the averaged normal of the vtx based on all connected edges.*This output is hardly usable for highly 3-dimensional nodes.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/#properties",
    "relUrl": "/doc-clusters/properties-vtx/#properties"
  },"424": {
    "doc": "Properties : Vtx",
    "title": "Properties : Vtx",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/",
    "relUrl": "/doc-clusters/properties-vtx/"
  },"425": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. InPoints to break into partition Partition RulesPartition rules to be processed OutPartitioned points. If split output is enabled, outputs one point data per partition. Table of content . | Properties . | Partition Rule | Why upscale? | How partition Index works . | Raw partition value | Index partition | . | Key Sum | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#partition-by-values",
    "relUrl": "/doc-misc/partition-by-values/#partition-by-values"
  },"426": {
    "doc": "Partition by Values",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Split Output | Whether to output individual partitions or simply write the unique partition key to an attribute. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | Key Sum | Outputs the sum of all partition keys to a int64 attribute.**This value is unlikely to be unique, but can come in handy for filtering purposes.**See [Key Sum](#key-sum) | . Partition Rule . | Property | Description | . | Enabled | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Selector | An attribute or property that will be used for partitioning. See Attribute Selectors. | . | Filter Size | The size of the partition in relation the attribute or property uses.*Higher values means fewer larger partitions; smaller values means more smaller partitions.* | . | **Input pre-processing**| | ¬† | . | Upscale | A scale factor to apply to the selected attribute value before partitioning.*This is especially useful when working with smaller range of values like Density.*See [Why upscale?](#why-upscale). | . | Offset | An offset value added to the selected attribute value before partitioning.**Offset is added to the Upscaled value.***This allow to shift separation ‚Äòlines‚Äô when using spatial values for partitioning.* | . | **Partition Key Attribute**| | ¬† | . | **Key** Attribute Name | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Use Partition Index as Key | Whether to use the partition Index as a key *(starting at 0, up to N partitions)* or the default output *(actual under-the-hood value used to distinguish unique buckets)*.See [How partition Index works](#how-partition-index-works). | . | **Partition Tagging***Only if Split Output is enabled*| | ¬† | . | Tag Prefix Name | Tag the data with the partition key, using the format Prefix::PartitionKey or Prefix::PartitionIndex | . | Tag Use Partition Index as Key | Whether to use the partition Index as a key.See [How partition Index works](#how-partition-index-works). | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don‚Äôt specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#properties",
    "relUrl": "/doc-misc/partition-by-values/#properties"
  },"427": {
    "doc": "Partition by Values",
    "title": "Why upscale?",
    "content": "Under the hood, the Partition by Values broadcast and transform the reference values to a int64 used as a unique ID for individual partition. Because of that, any value in the -1..1 range (such as Density, Steepness etc) will be rounded to the nearest integer. Upscaling fixes this problem. For example, without upscaling, [0.1, 0.25, 0.01] will be partitioned as [0, 0, 0]; so a unique 0-id‚Äôd partition. On the other end, the same set [0.1, 0.25, 0.01] upscaled by a factor of 100 will be partitioned as [10, 25, 1]; so 3 separated partitions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#why-upscale",
    "relUrl": "/doc-misc/partition-by-values/#why-upscale"
  },"428": {
    "doc": "Partition by Values",
    "title": "How partition Index works",
    "content": "The for each partition, the corresponding attribute value is basically upscaled, offsetted and rounded down. This operation is repeated for each partition rule, and points are then distributed into buckets which all have the same partition keys. You can either output this ‚Äúkey‚Äù value as-is, or use the partition index. That index correspond to the partition order when all keys are sorted by ascending order. Using a single partition rule based on $Position.X, using a filter size of 10. On the left is the detail panel, on the right is a screencap of the value debugger for that rule . Raw partition value . Index partition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#how-partition-index-works",
    "relUrl": "/doc-misc/partition-by-values/#how-partition-index-works"
  },"429": {
    "doc": "Partition by Values",
    "title": "Key Sum",
    "content": "The Key Sum attribute value will be, well, the sum of all unique partitions keys. It‚Äôs useful in very specific scenarios, such as when partitioning based on booleans values, in order to filter partitions. Say you have three separate boolean (or 0-1) attributes, with a partition rule set up for each of these attributes; with Use Partition Index as Key enabled. Each partition will either have a 0 or 1 unique key, with a maximum of 9 partitions created (0 0 0, 1 0 0, 0 1 0 etc.). You will only have 4 different Key Sum: 0, 1, 2 and 3, which you can use as sort-of weak flag system: . | 0 0 0 = 0 | 1 0 0 = 1 | 0 1 0 = 1 | 0 0 1 = 1 | 1 1 0 = 2 | 0 1 1 = 2 | 1 0 1 = 2 | 1 1 1 = 3 | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#key-sum",
    "relUrl": "/doc-misc/partition-by-values/#key-sum"
  },"430": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/",
    "relUrl": "/doc-misc/partition-by-values/"
  },"431": {
    "doc": "‚äö Search",
    "title": "‚äö Search",
    "content": "An inventory of the available search modules. Search algorithms are at the core of PCGEx Pathfinding nodes &amp; capabilities. They are responsible for traversing individual clusters in search for the ideal path between the seed and goal points. At the time of writing, there are only two algorithms implemented, A Start and Dijkstra. The next implementation candidates will be DFS and BFS as they yield slightly different results, althought less friendly to modifiers. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#search",
    "relUrl": "/doc-pathfinding/search/#search"
  },"432": {
    "doc": "‚äö Search",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#modules",
    "relUrl": "/doc-pathfinding/search/#modules"
  },"433": {
    "doc": "‚äö Search",
    "title": "Dijkstra",
    "content": "Dijkstra‚Äôs Algorithm . The Dijkstra‚Äôs Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#dijkstra",
    "relUrl": "/doc-pathfinding/search/#dijkstra"
  },"434": {
    "doc": "‚äö Search",
    "title": "A* Star",
    "content": "A* Algorithm . The A* Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#a-star",
    "relUrl": "/doc-pathfinding/search/#a-star"
  },"435": {
    "doc": "‚äö Search",
    "title": "‚äö Search",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/",
    "relUrl": "/doc-pathfinding/search/"
  },"436": {
    "doc": "üùì Goal Pickers",
    "title": "üùì Goal Pickers",
    "content": "An inventory of the available goal pickers modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#goal-pickers",
    "relUrl": "/doc-pathfinding/goal-pickers/#goal-pickers"
  },"437": {
    "doc": "üùì Goal Pickers",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#modules",
    "relUrl": "/doc-pathfinding/goal-pickers/#modules"
  },"438": {
    "doc": "üùì Goal Pickers",
    "title": "üùì Default",
    "content": "Match seeds to goals at the same index. The Default picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#default",
    "relUrl": "/doc-pathfinding/goal-pickers/#default"
  },"439": {
    "doc": "üùì Goal Pickers",
    "title": "üùì Random",
    "content": "Match seeds to goals at a random index. The Random picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#random",
    "relUrl": "/doc-pathfinding/goal-pickers/#random"
  },"440": {
    "doc": "üùì Goal Pickers",
    "title": "üùì Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. The Goal from Attribute picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#goal-from-attribute",
    "relUrl": "/doc-pathfinding/goal-pickers/#goal-from-attribute"
  },"441": {
    "doc": "üùì Goal Pickers",
    "title": "üùì Goal Pickers",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/",
    "relUrl": "/doc-pathfinding/goal-pickers/"
  },"442": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. InPoints to sort Sorting RulesSorting rules to be processed. They will be sorted by their individual priorities. OutSorted points . Table of content . | Properties . | Rules ordering | Sorting Rule | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#sort-points",
    "relUrl": "/doc-misc/sort-points/#sort-points"
  },"443": {
    "doc": "Sort Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Sort Direction | The output sorting direction ‚Äì Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . Rules ordering . Rules are compared in the same order as in the property panel, starting at index 0. The sorting goes through each rules until it finds a valid comparison (non-equal values) ‚Äì for each point. Sorting Rule . | Property | Description | . | Selector | An attribute or property to compare. See Attribute Selectors. | . | Tolerance | Equality tolerance used when comparing two values. | . | Invert Rule | Switches from the default &lt; comparison to &gt;. | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don‚Äôt specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#properties",
    "relUrl": "/doc-misc/sort-points/#properties"
  },"444": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/",
    "relUrl": "/doc-misc/sort-points/"
  },"445": {
    "doc": "PCG Extended Toolkit",
    "title": "PCGEx PCGExtendedToolkit",
    "content": "The PCG Extended Toolkit is a free (libre) plugin that extends Unreal Engine‚Äô Procedural Content Generation pipeline, with a focus on building clusters &amp; pathfinding. ‚ÄÅ Installation Guides . This documentation is still heavily work-in-progress, and matches non-release branch. Sorry &gt;.&lt; However, every property already has helpful tooltips in editor ;) . Make sure to check the Example Project on github . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pcgex-pcgextendedtoolkit",
    "relUrl": "/#pcgex-pcgextendedtoolkit"
  },"446": {
    "doc": "PCG Extended Toolkit",
    "title": "All Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#all-nodes",
    "relUrl": "/#all-nodes"
  },"447": {
    "doc": "PCG Extended Toolkit",
    "title": "Clusters Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#clusters-nodes",
    "relUrl": "/#clusters-nodes"
  },"448": {
    "doc": "PCG Extended Toolkit",
    "title": "Connect Points",
    "content": "Creates connections between points using various probes. ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#connect-points",
    "relUrl": "/#connect-points"
  },"449": {
    "doc": "PCG Extended Toolkit",
    "title": "Graphs",
    "content": "Delaunay 2D / 3D, Voronoi 2D / 3D . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#graphs",
    "relUrl": "/#graphs"
  },"450": {
    "doc": "PCG Extended Toolkit",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable cluster clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#mesh-to-clusters",
    "relUrl": "/#mesh-to-clusters"
  },"451": {
    "doc": "PCG Extended Toolkit",
    "title": "Flag Nodes",
    "content": "Find conditional-based states to nodes within a graph . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#flag-nodes",
    "relUrl": "/#flag-nodes"
  },"452": {
    "doc": "PCG Extended Toolkit",
    "title": "Copy Cluster to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#copy-cluster-to-points",
    "relUrl": "/#copy-cluster-to-points"
  },"453": {
    "doc": "PCG Extended Toolkit",
    "title": "Break to Paths",
    "content": "Breaks clusters edge chains into individual paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#break-to-paths",
    "relUrl": "/#break-to-paths"
  },"454": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-clusters",
    "relUrl": "/#fuse-clusters"
  },"455": {
    "doc": "PCG Extended Toolkit",
    "title": "Hulls",
    "content": "Convex hull algorithms . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#hulls",
    "relUrl": "/#hulls"
  },"456": {
    "doc": "PCG Extended Toolkit",
    "title": "Pick Closest Clusters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pick-closest-clusters",
    "relUrl": "/#pick-closest-clusters"
  },"457": {
    "doc": "PCG Extended Toolkit",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#partition-vertices",
    "relUrl": "/#partition-vertices"
  },"458": {
    "doc": "PCG Extended Toolkit",
    "title": "Make Unique",
    "content": "Forward clusters with a new pair of unique tags. Like a copy, only much faster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#make-unique",
    "relUrl": "/#make-unique"
  },"459": {
    "doc": "PCG Extended Toolkit",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sanitize-clusters",
    "relUrl": "/#sanitize-clusters"
  },"460": {
    "doc": "PCG Extended Toolkit",
    "title": "Packing Clusters",
    "content": "Two nodes to conveniently pack/unpack cluster data. ¬∑ ¬∑ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#packing-clusters",
    "relUrl": "/#packing-clusters"
  },"461": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges-nodes",
    "relUrl": "/#edges-nodes"
  },"462": {
    "doc": "PCG Extended Toolkit",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pathfinding-nodes",
    "relUrl": "/#pathfinding-nodes"
  },"463": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges-pathfinding",
    "relUrl": "/#edges-pathfinding"
  },"464": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-edges-pathfinding",
    "relUrl": "/#plot-edges-pathfinding"
  },"465": {
    "doc": "PCG Extended Toolkit",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#navmesh-pathfinding",
    "relUrl": "/#navmesh-pathfinding"
  },"466": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Navmesh",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-navmesh",
    "relUrl": "/#plot-navmesh"
  },"467": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths-nodes",
    "relUrl": "/#paths-nodes"
  },"468": {
    "doc": "PCG Extended Toolkit",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#smooth",
    "relUrl": "/#smooth"
  },"469": {
    "doc": "PCG Extended Toolkit",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#orient",
    "relUrl": "/#orient"
  },"470": {
    "doc": "PCG Extended Toolkit",
    "title": "Path Spline Mesh",
    "content": "Create SplineMesh components from paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#path-spline-mesh",
    "relUrl": "/#path-spline-mesh"
  },"471": {
    "doc": "PCG Extended Toolkit",
    "title": "Solidify Path",
    "content": "Solidify paths into ‚Äúedges‚Äù . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#solidify-path",
    "relUrl": "/#solidify-path"
  },"472": {
    "doc": "PCG Extended Toolkit",
    "title": "Path √ó Path Crossings",
    "content": "Find crossings within &amp; against paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#path--path-crossings",
    "relUrl": "/#path--path-crossings"
  },"473": {
    "doc": "PCG Extended Toolkit",
    "title": "Path √ó Bounds Intersections",
    "content": "Find intersections with points bounds. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#path--bounds-intersections",
    "relUrl": "/#path--bounds-intersections"
  },"474": {
    "doc": "PCG Extended Toolkit",
    "title": "Blend",
    "content": "Blend individual points between from paths‚Äô start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#blend",
    "relUrl": "/#blend"
  },"475": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-collinear",
    "relUrl": "/#fuse-collinear"
  },"476": {
    "doc": "PCG Extended Toolkit",
    "title": "Offset",
    "content": "Offset path along a direction . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#offset",
    "relUrl": "/#offset"
  },"477": {
    "doc": "PCG Extended Toolkit",
    "title": "Attribute Rolling",
    "content": "Does a rolling operation over properties &amp; attributes along a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#attribute-rolling",
    "relUrl": "/#attribute-rolling"
  },"478": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-collinear-1",
    "relUrl": "/#fuse-collinear-1"
  },"479": {
    "doc": "PCG Extended Toolkit",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#subdivide",
    "relUrl": "/#subdivide"
  },"480": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Paths Properties",
    "content": "Compute extra path informations . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-paths-properties",
    "relUrl": "/#write-paths-properties"
  },"481": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Tangents",
    "content": "Subtitle . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-tangents",
    "relUrl": "/#write-tangents"
  },"482": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths to Clusters",
    "content": "Convert paths to clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths-to-clusters",
    "relUrl": "/#paths-to-clusters"
  },"483": {
    "doc": "PCG Extended Toolkit",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#misc-nodes",
    "relUrl": "/#misc-nodes"
  },"484": {
    "doc": "PCG Extended Toolkit",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sort-points",
    "relUrl": "/#sort-points"
  },"485": {
    "doc": "PCG Extended Toolkit",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#partition-by-values",
    "relUrl": "/#partition-by-values"
  },"486": {
    "doc": "PCG Extended Toolkit",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#attribute-remap",
    "relUrl": "/#attribute-remap"
  },"487": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-points",
    "relUrl": "/#fuse-points"
  },"488": {
    "doc": "PCG Extended Toolkit",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#points-to-bounds",
    "relUrl": "/#points-to-bounds"
  },"489": {
    "doc": "PCG Extended Toolkit",
    "title": "Reverse Points Order",
    "content": "Reverse current points order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#reverse-points-order",
    "relUrl": "/#reverse-points-order"
  },"490": {
    "doc": "PCG Extended Toolkit",
    "title": "Cherry Pick Points",
    "content": "Cherry pick points using their indices. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#cherry-pick-points",
    "relUrl": "/#cherry-pick-points"
  },"491": {
    "doc": "PCG Extended Toolkit",
    "title": "Conditional Actions",
    "content": "Unified approach to Match &amp; Set. ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#conditional-actions",
    "relUrl": "/#conditional-actions"
  },"492": {
    "doc": "PCG Extended Toolkit",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#uber-filter",
    "relUrl": "/#uber-filter"
  },"493": {
    "doc": "PCG Extended Toolkit",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#d-lloyd-relaxation",
    "relUrl": "/#d-lloyd-relaxation"
  },"494": {
    "doc": "PCG Extended Toolkit",
    "title": "Meta Filter",
    "content": "Filter point collections based on tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#meta-filter",
    "relUrl": "/#meta-filter"
  },"495": {
    "doc": "PCG Extended Toolkit",
    "title": "Merge Points by Tags",
    "content": "Merge points based on shared tags . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#merge-points-by-tags",
    "relUrl": "/#merge-points-by-tags"
  },"496": {
    "doc": "PCG Extended Toolkit",
    "title": "Meta Cleanup",
    "content": "Keep/Remove tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#meta-cleanup",
    "relUrl": "/#meta-cleanup"
  },"497": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-index",
    "relUrl": "/#write-index"
  },"498": {
    "doc": "PCG Extended Toolkit",
    "title": "3D Lloyd Relaxation",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#d-lloyd-relaxation-1",
    "relUrl": "/#d-lloyd-relaxation-1"
  },"499": {
    "doc": "PCG Extended Toolkit",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#refresh-seed",
    "relUrl": "/#refresh-seed"
  },"500": {
    "doc": "PCG Extended Toolkit",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#discard-points-by-count",
    "relUrl": "/#discard-points-by-count"
  },"501": {
    "doc": "PCG Extended Toolkit",
    "title": "Discard Points by Overlap",
    "content": "Kindda like self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#discard-points-by-overlap",
    "relUrl": "/#discard-points-by-overlap"
  },"502": {
    "doc": "PCG Extended Toolkit",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sampling-nodes",
    "relUrl": "/#sampling-nodes"
  },"503": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-surface",
    "relUrl": "/#sample-nearest-surface"
  },"504": {
    "doc": "PCG Extended Toolkit",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#guided-trace",
    "relUrl": "/#guided-trace"
  },"505": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-polyline",
    "relUrl": "/#sample-nearest-polyline"
  },"506": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-points",
    "relUrl": "/#sample-nearest-points"
  },"507": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Overlap Stats",
    "content": "Compute overlap statistics between point collections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-overlap-stats",
    "relUrl": "/#sample-overlap-stats"
  },"508": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Bounds",
    "content": "Sample within bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-bounds",
    "relUrl": "/#sample-nearest-bounds"
  },"509": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-neighbors",
    "relUrl": "/#sample-neighbors"
  },"510": {
    "doc": "PCG Extended Toolkit",
    "title": "PCG Extended Toolkit",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/",
    "relUrl": "/"
  },"511": {
    "doc": "Misc",
    "title": "Misc",
    "content": "All-around, generic utility nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#misc",
    "relUrl": "/doc-misc/#misc"
  },"512": {
    "doc": "Misc",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#misc-nodes",
    "relUrl": "/doc-misc/#misc-nodes"
  },"513": {
    "doc": "Misc",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#sort-points",
    "relUrl": "/doc-misc/#sort-points"
  },"514": {
    "doc": "Misc",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#partition-by-values",
    "relUrl": "/doc-misc/#partition-by-values"
  },"515": {
    "doc": "Misc",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#attribute-remap",
    "relUrl": "/doc-misc/#attribute-remap"
  },"516": {
    "doc": "Misc",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#fuse-points",
    "relUrl": "/doc-misc/#fuse-points"
  },"517": {
    "doc": "Misc",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#points-to-bounds",
    "relUrl": "/doc-misc/#points-to-bounds"
  },"518": {
    "doc": "Misc",
    "title": "Reverse Points Order",
    "content": "Reverse current points order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#reverse-points-order",
    "relUrl": "/doc-misc/#reverse-points-order"
  },"519": {
    "doc": "Misc",
    "title": "Cherry Pick Points",
    "content": "Cherry pick points using their indices. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#cherry-pick-points",
    "relUrl": "/doc-misc/#cherry-pick-points"
  },"520": {
    "doc": "Misc",
    "title": "Conditional Actions",
    "content": "Unified approach to Match &amp; Set. ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#conditional-actions",
    "relUrl": "/doc-misc/#conditional-actions"
  },"521": {
    "doc": "Misc",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#uber-filter",
    "relUrl": "/doc-misc/#uber-filter"
  },"522": {
    "doc": "Misc",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#d-lloyd-relaxation",
    "relUrl": "/doc-misc/#d-lloyd-relaxation"
  },"523": {
    "doc": "Misc",
    "title": "Meta Filter",
    "content": "Filter point collections based on tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#meta-filter",
    "relUrl": "/doc-misc/#meta-filter"
  },"524": {
    "doc": "Misc",
    "title": "Merge Points by Tags",
    "content": "Merge points based on shared tags . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#merge-points-by-tags",
    "relUrl": "/doc-misc/#merge-points-by-tags"
  },"525": {
    "doc": "Misc",
    "title": "Meta Cleanup",
    "content": "Keep/Remove tags &amp; attributes using string queries . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#meta-cleanup",
    "relUrl": "/doc-misc/#meta-cleanup"
  },"526": {
    "doc": "Misc",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#write-index",
    "relUrl": "/doc-misc/#write-index"
  },"527": {
    "doc": "Misc",
    "title": "3D Lloyd Relaxation",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#d-lloyd-relaxation-1",
    "relUrl": "/doc-misc/#d-lloyd-relaxation-1"
  },"528": {
    "doc": "Misc",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#refresh-seed",
    "relUrl": "/doc-misc/#refresh-seed"
  },"529": {
    "doc": "Misc",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#discard-points-by-count",
    "relUrl": "/doc-misc/#discard-points-by-count"
  },"530": {
    "doc": "Misc",
    "title": "Discard Points by Overlap",
    "content": "Kindda like self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#discard-points-by-overlap",
    "relUrl": "/doc-misc/#discard-points-by-overlap"
  },"531": {
    "doc": "Misc",
    "title": "Misc",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/",
    "relUrl": "/doc-misc/"
  },"532": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": "Subtitle . PathsPaths which points will have tangents written on PathsPaths with updated tangents attributes . Table of content . | Properties . | Tangents modules | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#write-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#write-tangents"
  },"533": {
    "doc": "Write Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Arrive Name | Attribute to write the Arrive tangent to. | . | Leave Name | Attribute to write the Leave tangent to. | . | **Tangents** | This property lets you select which kind of tangent maths you want to apply to the input paths.*See [Available Tangents Modules](#available-tangents-modules).* | . The name used for Arrive &amp; Leave should be used as custom tangent attributes when using the Create Spline PCG Node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#properties",
    "relUrl": "/doc-paths/paths-write-tangents/#properties"
  },"534": {
    "doc": "Write Tangents",
    "title": "Tangents modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#tangents-modules",
    "relUrl": "/doc-paths/paths-write-tangents/#tangents-modules"
  },"535": {
    "doc": "Write Tangents",
    "title": "‚à¢ Catmull-Rom",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#catmull-rom",
    "relUrl": "/doc-paths/paths-write-tangents/#catmull-rom"
  },"536": {
    "doc": "Write Tangents",
    "title": "‚à¢ Zero Tangents",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#zero-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#zero-tangents"
  },"537": {
    "doc": "Write Tangents",
    "title": "‚à¢ Auto Tangents",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#auto-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#auto-tangents"
  },"538": {
    "doc": "Write Tangents",
    "title": "‚à¢ Custom Tangents",
    "content": "Custom attribute-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#custom-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#custom-tangents"
  },"539": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/",
    "relUrl": "/doc-paths/paths-write-tangents/"
  },"540": {
    "doc": "Paths",
    "title": "Paths",
    "content": "Smooth, orient, tangents, ‚Ä¶ . Manipulate points as linearily ordered datasets . This section contains path-like data utilities. Paths are just points . Like every other PCGEx thing, Paths are really just Points Dataset ‚Äì however, Path nodes assume that the input data represent a ‚Äúpath‚Äù, a.k.a an ordered list of point. Each point represent a ‚Äústep‚Äù inside that path, from the first to last point in the Dataset. Paths nodes accept any inputs, and do not rely on any custom attributes to work.. All path nodes have a Closed Path checkbox to indicate whether it should process its input as closed or open paths. At the time of writing, there is no way to handler per-input closed/open state. Either all inputs are considered closed, or they are not.. This will change in the future, and will likely rely on user-defined tags to know whether a path is to be considered closed or not. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths",
    "relUrl": "/doc-paths/#paths"
  },"541": {
    "doc": "Paths",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths-nodes",
    "relUrl": "/doc-paths/#paths-nodes"
  },"542": {
    "doc": "Paths",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#smooth",
    "relUrl": "/doc-paths/#smooth"
  },"543": {
    "doc": "Paths",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#orient",
    "relUrl": "/doc-paths/#orient"
  },"544": {
    "doc": "Paths",
    "title": "Path Spline Mesh",
    "content": "Create SplineMesh components from paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#path-spline-mesh",
    "relUrl": "/doc-paths/#path-spline-mesh"
  },"545": {
    "doc": "Paths",
    "title": "Solidify Path",
    "content": "Solidify paths into ‚Äúedges‚Äù . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#solidify-path",
    "relUrl": "/doc-paths/#solidify-path"
  },"546": {
    "doc": "Paths",
    "title": "Path √ó Path Crossings",
    "content": "Find crossings within &amp; against paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#path--path-crossings",
    "relUrl": "/doc-paths/#path--path-crossings"
  },"547": {
    "doc": "Paths",
    "title": "Path √ó Bounds Intersections",
    "content": "Find intersections with points bounds. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#path--bounds-intersections",
    "relUrl": "/doc-paths/#path--bounds-intersections"
  },"548": {
    "doc": "Paths",
    "title": "Blend",
    "content": "Blend individual points between from paths‚Äô start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#blend",
    "relUrl": "/doc-paths/#blend"
  },"549": {
    "doc": "Paths",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#fuse-collinear",
    "relUrl": "/doc-paths/#fuse-collinear"
  },"550": {
    "doc": "Paths",
    "title": "Offset",
    "content": "Offset path along a direction . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#offset",
    "relUrl": "/doc-paths/#offset"
  },"551": {
    "doc": "Paths",
    "title": "Attribute Rolling",
    "content": "Does a rolling operation over properties &amp; attributes along a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#attribute-rolling",
    "relUrl": "/doc-paths/#attribute-rolling"
  },"552": {
    "doc": "Paths",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#fuse-collinear-1",
    "relUrl": "/doc-paths/#fuse-collinear-1"
  },"553": {
    "doc": "Paths",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#subdivide",
    "relUrl": "/doc-paths/#subdivide"
  },"554": {
    "doc": "Paths",
    "title": "Write Paths Properties",
    "content": "Compute extra path informations . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#write-paths-properties",
    "relUrl": "/doc-paths/#write-paths-properties"
  },"555": {
    "doc": "Paths",
    "title": "Write Tangents",
    "content": "Subtitle . ¬∑ ¬∑ ¬∑ ¬∑ ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#write-tangents",
    "relUrl": "/doc-paths/#write-tangents"
  },"556": {
    "doc": "Paths",
    "title": "Paths to Clusters",
    "content": "Convert paths to clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths-to-clusters",
    "relUrl": "/doc-paths/#paths-to-clusters"
  },"557": {
    "doc": "Paths",
    "title": "Paths",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/",
    "relUrl": "/doc-paths/"
  },"558": {
    "doc": "Sample Neighbors",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/#sample-neighbors",
    "relUrl": "/doc-sampling/sampling-neighbors/#sample-neighbors"
  },"559": {
    "doc": "Sample Neighbors",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/#properties"
  },"560": {
    "doc": "Sample Neighbors",
    "title": "Sample Neighbors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/",
    "relUrl": "/doc-sampling/sampling-neighbors/"
  },"561": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, ‚Ä¶ . Extract data from surroundings . This section contains raw data samplers. They‚Äôre mostly helpers/boilerplate code to sample and write data to attribute without providing immediate mean of using of the results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sampling",
    "relUrl": "/doc-sampling/#sampling"
  },"562": {
    "doc": "Sampling",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sampling-nodes",
    "relUrl": "/doc-sampling/#sampling-nodes"
  },"563": {
    "doc": "Sampling",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-surface",
    "relUrl": "/doc-sampling/#sample-nearest-surface"
  },"564": {
    "doc": "Sampling",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#guided-trace",
    "relUrl": "/doc-sampling/#guided-trace"
  },"565": {
    "doc": "Sampling",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-polyline",
    "relUrl": "/doc-sampling/#sample-nearest-polyline"
  },"566": {
    "doc": "Sampling",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-points",
    "relUrl": "/doc-sampling/#sample-nearest-points"
  },"567": {
    "doc": "Sampling",
    "title": "Sample Overlap Stats",
    "content": "Compute overlap statistics between point collections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-overlap-stats",
    "relUrl": "/doc-sampling/#sample-overlap-stats"
  },"568": {
    "doc": "Sampling",
    "title": "Sample Nearest Bounds",
    "content": "Sample within bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-bounds",
    "relUrl": "/doc-sampling/#sample-nearest-bounds"
  },"569": {
    "doc": "Sampling",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-neighbors",
    "relUrl": "/doc-sampling/#sample-neighbors"
  },"570": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/",
    "relUrl": "/doc-sampling/"
  },"571": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": "Modules &amp; Documentation . This section is dedicated to broader pathfinding topics &amp; modules. Node specifics can be found on their dedicated node page. Pathfinding modules for Pathfinding nodes. Key steps include heuristic computation, goal picking, and search algorithms finding the best path based on weighted connections. üù∞ Heuristics and their weights are key to the operation. Note: Plot nodes handle point datasets differently, finding a path through each point in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding",
    "relUrl": "/doc-pathfinding/#pathfinding"
  },"572": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding",
    "relUrl": "/doc-pathfinding/#pathfinding"
  },"573": {
    "doc": "Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#edges-pathfinding",
    "relUrl": "/doc-pathfinding/#edges-pathfinding"
  },"574": {
    "doc": "Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-edges-pathfinding",
    "relUrl": "/doc-pathfinding/#plot-edges-pathfinding"
  },"575": {
    "doc": "Pathfinding",
    "title": "How pathfinding works",
    "content": "Although details vary a bit depending on the selected ‚äö Search algorithm, the basic gist is, for each path &amp; cluster: . | üùì Goal Pickers will find a suitable Seed and Goal point within the cluster. | The Search Algorithm will then find the best path that goes from Seed to Goal, accounting for its internal maths, and using üù∞ Heuristics as to determine whether one connection is better than another. | . Note: The Seed and Goal node are picked based on closest distance to input positions. Starting from the seed, each ‚Äúnext step‚Äù is weighted according to the V Vertex weight and the E Edge weight that connects to it. The search returns the path found with the lowest possible weight, or score. While the selected search algorithm is important, üù∞ Heuristics are more critical to the operation, as user-defined weights can drastically change and shape the path deemed best by the search. Note: The Plot nodes variations don‚Äôt have a goal picker and instead process each point Dataset as a list of points to go through from start to finish. The first point is the initial seed, the last point is the final goal, and then a path is found that goes through each point in-between, in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#how-pathfinding-works",
    "relUrl": "/doc-pathfinding/#how-pathfinding-works"
  },"576": {
    "doc": "Pathfinding",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding-nodes",
    "relUrl": "/doc-pathfinding/#pathfinding-nodes"
  },"577": {
    "doc": "Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#edges-pathfinding-1",
    "relUrl": "/doc-pathfinding/#edges-pathfinding-1"
  },"578": {
    "doc": "Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-edges-pathfinding-1",
    "relUrl": "/doc-pathfinding/#plot-edges-pathfinding-1"
  },"579": {
    "doc": "Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/#navmesh-pathfinding"
  },"580": {
    "doc": "Pathfinding",
    "title": "Plot Navmesh",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-navmesh",
    "relUrl": "/doc-pathfinding/#plot-navmesh"
  },"581": {
    "doc": "Pathfinding",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#find-contours",
    "relUrl": "/doc-pathfinding/#find-contours"
  },"582": {
    "doc": "Pathfinding",
    "title": "üùì Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#-goal-pickers",
    "relUrl": "/doc-pathfinding/#-goal-pickers"
  },"583": {
    "doc": "Pathfinding",
    "title": "üùì Default",
    "content": "Match seeds to goals at the same index. The Default picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#default",
    "relUrl": "/doc-pathfinding/#default"
  },"584": {
    "doc": "Pathfinding",
    "title": "üùì Random",
    "content": "Match seeds to goals at a random index. The Random picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#random",
    "relUrl": "/doc-pathfinding/#random"
  },"585": {
    "doc": "Pathfinding",
    "title": "üùì Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. The Goal from Attribute picker ‚Ä¶ . ## . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#goal-from-attribute",
    "relUrl": "/doc-pathfinding/#goal-from-attribute"
  },"586": {
    "doc": "Pathfinding",
    "title": "üù∞ Heuristics",
    "content": "An inventory of the available heuristics modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#-heuristics",
    "relUrl": "/doc-pathfinding/#-heuristics"
  },"587": {
    "doc": "Pathfinding",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#heuristic-attribute",
    "relUrl": "/doc-pathfinding/#heuristic-attribute"
  },"588": {
    "doc": "Pathfinding",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#shortest-distance",
    "relUrl": "/doc-pathfinding/#shortest-distance"
  },"589": {
    "doc": "Pathfinding",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#inertia",
    "relUrl": "/doc-pathfinding/#inertia"
  },"590": {
    "doc": "Pathfinding",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#turning",
    "relUrl": "/doc-pathfinding/#turning"
  },"591": {
    "doc": "Pathfinding",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#steepness",
    "relUrl": "/doc-pathfinding/#steepness"
  },"592": {
    "doc": "Pathfinding",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#azimuth",
    "relUrl": "/doc-pathfinding/#azimuth"
  },"593": {
    "doc": "Pathfinding",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#least-nodes",
    "relUrl": "/doc-pathfinding/#least-nodes"
  },"594": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/",
    "relUrl": "/doc-pathfinding/"
  },"595": {
    "doc": "Transforms",
    "title": "Transforms",
    "content": "Various unusual transform ‚Ä¶ . Manipulate point positions &amp; transforms . This section contains transform utilities. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/#transforms",
    "relUrl": "/doc-transforms/#transforms"
  },"596": {
    "doc": "Transforms",
    "title": "Transform Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/#transform-nodes",
    "relUrl": "/doc-transforms/#transform-nodes"
  },"597": {
    "doc": "Transforms",
    "title": "Flat Projection",
    "content": "TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/#flat-projection",
    "relUrl": "/doc-transforms/#flat-projection"
  },"598": {
    "doc": "Transforms",
    "title": "Move Pivot",
    "content": "TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/#move-pivot",
    "relUrl": "/doc-transforms/#move-pivot"
  },"599": {
    "doc": "Transforms",
    "title": "Bounds to Points",
    "content": "Not to confuse with Points to Bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/#bounds-to-points",
    "relUrl": "/doc-transforms/#bounds-to-points"
  },"600": {
    "doc": "Transforms",
    "title": "Transforms",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/",
    "relUrl": "/doc-transforms/"
  },"601": {
    "doc": "Refine",
    "title": "Refine",
    "content": "PCGEx | Cluster : Refine Algorithmic edge refinement . The Refine node algorithmically prunes edges in a graph to enforce specific properties, allowing selection of refinement type and optional sanitization to restore edges based on predefined conditions. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs üù∞ HeuristicsHeuristic nodes, if required by the selected refinement. VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | | . Table of content . | Properties . | Sanitization | Available Refining modules | . | . The Cluster Refine node lets you refine connections inside individual clusters, a.k.a Edge pruning. Refining only removes edges and does not create new ones. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#refine",
    "relUrl": "/doc-clusters/edges-refine/#refine"
  },"602": {
    "doc": "Refine",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Refinement | This property lets you select which kind of refinement you want to apply to the input clusters.**Specifics of the instanced module will be available under its inner Settings section, if any.** | . | Output Only Edges As Points | If enabled, this node will output edges as raw points, without the usually associated cluster.*This can be significantly faster and less greedy depending on your need for the output edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#properties",
    "relUrl": "/doc-clusters/edges-refine/#properties"
  },"603": {
    "doc": "Refine",
    "title": "Sanitization",
    "content": "The sanitization property lets you enforce some general conditions within the graph. Note that is applied after the refinement. | Sanitization | Description | . | None | No sanitization. | . | Shortest | If a node has no edge left, restore the shortest one. | . | Longest | If a node has no edge left, restore the longest one. | . Note that the sanitization options offer no guarantee that the initial interconnectivity will be preserved! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#sanitization",
    "relUrl": "/doc-clusters/edges-refine/#sanitization"
  },"604": {
    "doc": "Refine",
    "title": "Available Refining modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#available-refining-modules",
    "relUrl": "/doc-clusters/edges-refine/#available-refining-modules"
  },"605": {
    "doc": "Refine",
    "title": "üùî Minimum Spanning Tree",
    "content": "Implementation of Prim‚Äôs Minimum Spanning Tree algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#minimum-spanning-tree",
    "relUrl": "/doc-clusters/edges-refine/#minimum-spanning-tree"
  },"606": {
    "doc": "Refine",
    "title": "üùî Keep Lowest Score",
    "content": "Keeps edges with the lowest heuristic scores . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#keep-lowest-score",
    "relUrl": "/doc-clusters/edges-refine/#keep-lowest-score"
  },"607": {
    "doc": "Refine",
    "title": "üùî Keep Shortest",
    "content": "Keeps the shortest edge of each node . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#keep-shortest",
    "relUrl": "/doc-clusters/edges-refine/#keep-shortest"
  },"608": {
    "doc": "Refine",
    "title": "üùî Keep Longest",
    "content": "Keeps the longest edge of each node . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#keep-longest",
    "relUrl": "/doc-clusters/edges-refine/#keep-longest"
  },"609": {
    "doc": "Refine",
    "title": "üùî Keep Highest Score",
    "content": "Keeps edges with the highest heuristic scores . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#keep-highest-score",
    "relUrl": "/doc-clusters/edges-refine/#keep-highest-score"
  },"610": {
    "doc": "Refine",
    "title": "üùî Remove Highest Score",
    "content": "Removes edges with the highest heuristic scores . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#remove-highest-score",
    "relUrl": "/doc-clusters/edges-refine/#remove-highest-score"
  },"611": {
    "doc": "Refine",
    "title": "üùî Remove Longest",
    "content": "Removes the longest edge of each node . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#remove-longest",
    "relUrl": "/doc-clusters/edges-refine/#remove-longest"
  },"612": {
    "doc": "Refine",
    "title": "üùî Remove Lowest Score",
    "content": "Removes edges with the lowest heuristic scores . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#remove-lowest-score",
    "relUrl": "/doc-clusters/edges-refine/#remove-lowest-score"
  },"613": {
    "doc": "Refine",
    "title": "üùî Remove Overlap",
    "content": "Removes overlapping edges . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#remove-overlap",
    "relUrl": "/doc-clusters/edges-refine/#remove-overlap"
  },"614": {
    "doc": "Refine",
    "title": "üùî Remove Shortest",
    "content": "Removes the shortest edge of each node . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#remove-shortest",
    "relUrl": "/doc-clusters/edges-refine/#remove-shortest"
  },"615": {
    "doc": "Refine",
    "title": "Cluster Output Settings",
    "content": "See Working with Clusters. | Property | Description | . | Edge Position | If enabled, edge point‚Äô position will be the result of that value used as a lerp between its start and end Vtx point. | . | : Pruning : | ¬† | . | Min Vtx Count | If enabled, only ouputs clusters that have more ( &gt; ) Vtx than the specified number. | . | Max Vtx Count | If enabled, only ouputs clusters that have less ( &lt; ) Vtx than the specified number. | . | Min Edge Count | If enabled, only ouputs clusters that have more ( &gt; ) Edge than the specified number. | . | Max Edge Count | If enabled, only ouputs clusters that have less ( &lt; ) Edge than the specified number. | . | Refresh Edge Seed | If enabled, Edge points gets a fresh seed. | . | Build and Cache Cluster | If enabled, pre-build and cache cluster along with the point data.This has a slight memory cost associated to it, but can offer tremendous performance improvement.If disabled, cluster processors that comes down the line have to rebuild clusters from point data, which is very costly as they are also tested for errors and possible disconnections in the process. | . | Expand Clusters | If enabled, also build &amp; cache another layer of cache data.This can have a significant memory cost, as well as a minimal performance overhead, but can greatly improve certain specific operations down the line. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/#cluster-output-settings",
    "relUrl": "/doc-clusters/edges-refine/#cluster-output-settings"
  },"616": {
    "doc": "Refine",
    "title": "Refine",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/",
    "relUrl": "/doc-clusters/edges-refine/"
  },"617": {
    "doc": "Staging",
    "title": "Staging",
    "content": "Data Asset &amp; Staging nodes . Prepare points for spawning meshes &amp; actors . This section contains data asset &amp; staging utilities. Staging nodes rely on Asset Collection to associate points &amp; edit them based on asset properties, such as bounding box. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#staging",
    "relUrl": "/doc-assets/#staging"
  },"618": {
    "doc": "Staging",
    "title": "Staging Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#staging-nodes",
    "relUrl": "/doc-assets/#staging-nodes"
  },"619": {
    "doc": "Staging",
    "title": "Asset Staging",
    "content": "Prepare points before spawning. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#asset-staging",
    "relUrl": "/doc-assets/#asset-staging"
  },"620": {
    "doc": "Staging",
    "title": "Asset Collection to Set",
    "content": "Converts an asset collection to an attribute set. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#asset-collection-to-set",
    "relUrl": "/doc-assets/#asset-collection-to-set"
  },"621": {
    "doc": "Staging",
    "title": "Asset Collections",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#asset-collections",
    "relUrl": "/doc-assets/#asset-collections"
  },"622": {
    "doc": "Staging",
    "title": "üù± Mesh Collection",
    "content": "Mesh Collection DataAsset . The Mesh Collection DataAsset is a list of Meshes with ISM/HISM Descriptors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#mesh-collection",
    "relUrl": "/doc-assets/#mesh-collection"
  },"623": {
    "doc": "Staging",
    "title": "üù± Actor Collection",
    "content": "Actor Collection DataAsset . The Actor Collection DataAsset is a list of Actors, that comes with all the Asset Collection goodies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/#actor-collection",
    "relUrl": "/doc-assets/#actor-collection"
  },"624": {
    "doc": "Staging",
    "title": "Staging",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/",
    "relUrl": "/doc-assets/"
  },"625": {
    "doc": "Connect Points",
    "title": "Connect Points",
    "content": "PCGEx | Connect Points Creates connections between points using various probes. The Connect Points node creates connections between points in clusters based on user-defined probes, allowing control over how points generate and receive connections, with options for preventing overlap and projecting points for more accurate results. PointsPoints that will be connected togethers ProbesProbes used to build connections GeneratorsFilters used to determine which points are allowed to generate connections ConnectablesFilters used to determine which points are allowed to receive connections VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Table of content . | Properties . | Generators &amp; Connectables | Probes | . | . The connect point node allows you to create connected clusters using different probes. Each point will go through each probe‚Äô rules to find neighboring points to connect to. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#connect-points",
    "relUrl": "/doc-clusters/connect-points/#connect-points"
  },"626": {
    "doc": "Connect Points",
    "title": "Properties",
    "content": ". | Property | Description | . | Stacking Prevention Tolerance | When enabled, the node will prevent multiple connections from happening in the same direction, within that tolerance.*This avoids the creation of overlapping edges when testing in near-collinear situations.* | . | Project Points | If enabled, points will be projected on a plane under-the-hood before looking for connections.*This is especially desirable when working with landscapes* | . | Projection normal | The normal of the plane to project points to, if enabled.*Unless you‚Äôre doing very custom stuff, the default value is usually fine as it project points as if \"seen from top view\"* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#properties",
    "relUrl": "/doc-clusters/connect-points/#properties"
  },"627": {
    "doc": "Connect Points",
    "title": "Generators &amp; Connectables",
    "content": "These two inputs accept any of filters available for the Uber Filter node. | Generators are points that will use the probes to find neighbors they can connect to. | Connectables are points that will be seen by the probes. All points | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#generators--connectables",
    "relUrl": "/doc-clusters/connect-points/#generators--connectables"
  },"628": {
    "doc": "Connect Points",
    "title": "Probes",
    "content": "Probes are at the core of the Connect Points node. You can connect as many probes as you‚Äôd like to the Probes input. No matter how many probes you use, this node will NEVER generate duplicate edges; so feel free to experiment. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#probes",
    "relUrl": "/doc-clusters/connect-points/#probes"
  },"629": {
    "doc": "Connect Points",
    "title": "üùÜ Closest",
    "content": "Connects to the closest point within a given radius . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#closest",
    "relUrl": "/doc-clusters/connect-points/#closest"
  },"630": {
    "doc": "Connect Points",
    "title": "üùÜ Direction",
    "content": "Connects to the closest point in a given direction . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#direction",
    "relUrl": "/doc-clusters/connect-points/#direction"
  },"631": {
    "doc": "Connect Points",
    "title": "üùÜ Index",
    "content": "Connects to a point at a given index . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#index",
    "relUrl": "/doc-clusters/connect-points/#index"
  },"632": {
    "doc": "Connect Points",
    "title": "üùÜ Anisotropic",
    "content": "Find connections in 16 directions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#anisotropic",
    "relUrl": "/doc-clusters/connect-points/#anisotropic"
  },"633": {
    "doc": "Connect Points",
    "title": "Cluster Output Settings",
    "content": "See Working with Clusters. | Property | Description | . | Edge Position | If enabled, edge point‚Äô position will be the result of that value used as a lerp between its start and end Vtx point. | . | : Pruning : | ¬† | . | Min Vtx Count | If enabled, only ouputs clusters that have more ( &gt; ) Vtx than the specified number. | . | Max Vtx Count | If enabled, only ouputs clusters that have less ( &lt; ) Vtx than the specified number. | . | Min Edge Count | If enabled, only ouputs clusters that have more ( &gt; ) Edge than the specified number. | . | Max Edge Count | If enabled, only ouputs clusters that have less ( &lt; ) Edge than the specified number. | . | Refresh Edge Seed | If enabled, Edge points gets a fresh seed. | . | Build and Cache Cluster | If enabled, pre-build and cache cluster along with the point data.This has a slight memory cost associated to it, but can offer tremendous performance improvement.If disabled, cluster processors that comes down the line have to rebuild clusters from point data, which is very costly as they are also tested for errors and possible disconnections in the process. | . | Expand Clusters | If enabled, also build &amp; cache another layer of cache data.This can have a significant memory cost, as well as a minimal performance overhead, but can greatly improve certain specific operations down the line. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/#cluster-output-settings",
    "relUrl": "/doc-clusters/connect-points/#cluster-output-settings"
  },"634": {
    "doc": "Connect Points",
    "title": "Connect Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/",
    "relUrl": "/doc-clusters/connect-points/"
  },"635": {
    "doc": "Uber Filter",
    "title": "Uber Filter",
    "content": "Combine multiple filters . The Uber Filter node is a one-stop node for all your filtering needs. InPoints to be filtered FiltersFilters to be evaluated InsidePoints that passed the filters OutsidePoints that didn't pass the filters. Table of content . | Properties . | Available Filters | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#uber-filter",
    "relUrl": "/doc-misc/uber-filter/#uber-filter"
  },"636": {
    "doc": "Uber Filter",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#properties",
    "relUrl": "/doc-misc/uber-filter/#properties"
  },"637": {
    "doc": "Uber Filter",
    "title": "Available Filters",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#available-filters",
    "relUrl": "/doc-misc/uber-filter/#available-filters"
  },"638": {
    "doc": "Uber Filter",
    "title": "üùñ Bitmask",
    "content": "The Bitmask Filter compares a bitmask against another . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#bitmask",
    "relUrl": "/doc-misc/uber-filter/#bitmask"
  },"639": {
    "doc": "Uber Filter",
    "title": "üùñ Bool",
    "content": "The Bool Filter does a simple bool comparison . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#bool",
    "relUrl": "/doc-misc/uber-filter/#bool"
  },"640": {
    "doc": "Uber Filter",
    "title": "üùñ Bounds",
    "content": "The Bounds Filter check if a point is inside or outside provided bounds . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#bounds",
    "relUrl": "/doc-misc/uber-filter/#bounds"
  },"641": {
    "doc": "Uber Filter",
    "title": "üùñ Dot Product",
    "content": "The Dot Product Filter compares the dot product of two direction vectors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#dot-product",
    "relUrl": "/doc-misc/uber-filter/#dot-product"
  },"642": {
    "doc": "Uber Filter",
    "title": "üùñ Group (AND/OR)",
    "content": "The Group Filter allows setting up complex AND/OR branches. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#group-andor",
    "relUrl": "/doc-misc/uber-filter/#group-andor"
  },"643": {
    "doc": "Uber Filter",
    "title": "üùñ Mean Value",
    "content": "The Mean Value Filter compares the mean statistical value of two attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#mean-value",
    "relUrl": "/doc-misc/uber-filter/#mean-value"
  },"644": {
    "doc": "Uber Filter",
    "title": "üùñ Modulo Comparison",
    "content": "The Modulo Comparison Filter compares the module value of two attributes against a third operand . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#modulo-comparison",
    "relUrl": "/doc-misc/uber-filter/#modulo-comparison"
  },"645": {
    "doc": "Uber Filter",
    "title": "üùñ Numeric Comparison",
    "content": "The Numeric Comparison Filter compares the arithmetic value of two attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#numeric-comparison",
    "relUrl": "/doc-misc/uber-filter/#numeric-comparison"
  },"646": {
    "doc": "Uber Filter",
    "title": "üùñ String Compare",
    "content": "The Compare String Filter compares two strings . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#string-compare",
    "relUrl": "/doc-misc/uber-filter/#string-compare"
  },"647": {
    "doc": "Uber Filter",
    "title": "üùñ Within Range",
    "content": "The Within Range Filter checks if a value is inside a given range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#within-range",
    "relUrl": "/doc-misc/uber-filter/#within-range"
  },"648": {
    "doc": "Uber Filter",
    "title": "Uber Filter",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/",
    "relUrl": "/doc-misc/uber-filter/"
  },"649": {
    "doc": "‚à∑ Installation",
    "title": "‚à∑ Installation",
    "content": "How to install . The best way is to clone the repo as a submodule; though you can also download pre-packaged versions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#installation",
    "relUrl": "/installation.html#installation"
  },"650": {
    "doc": "‚à∑ Installation",
    "title": "Drop-in Package",
    "content": "The easiest way to install PCGExtendedToolkit is to download the packaged version of the plugin. However, for the sake of simplicity (and size), a packaged version only exist for the latest launcher minor release of the engine, at the time the PCGEx release was published. PCGEx for Unreal 5.4 (Package) PCGEx for Unreal 5.3 (Package) . Simply download one of the .zip above and put PCGExtendedToolkit directly in your YourProject/Plugins/ folder. Note that these packages are created in windows, for windows ‚Äì you can always compile the plugin yourself from the sources if the latest package doesn‚Äôt work for your version of the editor. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#drop-in-package",
    "relUrl": "/installation.html#drop-in-package"
  },"651": {
    "doc": "‚à∑ Installation",
    "title": "Build from Source",
    "content": "‚ÄÅ Github . If building from source, make sure your project &amp; computer is set-up for C++ dev. See Epic Documentation on the topic. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#build-from-source",
    "relUrl": "/installation.html#build-from-source"
  },"652": {
    "doc": "‚à∑ Installation",
    "title": "Cloning &amp; Build using Git",
    "content": "The best way is to clone the repository to a submodule; that way you can contribute pull requests if you want. &gt; cd YourProject &gt; git submodule add https://github.com/Nebukam/PCGExtendedToolkit Plugins/PCGExtendedToolkit &gt; git add ../.gitmodules &gt; git commit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#cloning--build-using-git",
    "relUrl": "/installation.html#cloning--build-using-git"
  },"653": {
    "doc": "‚à∑ Installation",
    "title": "Install from the Source‚Äô ZIP",
    "content": "‚ÄÅ Download from Github (.zip) . Alternatively you can download the ZIP of this repo and place it in YourProject/Plugins/PCGExtendedToolkit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#install-from-the-source-zip",
    "relUrl": "/installation.html#install-from-the-source-zip"
  },"654": {
    "doc": "‚à∑ Installation",
    "title": "Finding Nodes",
    "content": "Once the plugin is installed and compiled, nodes are available in any PCG Graph along with vanilla nodes. You can either find them in the explorer on the left, or in the list when right-clicking any empty space in the graph. All PCGEx nodes are prefixed with PCGEx | ‚Äì which is a bit annoying at first, but quickly comes in handy to ensure nodes are clearly identifiable. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html#finding-nodes",
    "relUrl": "/installation.html#finding-nodes"
  },"655": {
    "doc": "‚à∑ Installation",
    "title": "‚à∑ Installation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation.html",
    "relUrl": "/installation.html"
  },"656": {
    "doc": "Attribute Remap",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. The Attribute Remap allows you to easily do component-wise attribute remapping and clamping. InThat's an input InThat's an input InThat's an input . Table of content . | Properties . | Remap Curve &amp; Scale | Range Method | . | . Note that this node only support attribute and not properties, extra selectors will be ignored. Additional note: this node works in a component-wise fashion: the remapping will be done individually for each component of the input data. By default the same remapping rule is applied to each component, but you can freely override the behavior per-component. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#attribute-remap",
    "relUrl": "/doc-misc/misc-attribute-remap.html#attribute-remap"
  },"657": {
    "doc": "Attribute Remap",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Source Attribute Name | The source attribute to read data from. | . | Target Attribute Name | The target attribute to write data to.*Can be the same as Source.* | . | **Remap (Default)**| | ¬† | . | **Input Clamp Settings**| | ¬† | . | Clamp Min | If enabled, input data smaller than the specified value will be clamped. | . | Clamp Max | If enabled, input data greater than the specified value will be clamped. | . | **Remap Settings**| | ¬† | . | In Min | If enabled, lets you input the In Min value manually for the remapping.**If left disabled, this value will be the minimum found in the input dataset.** | . | In Max | If enabled, lets you input the In Max value manually for the remapping.**If left disabled, this value will be the maximum found in the input dataset.** | . | Scale | A scale factor applied to the output, remapped value.*See [Remap Curve &amp; Scale](#remap-curve‚Äìscale).* | . | Range Method | Basically lets you choose whether the smallest value should be 0 (Full Range) or the effective Min value (Effective range).*See [Range Method](#range-method).* | . | Remap Curve | The curve that will be sampled for remapping.*See [Remap Curve &amp; Scale](#remap-curve‚Äìscale).* | . | **Output Clamp Settings** | *Same as Input, but applied to the final value before writing it.* | . | **Remap overrides**| | ¬† | . | **Remap (2nd Component)** | Override default settings for the 2nd component (Y, Yaw, G, etc) | . | **Remap (3rd Component)** | Override default settings for the 3rd component (Z, Pitch, B, etc) | . | **Remap (4th Component)** | Override default settings for the 4th component (W, A) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#properties",
    "relUrl": "/doc-misc/misc-attribute-remap.html#properties"
  },"658": {
    "doc": "Attribute Remap",
    "title": "Remap Curve &amp; Scale",
    "content": "The way this node works is by measuring the minimum &amp; maximum attribute value, and remap input values to a [0..1] range that is then used to sample the specified Remap Curve on the x-axis. The y curve value is then multplied by the specified Scale. See Range Method as it drives how values are sampled close to zero! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#remap-curve--scale",
    "relUrl": "/doc-misc/misc-attribute-remap.html#remap-curve--scale"
  },"659": {
    "doc": "Attribute Remap",
    "title": "Range Method",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values ‚Äì but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#range-method",
    "relUrl": "/doc-misc/misc-attribute-remap.html#range-method"
  },"660": {
    "doc": "Attribute Remap",
    "title": "Attribute Remap",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html",
    "relUrl": "/doc-misc/misc-attribute-remap.html"
  },"661": {
    "doc": "Bitmask Merge",
    "title": "Bitmask Merge",
    "content": "A simple, single bitmask attribute. The Bitmask node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask-merge.html#bitmask-merge",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask-merge.html#bitmask-merge"
  },"662": {
    "doc": "Bitmask Merge",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask-merge.html#properties",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask-merge.html#properties"
  },"663": {
    "doc": "Bitmask Merge",
    "title": "Bitmask Merge",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask-merge.html",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask-merge.html"
  },"664": {
    "doc": "Bitmask",
    "title": "Bitmask",
    "content": "A simple, single bitmask attribute. The Bitmask node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask.html#bitmask",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask.html#bitmask"
  },"665": {
    "doc": "Bitmask",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask.html#properties",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask.html#properties"
  },"666": {
    "doc": "Bitmask",
    "title": "Bitmask",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/bitmasks/misc-bitmask.html",
    "relUrl": "/doc-misc/bitmasks/misc-bitmask.html"
  },"667": {
    "doc": "Cherry Pick Points",
    "title": "Cherry Pick Points",
    "content": "Cherry pick points using their indices. The Cherry Pick Points node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-cherry-pick.html#cherry-pick-points",
    "relUrl": "/doc-misc/misc-cherry-pick.html#cherry-pick-points"
  },"668": {
    "doc": "Cherry Pick Points",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-cherry-pick.html#properties",
    "relUrl": "/doc-misc/misc-cherry-pick.html#properties"
  },"669": {
    "doc": "Cherry Pick Points",
    "title": "Cherry Pick Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-cherry-pick.html",
    "relUrl": "/doc-misc/misc-cherry-pick.html"
  },"670": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. The Discard Points by Count node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#discard-points-by-count",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#discard-points-by-count"
  },"671": {
    "doc": "Discard Points by Count",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Min Point Count | If enabled, does not output data with a point count smaller than the specified amount. | . | Max Point Count | If enabled, does not output data with a point count larger than the specified amount. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#properties",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#properties"
  },"672": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html"
  },"673": {
    "doc": "Discard Points by Overlap",
    "title": "Discard Points by Overlap",
    "content": "Kindda like self-pruning but for collections. The Discard Points by Overlap node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html#discard-points-by-overlap",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html#discard-points-by-overlap"
  },"674": {
    "doc": "Discard Points by Overlap",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html#properties",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html#properties"
  },"675": {
    "doc": "Discard Points by Overlap",
    "title": "Discard Points by Overlap",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html"
  },"676": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. InPoints to read &amp; draw attributes from OutUnaltered inputs . Table of content . | Individual Debug Settings | Expressions . | Direction | Connection (Position) | Connection (Point Index) | Point | Boolean | . | . Each Draw Attribute node can display any number of things by fetching values from whatever point data is plugged into the input pin; in the order in which they are set up. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#draw-attributes",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#draw-attributes"
  },"677": {
    "doc": "Draw Attributes",
    "title": "Individual Debug Settings",
    "content": "| Property | Description | . | **Settings**| | ¬† | . | Enabled | Whether these settings are enabled or not. Allows to quickly turn a debug display on/off without deleting the entire entry. | . | Selector | The attribute or property to draw. | . | Expressed As | The type of shape/form that will be used to express the selected attribute or property. | . | **Expression Settings**| | ¬† | . | ‚Äì | Depending on the selected expression, different settings are available. See[Expressions](#expressions). | . | **Thickness &amp; Size**| | ¬† | . | Thickness | The thickness of the debug line, when drawing a line. | . | Size | How the Size is interpreted depends on the chosen expression. See[Expressions](#expressions). | . | Local Size Attribute | When enabled, allows you to use a local attribute as a Size.*If enabled, the fixed Size attribute becomes a multiplier to the local attribute.* | . | **Color**| | ¬† | . | Color | The debug color. | . | Local Color Attribute | When enabled, allows you to use a local attribute instead of the default Color property. | . | Color Is Linear | Specifies whether the Local Color attribute is linear (0-1 based) or hex (0-255).*If disabled, the attribute or property value will be divided by 255 internally.* | . | Depth Priority | Debug draw depth priority. -1 : draw on top of everything.0 : Regular depth sorting.1 : Draw behind everything. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#individual-debug-settings",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#individual-debug-settings"
  },"678": {
    "doc": "Draw Attributes",
    "title": "Expressions",
    "content": "As of writing time, there are a few expression available: . | Direction | Connection (Position) | Connection (Point index) | Point | Boolean | Label | . Direction . | **Extra Properties**| | ¬† | . | Normalize Before Sizing | If enabled, the incoming vector will be normalized before it is resized and drawn. | . Connection (Position) . Draws a line between the current point‚Äô location and the selected attribute or property as a world space position. | **Extra Properties**| | ¬† | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Connection (Point Index) . Draws a line between the current point‚Äô location and another point within the same group as a world space position. The selected attribute or property is used as the index for the point to use as target position. | **Extra Properties**| | ¬† | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Note: this is a legacy tool for drawing edges, if using clusters, use Draw Edges instead. Point . | **Extra Properties**| | ¬† | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Boolean . Boolean is similar to Point, except it is drawn at the point‚Äô location in space. The debug color is selected based on the input value: If the value is &lt;= 0 the base color will be picked; otherwise Secondary Color is used. | **Extra Properties**| | ¬† | . | Secondary Color | The color to be used for values &gt; 0. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#expressions",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#expressions"
  },"679": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html"
  },"680": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . Flush persistent debug lines, to be used at the start of a PCG graph. See Debug . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-flush-debug.html#flush-debug",
    "relUrl": "/doc-misc/debug/misc-flush-debug.html#flush-debug"
  },"681": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-flush-debug.html",
    "relUrl": "/doc-misc/debug/misc-flush-debug.html"
  },"682": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#fuse-points",
    "relUrl": "/doc-misc/misc-fuse-points.html#fuse-points"
  },"683": {
    "doc": "Fuse Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Component Wise Radius | Whether to use a component-wise radius or a spherical one.When component-wise is enabled, distance is checked individually on X, Y and Z axis in world-space. | . | Radius | Radius within which multiple points are to be fused into a single one. | . | Preserve Order | If enabled, fused points will be sorted to maintain their original order. | . | **Blending Settings** | Control how removed points‚Äô properties and attributes are blended into the point they are fused to.See Blending | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#properties",
    "relUrl": "/doc-misc/misc-fuse-points.html#properties"
  },"684": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html",
    "relUrl": "/doc-misc/misc-fuse-points.html"
  },"685": {
    "doc": "2D Lloyd Relaxation",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. The 2D Lloyd Relaxation node applies any number of Lloyd relaxation passes, in 2D space. Table of content . | Properties | . See Lloyd Relaxation on Wikipedia. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#d-lloyd-relaxation",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#d-lloyd-relaxation"
  },"686": {
    "doc": "2D Lloyd Relaxation",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#properties",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#properties"
  },"687": {
    "doc": "2D Lloyd Relaxation",
    "title": "2D Lloyd Relaxation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html"
  },"688": {
    "doc": "3D Lloyd Relaxation",
    "title": "3D Lloyd Relaxation",
    "content": ". Applies any number of Lloyd relaxation passes, in 3D space. Table of content . | Properties | . See Lloyd Relaxation on Wikipedia. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#d-lloyd-relaxation",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#d-lloyd-relaxation"
  },"689": {
    "doc": "3D Lloyd Relaxation",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#properties",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#properties"
  },"690": {
    "doc": "3D Lloyd Relaxation",
    "title": "3D Lloyd Relaxation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html"
  },"691": {
    "doc": "Merge Points by Tags",
    "title": "Merge Points by Tags",
    "content": "Merge points based on shared tags . The Merge Points by Tags node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-merge-points-by-tags.html#merge-points-by-tags",
    "relUrl": "/doc-misc/misc-merge-points-by-tags.html#merge-points-by-tags"
  },"692": {
    "doc": "Merge Points by Tags",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-merge-points-by-tags.html#properties",
    "relUrl": "/doc-misc/misc-merge-points-by-tags.html#properties"
  },"693": {
    "doc": "Merge Points by Tags",
    "title": "Merge Points by Tags",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-merge-points-by-tags.html",
    "relUrl": "/doc-misc/misc-merge-points-by-tags.html"
  },"694": {
    "doc": "Meta Cleanup",
    "title": "Meta Cleanup",
    "content": "Keep/Remove tags &amp; attributes using string queries . The Meta Filter node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-cleanup.html#meta-cleanup",
    "relUrl": "/doc-misc/misc-meta-cleanup.html#meta-cleanup"
  },"695": {
    "doc": "Meta Cleanup",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-cleanup.html#properties",
    "relUrl": "/doc-misc/misc-meta-cleanup.html#properties"
  },"696": {
    "doc": "Meta Cleanup",
    "title": "Meta Cleanup",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-cleanup.html",
    "relUrl": "/doc-misc/misc-meta-cleanup.html"
  },"697": {
    "doc": "Meta Filter",
    "title": "Meta Filter",
    "content": "Filter point collections based on tags &amp; attributes using string queries . The Meta Filter node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-filter.html#meta-filter",
    "relUrl": "/doc-misc/misc-meta-filter.html#meta-filter"
  },"698": {
    "doc": "Meta Filter",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-filter.html#properties",
    "relUrl": "/doc-misc/misc-meta-filter.html#properties"
  },"699": {
    "doc": "Meta Filter",
    "title": "Meta Filter",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-meta-filter.html",
    "relUrl": "/doc-misc/misc-meta-filter.html"
  },"700": {
    "doc": "Partition by Values (Static)",
    "title": "Partition by Values (Static)",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. InPoints to break into partition OutPartitioned points. If split output is enabled, outputs one point data per partition. Table of content . | Properties . | Partition Rule | Why upscale? | How partition Index works . | Raw partition value | Index partition | . | Key Sum | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#partition-by-values-static",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#partition-by-values-static"
  },"701": {
    "doc": "Partition by Values (Static)",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Split Output | Whether to output individual partitions or simply write the unique partition key to an attribute. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | Key Sum | Outputs the sum of all partition keys to a int64 attribute.**This value is unlikely to be unique, but can come in handy for filtering purposes.**See [Key Sum](#key-sum) | . Partition Rule . | Property | Description | . | Enabled | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Selector | An attribute or property that will be used for partitioning. See Attribute Selectors. | . | Filter Size | The size of the partition in relation the attribute or property uses.*Higher values means fewer larger partitions; smaller values means more smaller partitions.* | . | **Input pre-processing**| | ¬† | . | Upscale | A scale factor to apply to the selected attribute value before partitioning.*This is especially useful when working with smaller range of values like Density.*See [Why upscale?](#why-upscale). | . | Offset | An offset value added to the selected attribute value before partitioning.**Offset is added to the Upscaled value.***This allow to shift separation ‚Äòlines‚Äô when using spatial values for partitioning.* | . | **Partition Key Attribute**| | ¬† | . | **Key** Attribute Name | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Use Partition Index as Key | Whether to use the partition Index as a key *(starting at 0, up to N partitions)* or the default output *(actual under-the-hood value used to distinguish unique buckets)*.See [How partition Index works](#how-partition-index-works). | . | **Partition Tagging***Only if Split Output is enabled*| | ¬† | . | Tag Prefix Name | Tag the data with the partition key, using the format Prefix::PartitionKey or Prefix::PartitionIndex | . | Tag Use Partition Index as Key | Whether to use the partition Index as a key.See [How partition Index works](#how-partition-index-works). | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don‚Äôt specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#properties",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#properties"
  },"702": {
    "doc": "Partition by Values (Static)",
    "title": "Why upscale?",
    "content": "Under the hood, the Partition by Values broadcast and transform the reference values to a int64 used as a unique ID for individual partition. Because of that, any value in the -1..1 range (such as Density, Steepness etc) will be rounded to the nearest integer. Upscaling fixes this problem. For example, without upscaling, [0.1, 0.25, 0.01] will be partitioned as [0, 0, 0]; so a unique 0-id‚Äôd partition. On the other end, the same set [0.1, 0.25, 0.01] upscaled by a factor of 100 will be partitioned as [10, 25, 1]; so 3 separated partitions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#why-upscale",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#why-upscale"
  },"703": {
    "doc": "Partition by Values (Static)",
    "title": "How partition Index works",
    "content": "The for each partition, the corresponding attribute value is basically upscaled, offsetted and rounded down. This operation is repeated for each partition rule, and points are then distributed into buckets which all have the same partition keys. You can either output this ‚Äúkey‚Äù value as-is, or use the partition index. That index correspond to the partition order when all keys are sorted by ascending order. Using a single partition rule based on $Position.X, using a filter size of 10. On the left is the detail panel, on the right is a screencap of the value debugger for that rule . Raw partition value . Index partition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#how-partition-index-works",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#how-partition-index-works"
  },"704": {
    "doc": "Partition by Values (Static)",
    "title": "Key Sum",
    "content": "The Key Sum attribute value will be, well, the sum of all unique partitions keys. It‚Äôs useful in very specific scenarios, such as when partitioning based on booleans values, in order to filter partitions. Say you have three separate boolean (or 0-1) attributes, with a partition rule set up for each of these attributes; with Use Partition Index as Key enabled. Each partition will either have a 0 or 1 unique key, with a maximum of 9 partitions created (0 0 0, 1 0 0, 0 1 0 etc.). You will only have 4 different Key Sum: 0, 1, 2 and 3, which you can use as sort-of weak flag system: . | 0 0 0 = 0 | 1 0 0 = 1 | 0 1 0 = 1 | 0 0 1 = 1 | 1 1 0 = 2 | 0 1 1 = 2 | 1 0 1 = 2 | 1 1 1 = 3 | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#key-sum",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#key-sum"
  },"705": {
    "doc": "Partition by Values (Static)",
    "title": "Partition by Values (Static)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html"
  },"706": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . The Points to Bounds node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#points-to-bounds",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#points-to-bounds"
  },"707": {
    "doc": "Points to Bounds",
    "title": "Properties",
    "content": ". Points to bound has no dedicated properties and is pretty straighforward to use. It embeds a data blender module, which you can read more about in the specific Blending section. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#properties",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#properties"
  },"708": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html",
    "relUrl": "/doc-misc/misc-points-to-bounds.html"
  },"709": {
    "doc": "Refresh Seed",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. The Refresh Seed node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#refresh-seed",
    "relUrl": "/doc-misc/misc-refresh-seed.html#refresh-seed"
  },"710": {
    "doc": "Refresh Seed",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Base | A value added to the seed calculation to offset the output value. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#properties",
    "relUrl": "/doc-misc/misc-refresh-seed.html#properties"
  },"711": {
    "doc": "Refresh Seed",
    "title": "Refresh Seed",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html",
    "relUrl": "/doc-misc/misc-refresh-seed.html"
  },"712": {
    "doc": "Reverse Points Order",
    "title": "Reverse Points Order",
    "content": "Reverse current points order. The Reverse Points Order node ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-reverse-point-order.html#reverse-points-order",
    "relUrl": "/doc-misc/misc-reverse-point-order.html#reverse-points-order"
  },"713": {
    "doc": "Reverse Points Order",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-reverse-point-order.html#properties",
    "relUrl": "/doc-misc/misc-reverse-point-order.html#properties"
  },"714": {
    "doc": "Reverse Points Order",
    "title": "Reverse Points Order",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-reverse-point-order.html",
    "relUrl": "/doc-misc/misc-reverse-point-order.html"
  },"715": {
    "doc": "Sort Points (Static)",
    "title": "Sort Points (Static)",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. InPoints to sort OutSorted points . Table of content . | Properties . | Rules ordering | Sorting Rule | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#sort-points-static",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#sort-points-static"
  },"716": {
    "doc": "Sort Points (Static)",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Sort Direction | The output sorting direction ‚Äì Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . Rules ordering . Rules are compared in the same order as in the property panel, starting at index 0. The sorting goes through each rules until it finds a valid comparison (non-equal values) ‚Äì for each point. Sorting Rule . | Property | Description | . | Selector | An attribute or property to compare. See Attribute Selectors. | . | Tolerance | Equality tolerance used when comparing two values. | . | Invert Rule | Switches from the default &lt; comparison to &gt;. | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don‚Äôt specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#properties",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#properties"
  },"717": {
    "doc": "Sort Points (Static)",
    "title": "Sort Points (Static)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html"
  },"718": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": "Write current point index to an attribute . The Write Index node write point index as an attribute, either discrete or normalized. Don‚Äôt laugh, this is actually much more useful that you‚Äôd think. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#write-index",
    "relUrl": "/doc-misc/misc-write-index.html#write-index"
  },"719": {
    "doc": "Write Index",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#properties",
    "relUrl": "/doc-misc/misc-write-index.html#properties"
  },"720": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html",
    "relUrl": "/doc-misc/misc-write-index.html"
  },"721": {
    "doc": "Move Pivot",
    "title": "Move Pivot",
    "content": "TBD . The Move Pivot node‚Ä¶ . InPoints which pivot will be modified relative to their bounds OutPoints with moved pivot . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/move-pivot.html#move-pivot",
    "relUrl": "/doc-transforms/move-pivot.html#move-pivot"
  },"722": {
    "doc": "Move Pivot",
    "title": "Properties",
    "content": ". WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/move-pivot.html#properties",
    "relUrl": "/doc-transforms/move-pivot.html#properties"
  },"723": {
    "doc": "Move Pivot",
    "title": "Move Pivot",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-transforms/move-pivot.html",
    "relUrl": "/doc-transforms/move-pivot.html"
  },"724": {
    "doc": "üù¢ Neighbors Attributes",
    "title": "üù¢ Neighbors Attributes",
    "content": "A specific rule for one or multiple neighbor attributes sampling. TBD . None SamplerA single sampler definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#neighbors-attributes",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#neighbors-attributes"
  },"725": {
    "doc": "üù¢ Neighbors Attributes",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#properties"
  },"726": {
    "doc": "üù¢ Neighbors Attributes",
    "title": "üù¢ Neighbors Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html"
  },"727": {
    "doc": "üù¢ Neighbors Properties",
    "title": "üù¢ Neighbors Properties",
    "content": "A specific rule for one or multiple neighbor properties sampling . TBD . None SamplerA single sampler definition . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#neighbors-properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#neighbors-properties"
  },"728": {
    "doc": "üù¢ Neighbors Properties",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#properties"
  },"729": {
    "doc": "üù¢ Neighbors Properties",
    "title": "üù¢ Neighbors Properties",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html"
  },"730": {
    "doc": "‚ãã Average",
    "title": "‚ãã Average",
    "content": "Average between previous and next . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html#average",
    "relUrl": "/doc-paths/paths-orient/orient-average.html#average"
  },"731": {
    "doc": "‚ãã Average",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Orient Axis | The transform‚Äô axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-average.html#properties"
  },"732": {
    "doc": "‚ãã Average",
    "title": "‚ãã Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html",
    "relUrl": "/doc-paths/paths-orient/orient-average.html"
  },"733": {
    "doc": "‚ãã Look At",
    "title": "‚ãã Look At",
    "content": "Look at next . Table of content . | Properties . | LookAt Target | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#look-at",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#look-at"
  },"734": {
    "doc": "‚ãã Look At",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | LookAt | Select what the point should look at.*See [LookAt Target](#lookat-target).* | . | Look at Selector | The attribute to fetch as a LookAt target if LookAt == Attribute. | . | Attribute as Offset | If enabled, the attribute specified above will be used as a translation offset from the point location, as opposed to a world space position. | . | **Orientation**| | ¬† | . | Orient Axis | The transform‚Äô axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#properties"
  },"735": {
    "doc": "‚ãã Look At",
    "title": "LookAt Target",
    "content": "There are three possibilities: . | Look At Next : orientation will be computed so the point is oriented toward its next neighbor. | Look At Previous : orientation will be computed so the point is oriented toward its previous neighbor. | Attribute : orientation will be computed so the point looks at the world space position stored in a local attribute. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#lookat-target",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#lookat-target"
  },"736": {
    "doc": "‚ãã Look At",
    "title": "‚ãã Look At",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html"
  },"737": {
    "doc": "‚ãã Weighted",
    "title": "‚ãã Weighted",
    "content": "Distance-weighted interpolation . Table of content . | Properties | . Weighted orientation balances the orientation of the point between the previous and next point based on perpendicular distance. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html#weighted",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html#weighted"
  },"738": {
    "doc": "‚ãã Weighted",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Inverse Weight | Reverse the orientation weight.*Weight to next will be used for previous, and vice-versa.* | . | **Orienting**| | ¬† | . | Orient Axis | The transform‚Äô axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html#properties"
  },"739": {
    "doc": "‚ãã Weighted",
    "title": "‚ãã Weighted",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html"
  },"740": {
    "doc": "üùó Partition Rule",
    "title": "üùó Partition Rule",
    "content": "An individual partition rule . TBD . None Partition RuleA single partition rule . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html#partition-rule",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html#partition-rule"
  },"741": {
    "doc": "üùó Partition Rule",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html#properties",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html#properties"
  },"742": {
    "doc": "üùó Partition Rule",
    "title": "üùó Partition Rule",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html"
  },"743": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. The Plot Edges Pathfinding mode ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs PlotsPlot points in the form of points collections. HeuristicsHeuristics nodes that will be used by the pathfinding search algorithm PathsA single path per plot collection input . Related . | Pathfinding | . Table of content . | Modules . | Available ‚äö Search modules | Available üù∞ Heuristics modules | . | . DOC TDB ‚Äì Heuristics underwent a thorough refactor that isn‚Äôt documented yet. Each heuristic has its own node and they can be combined into the heuristic input of the pathfinding node. See the example project! . | Property | Description | . | **Settings**| | ¬† | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Add Plot Points to Path | Include plot points positions as part of the output path. | . | **Modules**| | ¬† | . | **Search Algorithm** | The search algorithm that will be used to solve pathfinding.*Each module has individual settings and documentation ‚Äì See [Available Search Algorithms](#available-search-modules).* | . | **Heuristics** | The base heuristics module that will be used during pathfinding.*Each module has individual settings and documentation ‚Äì See [Available Heuristics](#available‚Äìheuristics-modules).* | . | **Heuristics Modifiers** | This property group is available no matter what **Heuristics** have been picked.*See üù∞ Heuristic Attribute.* | . | Statistics | ¬† | . | ‚Äî | | . | **Extra Weighting**| | ¬† | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution.*Note that accumulated weight is consolidated between each plot points, as opposed to between each plotted path.* | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time an edge is used.* | . | Global Visited Weight | If enabled, additive weight will be shared across the different plotted path. | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn‚Äôt carried over or cached. | Enabling Global Visited Weight breaks parallelism. Tasks are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#plot-edges-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#plot-edges-pathfinding"
  },"744": {
    "doc": "Plot Edges Pathfinding",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#modules"
  },"745": {
    "doc": "Plot Edges Pathfinding",
    "title": "Available ‚äö Search modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#available--search-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#available--search-modules"
  },"746": {
    "doc": "Plot Edges Pathfinding",
    "title": "Dijkstra",
    "content": "Dijkstra‚Äôs Algorithm . The Dijkstra‚Äôs Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#dijkstra",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#dijkstra"
  },"747": {
    "doc": "Plot Edges Pathfinding",
    "title": "A* Star",
    "content": "A* Algorithm . The A* Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#a-star",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#a-star"
  },"748": {
    "doc": "Plot Edges Pathfinding",
    "title": "Available üù∞ Heuristics modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#available--heuristics-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#available--heuristics-modules"
  },"749": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#heuristic-attribute",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#heuristic-attribute"
  },"750": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#shortest-distance",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#shortest-distance"
  },"751": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#inertia",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#inertia"
  },"752": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#turning",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#turning"
  },"753": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#steepness",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#steepness"
  },"754": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#azimuth",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#azimuth"
  },"755": {
    "doc": "Plot Edges Pathfinding",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#least-nodes",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#least-nodes"
  },"756": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html"
  },"757": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. The Edges Pathfinding mode ‚Ä¶ . VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs SeedsSeed points GoalsGoal points üù∞ Heuristicsüù∞ Heuristics nodes that will be used by the pathfinding search algorithm PathsA point collection per path found . Related . | Pathfinding | . Table of content . | Modules . | Available üùì Goal Pickers modules | Available ‚äö Search modules | Available üù∞ Heuristics modules | . | . DOC TDB ‚Äì Heuristics underwent a thorough refactor that isn‚Äôt documented yet. Each heuristic has its own node and they can be combined into the heuristic input of the pathfinding node. See the example project! . | Property | Description | . | **Goal Picker** | The module that will be used to interpret and manipulate goals and seeds inputs.*Each module has individual settings and documentation ‚Äì See [Available Goal Pickers](#available‚Äìgoal-pickers-modules).* | . | **Settings**| | ¬† | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | **Modules**| | ¬† | . | **Search Algorithm** | The search algorithm that will be used to solve pathfinding.*Each module has individual settings and documentation ‚Äì See [Available Search Algorithms](#available-search-modules).* | . | **Heuristics** | The base heuristics module that will be used during pathfinding.*Each module has individual settings and documentation ‚Äì See [Available Heuristics](#available‚Äìheuristics-modules).* | . | **Heuristics Modifiers** | This property group is available no matter what **Heuristics** have been picked.*See üù∞ Heuristic Attribute.* | . | Statistics | ¬† | . | ‚Äî | | . | **Extra Weighting**| | ¬† | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution. | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time an edge is used.* | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn‚Äôt carried over or cached. | Enabling this feature breaks parallelism. Tasks are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#edges-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#edges-pathfinding"
  },"758": {
    "doc": "Edges Pathfinding",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#modules"
  },"759": {
    "doc": "Edges Pathfinding",
    "title": "Available üùì Goal Pickers modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available--goal-pickers-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available--goal-pickers-modules"
  },"760": {
    "doc": "Edges Pathfinding",
    "title": "üùì Default",
    "content": "Match seeds to goals at the same index. The Default picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#default",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#default"
  },"761": {
    "doc": "Edges Pathfinding",
    "title": "üùì Random",
    "content": "Match seeds to goals at a random index. The Random picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#random",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#random"
  },"762": {
    "doc": "Edges Pathfinding",
    "title": "üùì Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. The Goal from Attribute picker ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#goal-from-attribute"
  },"763": {
    "doc": "Edges Pathfinding",
    "title": "Available ‚äö Search modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available--search-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available--search-modules"
  },"764": {
    "doc": "Edges Pathfinding",
    "title": "Dijkstra",
    "content": "Dijkstra‚Äôs Algorithm . The Dijkstra‚Äôs Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#dijkstra",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#dijkstra"
  },"765": {
    "doc": "Edges Pathfinding",
    "title": "A* Star",
    "content": "A* Algorithm . The A* Algorithm search mode ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#a-star",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#a-star"
  },"766": {
    "doc": "Edges Pathfinding",
    "title": "Available üù∞ Heuristics modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available--heuristics-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available--heuristics-modules"
  },"767": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#heuristic-attribute",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#heuristic-attribute"
  },"768": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#shortest-distance",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#shortest-distance"
  },"769": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#inertia",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#inertia"
  },"770": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#turning",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#turning"
  },"771": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#steepness",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#steepness"
  },"772": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#azimuth",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#azimuth"
  },"773": {
    "doc": "Edges Pathfinding",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#least-nodes",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#least-nodes"
  },"774": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html"
  },"775": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . The Find Contours node finds hole/outlines contours in a graph, using points as proximity seeds. VtxEndpoints of the input Edges EdgesEdges associated with the input Vtxs SeedSeed points used to find contours based on proximity PathsOne or multiple paths per seed points . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-find-contours.html#find-contours",
    "relUrl": "/doc-pathfinding/pathfinding-find-contours.html#find-contours"
  },"776": {
    "doc": "Find Contours",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-find-contours.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-find-contours.html#properties"
  },"777": {
    "doc": "Find Contours",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use ‚Äì it‚Äôs very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-find-contours.html#projection-settings",
    "relUrl": "/doc-pathfinding/pathfinding-find-contours.html#projection-settings"
  },"778": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-find-contours.html",
    "relUrl": "/doc-pathfinding/pathfinding-find-contours.html"
  },"779": {
    "doc": "Plot Navmesh",
    "title": "Plot Navmesh",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. The Plot Navmesh node ‚Ä¶ . PlotsPlot points in the form of points collections. PathsA single path per plot collection input . Related . | Blending | . Table of content . | Properties | . Important: Currently, the navigation data used by the node is the one returned by GetDefaultNavDataInstance(); hence it requires a navmesh to be built and loaded at the time of execution. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#plot-navmesh",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#plot-navmesh"
  },"780": {
    "doc": "Plot Navmesh",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Add Plot Points to Path | Include plot points positions as part of the output path. | . | Require Naviguable End Location | Ensures the picked goal is close enough to an naviguable location, otherwise doesn‚Äôt generate a path. | . | **Post-processing**| | ¬† | . | Fuse Distance | Fuse points in the sampled path that are too close together.*The navigation system may sometimes generate intricate paths which points that are very close to each other, which may or may not be suitable for your usecase. This settings gives you a bit of control over that.* | . | **Blending** | Controls how data is blended on the path points between the Seed and Goal point.*See Blending.* | . Remaining properties are Unreal‚Äô navigation system query specifics. Despite using the right API, they seem to be ignored for the most part, which is something I need to look into. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#properties"
  },"781": {
    "doc": "Plot Navmesh",
    "title": "Plot Navmesh",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html"
  },"782": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . The Navmesh node ‚Ä¶ . SeedsSeed points GoalsGoal points PathsA point collection per path found . Table of content . | Properties | . Important: Currently, the navigation data used by the node is the one returned by GetDefaultNavDataInstance(); hence it requires a navmesh to be built and loaded at the time of execution. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#navmesh-pathfinding"
  },"783": {
    "doc": "Navmesh Pathfinding",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Require Naviguable End Location | Ensures the picked goal is close enough to an naviguable location, otherwise doesn‚Äôt generate a path. | . | **Post-processing**| | ¬† | . | Fuse Distance | Fuse points in the sampled path that are too close together.*The navigation system may sometimes generate intricate paths which points that are very close to each other, which may or may not be suitable for your usecase. This settings gives you a bit of control over that.* | . | **Blending** | Controls how data is blended on the path points between the Seed and Goal point.*See Blending.* | . Remaining properties are Unreal‚Äô navigation system query specifics. Despite using the right API, they seem to be ignored for the most part, which is something I need to look into. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#properties"
  },"784": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html"
  },"785": {
    "doc": "Attribute Rolling",
    "title": "Attribute Rolling",
    "content": "Does a rolling operation over properties &amp; attributes along a path . The Attribute Rolling nodes allows to do ‚Äúrolling‚Äù operations, where the base value of each operation is the result of the previous one. PathsPaths which points will be bevelled Trigger ConditionsOptional filters used to determine whether a point will be bevelled or not PathsBevelled paths . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-attribute-rolling.html#attribute-rolling",
    "relUrl": "/doc-paths/paths-attribute-rolling.html#attribute-rolling"
  },"786": {
    "doc": "Attribute Rolling",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-attribute-rolling.html#properties",
    "relUrl": "/doc-paths/paths-attribute-rolling.html#properties"
  },"787": {
    "doc": "Attribute Rolling",
    "title": "Attribute Rolling",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-attribute-rolling.html",
    "relUrl": "/doc-paths/paths-attribute-rolling.html"
  },"788": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . The Fuse Collinear node removes points that are collinear, with control over thresholds. It can also optionally fuse points based on their proximity. PathsPaths which points will be bevelled Bevel ConditionsOptional filters used to determine whether a point will be bevelled or not ProfileCustom profile path PathsBevelled paths . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bevel.html#fuse-collinear",
    "relUrl": "/doc-paths/paths-bevel.html#fuse-collinear"
  },"789": {
    "doc": "Fuse Collinear",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bevel.html#properties",
    "relUrl": "/doc-paths/paths-bevel.html#properties"
  },"790": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bevel.html",
    "relUrl": "/doc-paths/paths-bevel.html"
  },"791": {
    "doc": "Blend",
    "title": "Blend",
    "content": "Blend individual points between from paths‚Äô start and end points. The Path Blend node‚Ä¶ . PathsPaths which points attributes &amp; properties will be blended PathsPaths with attributes &amp; properties blended . Table of content . | Properties | Modules . | Available Blending Modules | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#blend",
    "relUrl": "/doc-paths/paths-blend.html#blend"
  },"792": {
    "doc": "Blend",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | **Blending** | This property lets you select which kind of blending you want to apply to the input paths.*See [Available Blending Modules](#available-blending-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#properties",
    "relUrl": "/doc-paths/paths-blend.html#properties"
  },"793": {
    "doc": "Blend",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#modules",
    "relUrl": "/doc-paths/paths-blend.html#modules"
  },"794": {
    "doc": "Blend",
    "title": "Available Blending Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#available-blending-modules",
    "relUrl": "/doc-paths/paths-blend.html#available-blending-modules"
  },"795": {
    "doc": "Blend",
    "title": "‚ã∞ Interpolate",
    "content": "Interpolates values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#interpolate",
    "relUrl": "/doc-paths/paths-blend.html#interpolate"
  },"796": {
    "doc": "Blend",
    "title": "‚ã∞ Inherit First",
    "content": "Copy the first point‚Äô values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#inherit-first",
    "relUrl": "/doc-paths/paths-blend.html#inherit-first"
  },"797": {
    "doc": "Blend",
    "title": "‚ã∞ Inherit Last",
    "content": "Copy the last point‚Äô values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#inherit-last",
    "relUrl": "/doc-paths/paths-blend.html#inherit-last"
  },"798": {
    "doc": "Blend",
    "title": "Blend",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html",
    "relUrl": "/doc-paths/paths-blend.html"
  },"799": {
    "doc": "Path √ó Bounds Intersections",
    "title": "Path √ó Bounds Intersections",
    "content": "Find intersections with points bounds. The Path √ó Bounds Intersection node ‚Ä¶ . PathsPaths which points will be checked BoundsPoints which bounds will be used as intersection source PathsPaths with additional points &amp; informations . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bounds-intersections.html#path--bounds-intersections",
    "relUrl": "/doc-paths/paths-bounds-intersections.html#path--bounds-intersections"
  },"800": {
    "doc": "Path √ó Bounds Intersections",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bounds-intersections.html#properties",
    "relUrl": "/doc-paths/paths-bounds-intersections.html#properties"
  },"801": {
    "doc": "Path √ó Bounds Intersections",
    "title": "Path √ó Bounds Intersections",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-bounds-intersections.html",
    "relUrl": "/doc-paths/paths-bounds-intersections.html"
  },"802": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . The Fuse Collinear node removes points that are collinear, with control over thresholds. It can also optionally fuse points based on their proximity. PathsPaths which points will be checked for collinearity FiltersOptional filters used to determine whether a point can be removed or not PathsSimplified paths . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#fuse-collinear",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#fuse-collinear"
  },"803": {
    "doc": "Fuse Collinear",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Threshold | Threshold in degree under which the deviation is considered small enough to be collinear. | . | Fuse Distance | In addition to collinearity, this value allows to fuse points that are close enough. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#properties",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#properties"
  },"804": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html",
    "relUrl": "/doc-paths/paths-fuse-collinear.html"
  },"805": {
    "doc": "Offset",
    "title": "Offset",
    "content": "Offset path along a direction . The Offset node moves path points in a given direction . PathsPaths which points will be offset PathsOffset paths . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-offset.html#offset",
    "relUrl": "/doc-paths/paths-offset.html#offset"
  },"806": {
    "doc": "Offset",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-offset.html#properties",
    "relUrl": "/doc-paths/paths-offset.html#properties"
  },"807": {
    "doc": "Offset",
    "title": "Offset",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-offset.html",
    "relUrl": "/doc-paths/paths-offset.html"
  },"808": {
    "doc": "Path √ó Path Crossings",
    "title": "Path √ó Path Crossings",
    "content": "Find crossings within &amp; against paths. The Path √ó Path Crossings node ‚Ä¶ . PathsPaths which edges will be checked for crossings PathsPaths with additional points &amp; informations . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-paths-intersections.html#path--path-crossings",
    "relUrl": "/doc-paths/paths-paths-intersections.html#path--path-crossings"
  },"809": {
    "doc": "Path √ó Path Crossings",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-paths-intersections.html#properties",
    "relUrl": "/doc-paths/paths-paths-intersections.html#properties"
  },"810": {
    "doc": "Path √ó Path Crossings",
    "title": "Path √ó Path Crossings",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-paths-intersections.html",
    "relUrl": "/doc-paths/paths-paths-intersections.html"
  },"811": {
    "doc": "Solidify Path",
    "title": "Solidify Path",
    "content": "Solidify paths into ‚Äúedges‚Äù . The Solidify Path node ‚Ä¶ . PathsPaths to solidify PathsPaths with optionally less points &amp; more informations . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-solidify.html#solidify-path",
    "relUrl": "/doc-paths/paths-solidify.html#solidify-path"
  },"812": {
    "doc": "Solidify Path",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-solidify.html#properties",
    "relUrl": "/doc-paths/paths-solidify.html#properties"
  },"813": {
    "doc": "Solidify Path",
    "title": "Solidify Path",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-solidify.html",
    "relUrl": "/doc-paths/paths-solidify.html"
  },"814": {
    "doc": "Path Spline Mesh",
    "title": "Path Spline Mesh",
    "content": "Create SplineMesh components from paths . The Path Spline Mesh node ‚Ä¶ . PathsPaths to be used for SplineMesh None . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-spline-mesh.html#path-spline-mesh",
    "relUrl": "/doc-paths/paths-spline-mesh.html#path-spline-mesh"
  },"815": {
    "doc": "Path Spline Mesh",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-spline-mesh.html#properties",
    "relUrl": "/doc-paths/paths-spline-mesh.html#properties"
  },"816": {
    "doc": "Path Spline Mesh",
    "title": "Path Spline Mesh",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-spline-mesh.html",
    "relUrl": "/doc-paths/paths-spline-mesh.html"
  },"817": {
    "doc": "Paths to Clusters",
    "title": "Paths to Clusters",
    "content": "Convert paths to clusters. The Paths to Clusters node converts multiple input paths into edge clusters by fusing points but preserving edge relationships. PathsPaths which points will be checked for collinearity VtxEndpoints of the output Edges EdgesEdges associated with the output Vtxs . Related . | Working with Clusters | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-clusters.html#paths-to-clusters",
    "relUrl": "/doc-paths/paths-to-clusters.html#paths-to-clusters"
  },"818": {
    "doc": "Paths to Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Fuse Distance | This define the distance at this the points are considered to be identical. | . | **Graph Output Settings** | *See Working with Clusters.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-clusters.html#properties",
    "relUrl": "/doc-paths/paths-to-clusters.html#properties"
  },"819": {
    "doc": "Paths to Clusters",
    "title": "Paths to Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-clusters.html",
    "relUrl": "/doc-paths/paths-to-clusters.html"
  },"820": {
    "doc": "Write Paths Properties",
    "title": "Write Paths Properties",
    "content": "Compute extra path informations . Writes a variety of path statistics such as length, time, normals, centroids etc . PathsPaths to compute information from PathsPaths with extra information . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-properties.html#write-paths-properties",
    "relUrl": "/doc-paths/paths-write-properties.html#write-paths-properties"
  },"821": {
    "doc": "Write Paths Properties",
    "title": "Properties",
    "content": ". DOC TDB . | Property | Description | . | **Blending Settings** | When enabled, the edge will inherit properties and attributes from its Start and End point.It uses blending under the hood. | . | **Output** | | ¬† | . | **Edge Length** Attribute Name | When enabled, the length of the edge will be written to the specified attribute.*The length of an edge is the distance between its start and end point.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-properties.html#properties",
    "relUrl": "/doc-paths/paths-write-properties.html#properties"
  },"822": {
    "doc": "Write Paths Properties",
    "title": "Write Paths Properties",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-properties.html",
    "relUrl": "/doc-paths/paths-write-properties.html"
  },"823": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. A lot of the nodes in PCGEx allow you to select local values or attributes to further tweak and alter the way data is processed. These selectors inherit from native PCG implementation and support both point properties and attribute names as strings. In PCGEx, this is only supported when reading from attributes, not writing to them. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#attribute-selectors",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#attribute-selectors"
  },"824": {
    "doc": "Attribute Selectors",
    "title": "Component selection",
    "content": "PCG natively support suffixing properties &amp; attribute with selectors, such as .X, .Y, .Z; as shown in the debug view. This means you can safely use $Position.Z inside an attribute selector in order to select the Z value of the Position vector. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#component-selection",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#component-selection"
  },"825": {
    "doc": "Attribute Selectors",
    "title": "Extra Selectors",
    "content": "PCGEx expand a tiny bit on that and support additional properties, depending on the underlying data type: . Note that these extra selectors are not case sensitive, and can be used additively: $Transform.Backward.Length is a valid selectors. | Selector | Data | . | : **Vectors** :| | ¬† | . | | Uses the X component (Vector2D, Vector, Vector4) | . | | Uses the Y component (Vector2D, Vector, Vector4) | . | | Uses the Z component (Vector, Vector4), fallbacks to Y. | . | | Uses the W component (Vector4), fallbacks to Z | . | , , | Uses the length of the vector | . | : **Color** :| | ¬† | . | | Uses the Red value | . | | Uses the Green value | . | | Uses the Blue value | . | | Uses the Alpha value | . | : **Rotators** :| | ¬† | . | , , | Uses the Roll component | . | , , | Uses the Yaw component | . | , , | Uses the Pitch component | . | : **Quaternions &amp; Transforms** :| | ¬† | . | , | Uses the Forward direction vector | . | , | Uses the Backward direction vector | . | | Uses the Right direction vector | . | | Uses the Roll direction vector | . | , | Uses the Up direction vector | . | , | Uses the Down direction vector | . | : **Transforms** :| | ¬† | . | , | Uses the Position component (Vector) | . | , , | Uses the Rotation component (Quaternion) | . | | Uses the Scale component (Vector) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#extra-selectors",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#extra-selectors"
  },"826": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html"
  },"827": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. Almost every node in the PCGEx inherit from the same point processor, and as such they have some shared capabilities. PCGEx has a focus on performance and multithreading ‚Äì very few nodes are actively computing anything on the main thread, and instead the bulk of the tasks is handled asynchronously; and parallelized whenever possible. This helps keeping the editor relatively smooth when performing heavy tasks. Common Tweaks . | Performance . | Do Async Processing | Chunk Size | Cache Result | Flatten Output | . | Input Pruning &amp; De-duping . | De-duplication | Pruning | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#pcgex-nodes",
    "relUrl": "/doc-general/pcgex-node.html#pcgex-nodes"
  },"828": {
    "doc": "PCGEx Nodes",
    "title": "Performance",
    "content": ". Side note that most PCGEx nodes are greedy, and contrary to vanilla nodes, they process all inputs in parallel instead of one after another. Most of the time it‚Äôs a non-issue, but may be noticeable if you have a lot of very large datasets plugged into the same node. Do Async Processing . Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. This is a very legacy option, best leave it to true. Chunk Size . The chunk size usually represents the number of point a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you‚Äôre just hogging thread ressources. Ultimately, it depends on your specific setup. A value of -1 fallbacks to that specific‚Äô node default value under the hood. Unreal PCG plugin recommend a minimum batch size of 256, which is the default value I‚Äôm using for most of the nodes. Heavier operations can go as low as 32. Cache Result . Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it‚Äôs a compile-time choice, not an editor-time one. I exposed the ability to cache on-demand at the price of some harmless asserts, because once you‚Äôre done iterating on certain settings, it‚Äôs worth caching the results. Be aware that the cache is easily corrupted, and sometime leads to missing points or data; it‚Äôs still a small price to pay when you‚Äôre working iteratively with hundreds of thousands points. Flatten Output . Flatten the output of this node. On 5.3 this is an absurdly expensive operation, it‚Äôs better in 5.4 and should be even faster in 5.5. Flattening ensure all inherited attribute values are copied to the output, and metadata parenting/inheritance is forfeited in the process. This is a required step to ensure attribute values are properly saved to PCG Data Assets! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#performance",
    "relUrl": "/doc-general/pcgex-node.html#performance"
  },"829": {
    "doc": "PCGEx Nodes",
    "title": "Input Pruning &amp; De-duping",
    "content": "De-duplication . Datasets are de-duplicated by design in PCGEx ‚Äì this means that if you plug the exact same data (as in same memory pointer) it will be only processed once ‚Äì even if it has different tags. Pruning . Datasets that are empty and contains no points will be ignored, and won‚Äôt be forwarded to the ouput pins. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#input-pruning--de-duping",
    "relUrl": "/doc-general/pcgex-node.html#input-pruning--de-duping"
  },"830": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html",
    "relUrl": "/doc-general/pcgex-node.html"
  },"831": {
    "doc": "üùì Goal from Attribute",
    "title": "üùì Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. The Goal from Attribute picker ‚Ä¶ . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute"
  },"832": {
    "doc": "üùì Goal from Attribute",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Goal Count | Either a Single Goal or Multiple Goals | . | Attribute | If Single Goal is specified, lets you specify a property or attribute which value will be used as an index within the input goals. | . | Attributes | If Multiple Goal is specified, lets you specify a list of property or attribute which values will be used as an index within the input goals. | . | Index Safety | Failsafe method if the picked Goal index is out of bounds.*See [Index Safety](#index-safety)* | . When using Multiple Goal, each seed will attempt to create one connection per entry in the array. The attribute is fetched on the Seed input. Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (wrapped around) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html#properties"
  },"833": {
    "doc": "üùì Goal from Attribute",
    "title": "üùì Goal from Attribute",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html"
  },"834": {
    "doc": "üùì Default",
    "title": "üùì Default",
    "content": "Match seeds to goals at the same index. The Default picker ‚Ä¶ . Table of content . | Properties | . The default goal picker attempts to match input Seeds and Goals in a 1:1 fashion. Seed index 0 will be matched to goal index 0, and so on. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html#default",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html#default"
  },"835": {
    "doc": "üùì Default",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Index Safety | Failsafe method if there are more Seeds than there are Goals.Note that extra Goals are simply ignored.*See [Index Safety](#index-safety)* | . Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (wrapped around) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html#properties"
  },"836": {
    "doc": "üùì Default",
    "title": "üùì Default",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html"
  },"837": {
    "doc": "üùì Random",
    "title": "üùì Random",
    "content": "Match seeds to goals at a random index. The Random picker ‚Ä¶ . Table of content . | Properties . | Goal Count . | Single | Multiple Fixed | Multiple Random | . | . | . The random goal picker match each Seed with one or multiple Goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#random",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#random"
  },"838": {
    "doc": "üùì Random",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Goal Count | How many random goals each seed should connect to.*See [Index Safety](#index-safety)* | . | Num Goals | When specifying multiple goals, this is the maximum number of goals to connect each seeds to. | . | Index Safety | Failsafe method if the picked Goal index is out of bounds.*See [Index Safety](#index-safety)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#properties"
  },"839": {
    "doc": "üùì Random",
    "title": "Goal Count",
    "content": "There are three different methods available: . | Single | Random | Fixed | . Single . Single will, well, connect to a single random goal. Multiple Fixed . Random will connect to a fixed number of random goals, specified in Num Goals. Multiple Random . Random will connect to a random number of random goals. The number of connection will be between 0 and Num Goals . Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (wrapped around) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#goal-count",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#goal-count"
  },"840": {
    "doc": "üùì Random",
    "title": "üùì Random",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html"
  },"841": {
    "doc": "üùÜ Anisotropic",
    "title": "üùÜ Anisotropic",
    "content": "PCGEx | Probe : Anisotropic Find connections in 16 directions . The Anisotropic probe ‚Ä¶ . ProbeA single probe, to be used with the 'Connect Points' node . Related . | Connect Points | . Table of content . | Properties | . An anisotropic probe is a preset to find connection in 16 different directions over the X &amp; Y axis. Anisotropic pathfinding is a popular approach to finding high-level plots, it made sense to have an hardcoded version as opposed to hand crafting 16 directional probes to the same effect . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-anisotropic.html#anisotropic",
    "relUrl": "/doc-clusters/connect-points/probe-anisotropic.html#anisotropic"
  },"842": {
    "doc": "üùÜ Anisotropic",
    "title": "Properties",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Transform Direction | If enabled, the direction of the probe will be adjusted by the current probing point‚Äô transform.*If disabled, the direction is in world space.* | . | : **Search Radius** : | ¬† | . | Search Radius Source | The type of value used for this probe‚Äô search radius; either a Constant value or fetched from anAttribute | . | Search Radius Constant | Fixed radius of the probe. | . | Search Radius Attribute | Per-point attribute value radius of the probe.*Dynamic radiuses can be super expensive if they are different for each probe: search will use the greatest radius to sample to octree for this point.* | . Contrary to üùÜ Direction, the anisotropic probe will always favor alignment over distance. Because of that, it often yields more ‚Äòcanon‚Äô results with grid-aligned points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-anisotropic.html#properties",
    "relUrl": "/doc-clusters/connect-points/probe-anisotropic.html#properties"
  },"843": {
    "doc": "üùÜ Anisotropic",
    "title": "üùÜ Anisotropic",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-anisotropic.html",
    "relUrl": "/doc-clusters/connect-points/probe-anisotropic.html"
  },"844": {
    "doc": "üùÜ Closest",
    "title": "üùÜ Closest",
    "content": "PCGEx | Probe : Closests Connects to the closest point within a given radius . The Closest probe ‚Ä¶ . ProbeA single probe, to be used with the 'Connect Points' node . Related . | Connect Points | . Table of content . | Properties | . This probes creates unique connections to the closest points within a radius, up to a maximum number. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-closest.html#closest",
    "relUrl": "/doc-clusters/connect-points/probe-closest.html#closest"
  },"845": {
    "doc": "üùÜ Closest",
    "title": "Properties",
    "content": "| Property | Description | . | : **Max Connections** : | ¬† | . | Max Connection Source | If enabled, the direction of the probe will be adjusted by the current probing point‚Äô transform.*If disabled, the direction is in world space.* | . | Max Connection Constant | Fixed maximum connections for every point. | . | Max Connection Attribute | Per-point attribute value maximum. | . | : **Search Radius** : | ¬† | . | Search Radius Source | The type of value used for this probe‚Äô search radius; either a Constant value or fetched from anAttribute | . | Search Radius Constant | Fixed radius of the probe. | . | Search Radius Attribute | Per-point attribute value radius of the probe.*Dynamic radiuses can be super expensive if they are different for each probe: search will use the greatest radius to sample to octree for this point.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-closest.html#properties",
    "relUrl": "/doc-clusters/connect-points/probe-closest.html#properties"
  },"846": {
    "doc": "üùÜ Closest",
    "title": "üùÜ Closest",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-closest.html",
    "relUrl": "/doc-clusters/connect-points/probe-closest.html"
  },"847": {
    "doc": "üùÜ Direction",
    "title": "üùÜ Direction",
    "content": "PCGEx | Probe : Direction Connects to the closest point in a given direction . The Direction probe ‚Ä¶ . ProbeA single probe, to be used with the 'Connect Points' node . Related . | Connect Points | . Table of content . | Properties . | Favor distance vs alignment | Angles | . | . This probes creates a single connections to another point in a specific direction, within an angular tolerance. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-direction.html#direction",
    "relUrl": "/doc-clusters/connect-points/probe-direction.html#direction"
  },"848": {
    "doc": "üùÜ Direction",
    "title": "Properties",
    "content": "| Property | Description | . | : **Angle settings** : | ¬† | . | Use Component Wise Angle | If enabled, the angle is checks Yaw, roll and pitch individually, as opposed to a cone.*For obvious reasons, using component-wise check is more expensive.* | . | Max Angle | Fixed maximum angle. | . | Max Angles | Per-component maximum angle values. | . | : **Direction settings** : | ¬† | . | Direction Source | The type of value used for this probe‚Äô direction; either a Constant value or fetched from anAttribute | . | Direction Constant | Constant direction, in world space. | . | Direction Attribute | Per-point attribute value direction of the probe, in world space. | . | Transform Direction | If enabled, the probe direction will be transformed by the probed point‚Äô transform.*This is effectively turning world space direction to point-local space ones.* | . | : **Other Settings** : | ¬† | . | Favor | Which metric should be favored when checking direction.*See more below* | . | Do Chained Processing | *Ignore this, it‚Äôs part of a greater, very situational optimization trick that needs its own doc.* | . | : **Search Radius** : | ¬† | . | Search Radius Source | The type of value used for this probe‚Äô search radius; either a Constant value or fetched from anAttribute | . | Search Radius Constant | Fixed radius of the probe. | . | Search Radius Attribute | Per-point attribute value radius of the probe.*Dynamic radiuses can be super expensive if they are different for each probe: search will use the greatest radius to sample to octree for this point.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-direction.html#properties",
    "relUrl": "/doc-clusters/connect-points/probe-direction.html#properties"
  },"849": {
    "doc": "üùÜ Direction",
    "title": "Favor distance vs alignment",
    "content": "| : Favor | | ¬† | . | | **Closest Position**Favors closer points over better angular alignment. | . | | **Best Alignment **Favors better aligned points over closer ones. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-direction.html#favor-distance-vs-alignment",
    "relUrl": "/doc-clusters/connect-points/probe-direction.html#favor-distance-vs-alignment"
  },"850": {
    "doc": "üùÜ Direction",
    "title": "Angles",
    "content": ". Angles are checked using a Dot Product operation, meaning the angle in degree is unsigned, and goes both sides of the direction. This means you may find youself wanting to use halved metrics ‚Äì i.e 45deg to get an absolute 90deg cone. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-direction.html#angles",
    "relUrl": "/doc-clusters/connect-points/probe-direction.html#angles"
  },"851": {
    "doc": "üùÜ Direction",
    "title": "üùÜ Direction",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-direction.html",
    "relUrl": "/doc-clusters/connect-points/probe-direction.html"
  },"852": {
    "doc": "üùÜ Index",
    "title": "üùÜ Index",
    "content": "PCGEx | Probe : Index Connects to a point at a given index . The Index probe ‚Ä¶ . ProbeA single probe, to be used with the 'Connect Points' node . Related . | Connect Points | . Table of content . | Properties . | Mode | . | . This probes creates a single connections to another point at a given index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-index.html#index",
    "relUrl": "/doc-clusters/connect-points/probe-index.html#index"
  },"853": {
    "doc": "üùÜ Index",
    "title": "Properties",
    "content": "| Property | Description | . | Mode | How the node is to interpret the target index value. | . | Index Safety | *Index safety is a recurring mechanism in PCGEx, see below for more infos.* | . | : **Target Index Settings** : | ¬† | . | Target Index | The type of value used for this probe‚Äô index source; either a Constant value or fetched from anAttribute | . | Target Constant | Constant index value; or constant offset depending on the selected Mode. | . | Target Attribute | Per-point attribute value for the index/offset. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-index.html#properties",
    "relUrl": "/doc-clusters/connect-points/probe-index.html#properties"
  },"854": {
    "doc": "üùÜ Index",
    "title": "Mode",
    "content": "| : Favor | | ¬† | . | Target | Use the target index value as a raw index to connect to. | . | One-way Offset | Use the target index value as an offset to the currently probed point‚Äô index. | . | Two-way Offset | Use the target index value as an offset to the currently probed point‚Äô index; and creates a second connection but this time using the **target index value multiplied by -1.** | . Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (wrapped around) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-index.html#mode",
    "relUrl": "/doc-clusters/connect-points/probe-index.html#mode"
  },"855": {
    "doc": "üùÜ Index",
    "title": "üùÜ Index",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/connect-points/probe-index.html",
    "relUrl": "/doc-clusters/connect-points/probe-index.html"
  },"856": {
    "doc": "üùî Keep Highest Score",
    "title": "üùî Keep Highest Score",
    "content": "Keeps edges with the highest heuristic scores . Related . | Refine | üùî Keep Lowest Score | . Table of content . | Available Heuristics Modules | . This refinement keeps a single connected edge for each point for each point: the one with the highest score based on connected üù∞ Heuristics. Note that the remaining Edge can be the same for multiple, different Vtx. Not all heuristics can be yield usable scores outside of a search context. For example, üù∞ Azimuth and üù∞ Inertia require clear seed/goals and search history to assign a given score. Such heuristics will yield a default score based on their own settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#keep-highest-score",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#keep-highest-score"
  },"857": {
    "doc": "üùî Keep Highest Score",
    "title": "Available Heuristics Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#available-heuristics-modules",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#available-heuristics-modules"
  },"858": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#heuristic-attribute",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#heuristic-attribute"
  },"859": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#shortest-distance",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#shortest-distance"
  },"860": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#inertia",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#inertia"
  },"861": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#turning",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#turning"
  },"862": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#steepness",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#steepness"
  },"863": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#azimuth",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#azimuth"
  },"864": {
    "doc": "üùî Keep Highest Score",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html#least-nodes",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html#least-nodes"
  },"865": {
    "doc": "üùî Keep Highest Score",
    "title": "üùî Keep Highest Score",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-highest-score.html",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-highest-score.html"
  },"866": {
    "doc": "üùî Keep Longest",
    "title": "üùî Keep Longest",
    "content": "Keeps the longest edge of each node . Related . | Refine | üùî Keep Shortest | . Table of content . This refinement keeps a single connected edge for each point: the one with the longest length. Note that the remaining Edge can be the same for multiple, different Vtx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-longest.html#keep-longest",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-longest.html#keep-longest"
  },"867": {
    "doc": "üùî Keep Longest",
    "title": "üùî Keep Longest",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-longest.html",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-longest.html"
  },"868": {
    "doc": "üùî Keep Lowest Score",
    "title": "üùî Keep Lowest Score",
    "content": "Keeps edges with the lowest heuristic scores . Related . | Refine | üùî Keep Highest Score | . Table of content . | Available Heuristics Modules | . This refinement keeps a single connected edge for each point: the one with the lowest score based on connected üù∞ Heuristics. Note that the remaining Edge can be the same for multiple, different Vtx. Not all heuristics can be yield usable scores outside of a search context. For example, üù∞ Azimuth and üù∞ Inertia require clear seed/goals and search history to assign a given score. Such heuristics will yield a default score based on their own settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#keep-lowest-score",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#keep-lowest-score"
  },"869": {
    "doc": "üùî Keep Lowest Score",
    "title": "Available Heuristics Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#available-heuristics-modules",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#available-heuristics-modules"
  },"870": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#heuristic-attribute",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#heuristic-attribute"
  },"871": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#shortest-distance",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#shortest-distance"
  },"872": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#inertia",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#inertia"
  },"873": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#turning",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#turning"
  },"874": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#steepness",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#steepness"
  },"875": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#azimuth",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#azimuth"
  },"876": {
    "doc": "üùî Keep Lowest Score",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html#least-nodes",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html#least-nodes"
  },"877": {
    "doc": "üùî Keep Lowest Score",
    "title": "üùî Keep Lowest Score",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-lowest-score.html",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-lowest-score.html"
  },"878": {
    "doc": "üùî Keep Shortest",
    "title": "üùî Keep Shortest",
    "content": "Keeps the shortest edge of each node . Related . | Refine | üùî Keep Longest | . Table of content . This refinement keeps a single connected edge for each point: the one with the shortest length. Note that the remaining Edge can be the same for multiple, different Vtx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-shortest.html#keep-shortest",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-shortest.html#keep-shortest"
  },"879": {
    "doc": "üùî Keep Shortest",
    "title": "üùî Keep Shortest",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-keep-shortest.html",
    "relUrl": "/doc-clusters/edges-refine/refine-keep-shortest.html"
  },"880": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üùî Minimum Spanning Tree",
    "content": "Implementation of Prim‚Äôs Minimum Spanning Tree algorithm. Related . | Refine | . Table of content . | Available Heuristics Modules | . This module offers a highly customizable implementation of Prim‚Äôs algorithm to find the minimum spanning tree of individual clusters. By design, the output is guaranteed to be sanitized (e.g, each cluster will retains its existing connectivity properties). It relies on user-defined üù∞ Heuristics in order to build the tree, providing very high level of control. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#minimum-spanning-tree",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#minimum-spanning-tree"
  },"881": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "Available Heuristics Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#available-heuristics-modules",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#available-heuristics-modules"
  },"882": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#heuristic-attribute",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#heuristic-attribute"
  },"883": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#shortest-distance",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#shortest-distance"
  },"884": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#inertia",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#inertia"
  },"885": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#turning",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#turning"
  },"886": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#steepness",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#steepness"
  },"887": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#azimuth",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#azimuth"
  },"888": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html#least-nodes",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html#least-nodes"
  },"889": {
    "doc": "üùî Minimum Spanning Tree",
    "title": "üùî Minimum Spanning Tree",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-prim-mst.html",
    "relUrl": "/doc-clusters/edges-refine/refine-prim-mst.html"
  },"890": {
    "doc": "üùî Remove Highest Score",
    "title": "üùî Remove Highest Score",
    "content": "Removes edges with the highest heuristic scores . Related . | Refine | üùî Remove Lowest Score | . Table of content . | Available Heuristics Modules | . This refinement removes a single connected edge for each point for each point: the one with the highest score based on connected üù∞ Heuristics. Note that the removed Edge can be the same for multiple, different Vtx. Not all heuristics can be yield usable scores outside of a search context. For example, üù∞ Azimuth and üù∞ Inertia require clear seed/goals and search history to assign a given score. Such heuristics will yield a default score based on their own settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#remove-highest-score",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#remove-highest-score"
  },"891": {
    "doc": "üùî Remove Highest Score",
    "title": "Available Heuristics Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#available-heuristics-modules",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#available-heuristics-modules"
  },"892": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#heuristic-attribute",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#heuristic-attribute"
  },"893": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#shortest-distance",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#shortest-distance"
  },"894": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#inertia",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#inertia"
  },"895": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#turning",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#turning"
  },"896": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#steepness",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#steepness"
  },"897": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#azimuth",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#azimuth"
  },"898": {
    "doc": "üùî Remove Highest Score",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html#least-nodes",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html#least-nodes"
  },"899": {
    "doc": "üùî Remove Highest Score",
    "title": "üùî Remove Highest Score",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-highest-score.html",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-highest-score.html"
  },"900": {
    "doc": "üùî Remove Longest",
    "title": "üùî Remove Longest",
    "content": "Removes the longest edge of each node . Related . | Refine | üùî Remove Shortest | . Table of content . This refinement removes a single connected edge for each point: the one with the longest length. Note that the remaining Edge can be the same for multiple, different Vtx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-longest.html#remove-longest",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-longest.html#remove-longest"
  },"901": {
    "doc": "üùî Remove Longest",
    "title": "üùî Remove Longest",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-longest.html",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-longest.html"
  },"902": {
    "doc": "üùî Remove Lowest Score",
    "title": "üùî Remove Lowest Score",
    "content": "Removes edges with the lowest heuristic scores . Related . | Refine | üùî Remove Highest Score | . Table of content . | Available Heuristics Modules | . This refinement removes a single connected edge for each point for each point: the one with the lowest score based on connected üù∞ Heuristics. Note that the removed Edge can be the same for multiple, different Vtx. Not all heuristics can be yield usable scores outside of a search context. For example, üù∞ Azimuth and üù∞ Inertia require clear seed/goals and search history to assign a given score. Such heuristics will yield a default score based on their own settings. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#remove-lowest-score",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#remove-lowest-score"
  },"903": {
    "doc": "üùî Remove Lowest Score",
    "title": "Available Heuristics Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#available-heuristics-modules",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#available-heuristics-modules"
  },"904": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Heuristic Attribute",
    "content": "Attribute-driven heuristics . The Heuristic Attribute heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#heuristic-attribute",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#heuristic-attribute"
  },"905": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Shortest Distance",
    "content": "Subtitle . The Shortest Distance heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#shortest-distance",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#shortest-distance"
  },"906": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Inertia",
    "content": "Subtitle . The Inertia heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#inertia",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#inertia"
  },"907": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Turning",
    "content": "Subtitle . The Turning heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#turning",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#turning"
  },"908": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Steepness",
    "content": "Favor flat paths . The Steepness heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#steepness",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#steepness"
  },"909": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Azimuth",
    "content": "Subtitle . The Azimuth heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#azimuth",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#azimuth"
  },"910": {
    "doc": "üùî Remove Lowest Score",
    "title": "üù∞ Least Nodes",
    "content": "Subtitle . The Least Nodes heuristic node ‚Ä¶ . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html#least-nodes",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html#least-nodes"
  },"911": {
    "doc": "üùî Remove Lowest Score",
    "title": "üùî Remove Lowest Score",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-lowest-score.html",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-lowest-score.html"
  },"912": {
    "doc": "üùî Remove Overlap",
    "title": "üùî Remove Overlap",
    "content": "Removes overlapping edges . Related . | Refine | . Table of content . | Properties | . This test each edge for possible overlap/intersection with other edges in the same cluster. By design, the output is guaranteed to be sanitized (e.g, each cluster will retains its existing connectivity properties). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-overlap.html#remove-overlap",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-overlap.html#remove-overlap"
  },"913": {
    "doc": "üùî Remove Overlap",
    "title": "Properties",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Keep | When checking two edges, defines which one will be preserved, and which one will be removed. | . | Tolerance | The distance at which two edges are considered to be overlapping.*The higher the value, the more aggressive the pruning.* | . | : **Limits** : | ¬† | . | Min Angle | If enabled, will only check overlap if the two edges have **at least** the specified angle between each other. | . | Max Angle | If enabled, will only check overlap if the two edges hace **at most** the specified angle between each other. | . This refinement can be rather expensive depending on the topology of the clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-overlap.html#properties",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-overlap.html#properties"
  },"914": {
    "doc": "üùî Remove Overlap",
    "title": "üùî Remove Overlap",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-overlap.html",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-overlap.html"
  },"915": {
    "doc": "üùî Remove Shortest",
    "title": "üùî Remove Shortest",
    "content": "Removes the shortest edge of each node . Related . | Refine | üùî Keep Longest | . Table of content . This refinement removes a single connected edge for each point: the one with the shortest length. Note that the remaining Edge can be the same for multiple, different Vtx. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-shortest.html#remove-shortest",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-shortest.html#remove-shortest"
  },"916": {
    "doc": "üùî Remove Shortest",
    "title": "üùî Remove Shortest",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-refine/refine-remove-shortest.html",
    "relUrl": "/doc-clusters/edges-refine/refine-remove-shortest.html"
  },"917": {
    "doc": "‚òç Force Directed",
    "title": "‚òç Force Directed",
    "content": "Force-directed relaxation . The Force-directed relaxation ‚Ä¶ . Related . | Relax | . Table of content . | Properties | . Force-directed relaxation simulates physical forces on connected nodes, adjusting their positions iteratively to minimize energy, balancing attractive and repulsive forces to reveal an optimal topology. See Force-directed graph drawing on Wikipedia . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/relax-force-directed.html#force-directed",
    "relUrl": "/doc-clusters/edges-relax/relax-force-directed.html#force-directed"
  },"918": {
    "doc": "‚òç Force Directed",
    "title": "Properties",
    "content": "| Property | Description | . | **Settings**| | ¬† | . | Spring Constant | Controls the \"springness\" of the edges.*Keep this value very small* | . | Electrostatic | Controls the \"attractiveness\" of the vtx.*Keep this value very large* | . The default settings are not really meant to be changed ‚Äì editing them quickly leads to artifacts and anomalies. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/relax-force-directed.html#properties",
    "relUrl": "/doc-clusters/edges-relax/relax-force-directed.html#properties"
  },"919": {
    "doc": "‚òç Force Directed",
    "title": "‚òç Force Directed",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/relax-force-directed.html",
    "relUrl": "/doc-clusters/edges-relax/relax-force-directed.html"
  },"920": {
    "doc": "‚òç Laplacian",
    "title": "‚òç Laplacian",
    "content": "Laplacian / Poisson relaxation . The Laplacian relaxation ‚Ä¶ . Related . | Relax | . Table of content . Laplacian relaxation adjusts node positions iteratively based on the average positions of their neighbors, smoothing the layout by reducing irregularities and creating a more uniform structure. See Laplacian Relaxation on Wikipedia . This relaxation has no exposed properties. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/relax-laplacian.html#laplacian",
    "relUrl": "/doc-clusters/edges-relax/relax-laplacian.html#laplacian"
  },"921": {
    "doc": "‚òç Laplacian",
    "title": "‚òç Laplacian",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/edges-relax/relax-laplacian.html",
    "relUrl": "/doc-clusters/edges-relax/relax-laplacian.html"
  },"922": {
    "doc": "Sample Nearest Bounds",
    "title": "Sample Nearest Bounds",
    "content": "Sample within bounds . The Sample Nearest Bounds node explore points within input bounds. InPoints that will sample data from targets BoundsPoint bounds to read data from OutIn with extra attributes and properties . Table of content . | Properties . | Sampling Methods | Weighting | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#sample-nearest-bounds",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#sample-nearest-bounds"
  },"923": {
    "doc": "Sample Nearest Bounds",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Sampling**| | ¬† | . | Sample Method | Selects the sampling method. See [Sampling Methods](#sampling-methods). | . | Range Min | Minimum sampling range. | . | Range Max | Maximum sampling range.**Use 0 to sample all targets.** | . Points that are not within range are ignored. If no point is found within the specified range, the sampling for that point will be marked as Usuccessful. | **Weighting**| | ¬† | . | Weight Method | Selects the method used to compute the weight of each target.*See [Weighting](#weighting)*. | . | Weight Over Distance | Curve used to sample the final weight of each target. | . | **Outputs**| | ¬† | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false). | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the point at the sampled location, as an FVector. | . | Normal Source | Which direction to use as an Up vector for the Normal cross-product maths. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Signed Distance** Attribute Name | Writes the signed distance between the point and the sampled location, as a double. | . | Signed Distance Axis | Which axis to use to determine whether the distance is positive or negative (toward/away).*Currently based on point Transform, this will likely change in the future to an attribute selector.* | . | **Angle** Attribute Name | Writes the angle between the point and the sampled location, as a double. | . | Angle Axis | Which axis to use to determine the angle sign/range (toward/away) | . | Angle Range | The output range for the Angle value. | . Based on the selected Sample method, the output values are a weighted average of all the sampled target. See Weighting. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#properties"
  },"924": {
    "doc": "Sample Nearest Bounds",
    "title": "Sampling Methods",
    "content": "| Method | Description | . | Within Range | Samples all points within the specified range. | . | Closest Target | Sample the single closest target within the specified range. | . | Farthest Target | Sample the single farthest target within the specified range. | . | Target Extents | Reverse the sampling mechanisms so points will sample the targets which Extents contains them.**At the time of writing, will only check targets which position in world space is within range.***It is recommend to use a max range of 0 with this method.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#sampling-methods",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#sampling-methods"
  },"925": {
    "doc": "Sample Nearest Bounds",
    "title": "Performance Settings",
    "content": "| Performance Settings | ¬† | . | Do Async Processing | Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. It‚Äôs usually a bad idea performance-wise. &gt; Note that synchronous execution still processes data in chunks, it just does it with guaranteed order, as opposed to parallel processing. | . | Chunk Size | The chunk size represents the number of point/operations a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you‚Äôre just hogging thread ressources. Ultimately, it depends on your specific setup.A value of -1 fallbacks to that specific‚Äô node default value under the hood, which is usually a generic sweet spot; ranging from 64 to 4096 depending on the node. | . | Cache Result | Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it‚Äôs a compile-time choice, not an editor-time one (at least in 5.3). I exposed the ability to cache on-demand at the price of some harmless asserts, because once you‚Äôre done iterating on certain settings, it‚Äôs worth caching the results. | . | Flatten Output | When enabled, all of the node output attributes will be flattened; primarily meaning that their metadata (attributes) are not inheriting parents, and the node can be safely saved to a data asset. It‚Äôs a rather costly operation, so make sure you need it, and for the sake of your RAM, don‚Äôt enable it otherwise. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#performance-settings",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#performance-settings"
  },"926": {
    "doc": "Sample Nearest Bounds",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it‚Äôs very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#weighting"
  },"927": {
    "doc": "Sample Nearest Bounds",
    "title": "Weighting",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values ‚Äì but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html#weighting"
  },"928": {
    "doc": "Sample Nearest Bounds",
    "title": "Sample Nearest Bounds",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-bounds.html",
    "relUrl": "/doc-sampling/sampling-nearest-bounds.html"
  },"929": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . The Sample Nearest Points node explore points within a range using various methods. Define sampling range, weight targets, and obtain useful attributes. InPoints that will sample data from targets TargetsTarget points to read data from OutIn with extra attributes and properties . Table of content . | Properties . | Sampling Methods | Weighting | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#sample-nearest-points",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#sample-nearest-points"
  },"930": {
    "doc": "Sample Nearest Points",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Sampling**| | ¬† | . | Sample Method | Selects the sampling method. See [Sampling Methods](#sampling-methods). | . | Range Min | Minimum sampling range. | . | Range Max | Maximum sampling range.**Use 0 to sample all targets.** | . Points that are not within range are ignored. If no point is found within the specified range, the sampling for that point will be marked as Usuccessful. | **Weighting**| | ¬† | . | Weight Method | Selects the method used to compute the weight of each target.*See [Weighting](#weighting)*. | . | Weight Over Distance | Curve used to sample the final weight of each target. | . | **Outputs**| | ¬† | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false). | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the point at the sampled location, as an FVector. | . | Normal Source | Which direction to use as an Up vector for the Normal cross-product maths. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Signed Distance** Attribute Name | Writes the signed distance between the point and the sampled location, as a double. | . | Signed Distance Axis | Which axis to use to determine whether the distance is positive or negative (toward/away).*Currently based on point Transform, this will likely change in the future to an attribute selector.* | . | **Angle** Attribute Name | Writes the angle between the point and the sampled location, as a double. | . | Angle Axis | Which axis to use to determine the angle sign/range (toward/away) | . | Angle Range | The output range for the Angle value. | . Based on the selected Sample method, the output values are a weighted average of all the sampled target. See Weighting. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#properties"
  },"931": {
    "doc": "Sample Nearest Points",
    "title": "Sampling Methods",
    "content": "| Method | Description | . | Within Range | Samples all points within the specified range. | . | Closest Target | Sample the single closest target within the specified range. | . | Farthest Target | Sample the single farthest target within the specified range. | . | Target Extents | Reverse the sampling mechanisms so points will sample the targets which Extents contains them.**At the time of writing, will only check targets which position in world space is within range.***It is recommend to use a max range of 0 with this method.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#sampling-methods",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#sampling-methods"
  },"932": {
    "doc": "Sample Nearest Points",
    "title": "Performance Settings",
    "content": "| Performance Settings | ¬† | . | Do Async Processing | Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. It‚Äôs usually a bad idea performance-wise. &gt; Note that synchronous execution still processes data in chunks, it just does it with guaranteed order, as opposed to parallel processing. | . | Chunk Size | The chunk size represents the number of point/operations a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you‚Äôre just hogging thread ressources. Ultimately, it depends on your specific setup.A value of -1 fallbacks to that specific‚Äô node default value under the hood, which is usually a generic sweet spot; ranging from 64 to 4096 depending on the node. | . | Cache Result | Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it‚Äôs a compile-time choice, not an editor-time one (at least in 5.3). I exposed the ability to cache on-demand at the price of some harmless asserts, because once you‚Äôre done iterating on certain settings, it‚Äôs worth caching the results. | . | Flatten Output | When enabled, all of the node output attributes will be flattened; primarily meaning that their metadata (attributes) are not inheriting parents, and the node can be safely saved to a data asset. It‚Äôs a rather costly operation, so make sure you need it, and for the sake of your RAM, don‚Äôt enable it otherwise. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#performance-settings",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#performance-settings"
  },"933": {
    "doc": "Sample Nearest Points",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it‚Äôs very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#weighting"
  },"934": {
    "doc": "Sample Nearest Points",
    "title": "Weighting",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values ‚Äì but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#weighting"
  },"935": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html",
    "relUrl": "/doc-sampling/sampling-nearest-point.html"
  },"936": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . The Sample Nearest Polyline node explore polylines within a range using various methods. Define sampling range, weight targets, and obtain useful attributes. InPoints that will sample data from targets TargetsTarget splines to read data from OutIn with extra attributes and properties . Table of content . | Properties . | Sampling Methods | Weighting | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#sample-nearest-polyline",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#sample-nearest-polyline"
  },"937": {
    "doc": "Sample Nearest Polyline",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. Each polyline will yield a single sample point: the closest point on the closest segment, within the specified range. | Property | Description | . | **Sampling**| | ¬† | . | Sample Method | Selects the sampling method. See [Sampling Methods](#sampling-methods). | . | Range Min | Minimum sampling range. | . | Range Max | Maximum sampling range.**Use 0 to sample all segments.** | . Segments that are not within range are ignored. If no polyline segment is found within the specified range, the sampling for that point will be marked as Usuccessful. | **Weighting**| | ¬† | . | Weight Method | Selects the method used to compute the weight of each target.*See [Weighting](#weighting)*. | . | Weight Over Distance | Curve used to sample the final weight of each target. | . | **Outputs**| | ¬† | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false). | . | **Location** Attribute Name | Writes the location sampled on the polyline, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the location sampled on the polyline, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the point at the location sampled on the polyline, as an FVector. | . | Normal Source | Which direction to use as an Up vector for the Normal cross-product maths. | . | **Distance** Attribute Name | Writes the distance between the point and the location sampled on the polyline, as a double. | . | **Signed Distance** Attribute Name | Writes the signed distance between the point and the location sampled on the polyline, as a double. | . | Signed Distance Axis | Which axis to use to determine whether the distance is positive or negative (toward/away).*Currently based on point Transform, this will likely change in the future to an attribute selector.* | . | **Angle** Attribute Name | Writes the angle between the point and the transform sampled on the polyline, as a double. | . | Angle Axis | Which axis to use to determine the angle sign/range (toward/away) | . | Angle Range | The output range for the Angle value. | . | **Time** Attribute Name | Writes the time (*in Spline terms*) of the location sampled on the polyline, as a double. | . Based on the selected Sample method, the output values are a weighted average of all the sampled positions. See Weighting. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#properties"
  },"938": {
    "doc": "Sample Nearest Polyline",
    "title": "Sampling Methods",
    "content": "| Method | Description | . | Within Range | Samples all polylines within the specified range. | . | Closest Target | Sample the single closest polyline within the specified range. | . | Farthest Target | Sample the single farthest polyline within the specified range. | . | Target Extents | Reverse the sampling mechanisms so points will sample the targets which Extents contains them.**At the time of writing, will only check targets which position in world space is within range.***It is recommend to use a max range of 0 with this method.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#sampling-methods",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#sampling-methods"
  },"939": {
    "doc": "Sample Nearest Polyline",
    "title": "Performance Settings",
    "content": "| Performance Settings | ¬† | . | Do Async Processing | Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. It‚Äôs usually a bad idea performance-wise. &gt; Note that synchronous execution still processes data in chunks, it just does it with guaranteed order, as opposed to parallel processing. | . | Chunk Size | The chunk size represents the number of point/operations a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you‚Äôre just hogging thread ressources. Ultimately, it depends on your specific setup.A value of -1 fallbacks to that specific‚Äô node default value under the hood, which is usually a generic sweet spot; ranging from 64 to 4096 depending on the node. | . | Cache Result | Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it‚Äôs a compile-time choice, not an editor-time one (at least in 5.3). I exposed the ability to cache on-demand at the price of some harmless asserts, because once you‚Äôre done iterating on certain settings, it‚Äôs worth caching the results. | . | Flatten Output | When enabled, all of the node output attributes will be flattened; primarily meaning that their metadata (attributes) are not inheriting parents, and the node can be safely saved to a data asset. It‚Äôs a rather costly operation, so make sure you need it, and for the sake of your RAM, don‚Äôt enable it otherwise. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#performance-settings",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#performance-settings"
  },"940": {
    "doc": "Sample Nearest Polyline",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it‚Äôs very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#weighting"
  },"941": {
    "doc": "Sample Nearest Polyline",
    "title": "Weighting",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values ‚Äì but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#weighting"
  },"942": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html"
  },"943": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . The Sample Nearest Points node fetches all collisions within a given radius, and find the closest point on the closest collision. Works with simple colliders only. InPoints that will be used as origin for finding &amp; sampling the nearest surface OutIn with extra attributes and properties . This node works with collisions and as such can be very expensive on large datasets. Table of content . | Properties . | Collision Types . | Channel | . | . | . Note that this only works with simple collisions ‚Äì ‚Äòuse complex as simple‚Äô won‚Äôt work either. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#sample-nearest-surface",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#sample-nearest-surface"
  },"944": {
    "doc": "Sample Nearest Surface",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Settings**| | ¬† | . | Max Distance | Maximum surface search distance. | . | Local Max Distance | If enabled, will use a local property or attribute as Max Distance. | . | **Outputs**| | ¬† | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false).*Sampling is considered unsuccessful if there was no point within the specified range.* | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the surface at the sampled, as an FVector. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Collision Settings**| | ¬† | . | Max Distance | The maximum distance to search for a collision, from the point location in world space.*In other words, the radius of the query sphere.* | . | Collision Type | The type of collison to sample.*See [Collision Types](#collision-types)*. | . | Collision Details | Additional properties are available based on the selected Collision Type. | . | Ignore Self | Ignore the Actor owning the outer PCG graph. | . | Ignored Actor Selector | In-depth actor filtering.*Uses native PCG‚Äô actor filter. See Unreal documentation.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#properties"
  },"945": {
    "doc": "Sample Nearest Surface",
    "title": "Collision Types",
    "content": "Channel . | **Extra properties**| | ¬† | . | **Channel**| | ¬† | . | Collision Channel | Project-specific. Selects a single collision channel to test against. | . | **Object Type**| | ¬† | . | Collision Object Type | Same as Collision Channel, but work with a **flag**, allowing for a combination of types to test against. | . | **Profile**| | ¬† | . | Collision Profile Name | Name of the collision profile to test against. | . Important note: under the hood this find the closest point on the closest collider ‚Äì this feature is only supported for simple collider and won‚Äôt work on complex ones. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#collision-types",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#collision-types"
  },"946": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html"
  },"947": {
    "doc": "Sample Overlap Stats",
    "title": "Sample Overlap Stats",
    "content": "Compute overlap statistics between point collections . The Sample Overlap Stats node check points for overlap against other collections. InPoint collections to be checked against each other OutIn with extra attributes and properties . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-overlap-stats.html#sample-overlap-stats",
    "relUrl": "/doc-sampling/sampling-overlap-stats.html#sample-overlap-stats"
  },"948": {
    "doc": "Sample Overlap Stats",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-overlap-stats.html#properties",
    "relUrl": "/doc-sampling/sampling-overlap-stats.html#properties"
  },"949": {
    "doc": "Sample Overlap Stats",
    "title": "Sample Overlap Stats",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-overlap-stats.html",
    "relUrl": "/doc-sampling/sampling-overlap-stats.html"
  },"950": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . The Guided Trace node performs a single line trace for each point, using a local attribute or property as direction &amp; size. InPoints that will be used as origin for line tracing OutIn with extra attributes and properties . This node works with collisions and as such can be very expensive on large datasets. Table of content . | Properties . | Collision Types . | Channel | . | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#guided-trace",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#guided-trace"
  },"951": {
    "doc": "Guided Trace",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Settings**| | ¬† | . | Direction | Select which property or attribute should be used as direction for the line trace. | . | Max Distance | Maximum trace distance. | . | Local Max Distance | If enabled, will use a local property or attribute as Max Distance. | . | **Outputs**| | ¬† | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false).*Sampling is considered unsuccessful if there was no point within the specified range.* | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the surface at the sampled, as an FVector. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Collision Settings**| | ¬† | . | Max Distance | The maximum distance to search for a collision, from the point location in world space.*In other words, the radius of the query sphere.* | . | Collision Type | The type of collison to sample.*See [Collision Types](#collision-types)*. | . | Collision Details | Additional properties are available based on the selected Collision Type. | . | Ignore Self | Ignore the Actor owning the outer PCG graph. | . | Ignored Actor Selector | In-depth actor filtering.*Uses native PCG‚Äô actor filter. See Unreal documentation.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#properties",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#properties"
  },"952": {
    "doc": "Guided Trace",
    "title": "Collision Types",
    "content": "Channel . | **Extra properties**| | ¬† | . | **Channel**| | ¬† | . | Collision Channel | Project-specific. Selects a single collision channel to test against. | . | **Object Type**| | ¬† | . | Collision Object Type | Same as Collision Channel, but work with a **flag**, allowing for a combination of types to test against. | . | **Profile**| | ¬† | . | Collision Profile Name | Name of the collision profile to test against. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#collision-types",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#collision-types"
  },"953": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html",
    "relUrl": "/doc-sampling/sampling-surface-guided.html"
  },"954": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": "A* Algorithm . The A* Algorithm search mode ‚Ä¶ . Table of content . A* on Wikipedia . DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-astar.html#a-star",
    "relUrl": "/doc-pathfinding/search/search-astar.html#a-star"
  },"955": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-astar.html",
    "relUrl": "/doc-pathfinding/search/search-astar.html"
  },"956": {
    "doc": "Dijkstra",
    "title": "Dijkstra",
    "content": "Dijkstra‚Äôs Algorithm . The Dijkstra‚Äôs Algorithm search mode ‚Ä¶ . Table of content . Dijkstra on Wikipedia . DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-djikstra.html#dijkstra",
    "relUrl": "/doc-pathfinding/search/search-djikstra.html#dijkstra"
  },"957": {
    "doc": "Dijkstra",
    "title": "Dijkstra",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-djikstra.html",
    "relUrl": "/doc-pathfinding/search/search-djikstra.html"
  },"958": {
    "doc": "settings-adjacency",
    "title": "Adjacency",
    "content": "| Property | Description | . | : **Settings** : | ¬† | . | Mode | The mode lets you choose how to set the flags value, as a user.- Direct is probably the most useful, as it can be set using an override pin.- Individual lets you use an array where you can set individual bits by their position (index), and whether they‚Äôre true or false.- Composite lets you set individual bits using dropdowns. | . Mode : All . This mode consolidate all the connections‚Äô values into a single one to test against. | : **Consolidation** : | ¬† | . | Individual | Test individual neighbors one by one | . | Individual | Test against averaged value of all neighbors | . | Individual | Test against the Min value of all neighbors | . | Individual | Test against the Max value of all neighbors | . | Individual | Test against the Sum value of all neighbors | . DOC TBD . Mode : Some . This mode test individual connections, but only some of them are required to pass for the entire filter to be considered a success. How that ‚Äúsome‚Äù is defined relies on a comparison against a threshold: how many neighbors pass the test vs. how many neighbors there are. | : **Threshold Settings** : | ¬† | . | Threshold Comparison | TBD | . | Threshold Type | TBD | . | Threshold Source | TBD | . | Discrete Threshold | TBD | . | Relative Threshold | TBD | . | Threshold Attribute | TBD | . | Threshold Source | TBD | . | Rounding | TBD | . | Threshold Tolerance | TBD | . DOC TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/settings-adjacency.html#adjacency",
    "relUrl": "/doc-clusters/flag-nodes/settings-adjacency.html#adjacency"
  },"959": {
    "doc": "settings-adjacency",
    "title": "settings-adjacency",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/flag-nodes/settings-adjacency.html",
    "relUrl": "/doc-clusters/flag-nodes/settings-adjacency.html"
  },"960": {
    "doc": "settings-blending",
    "title": "Blending Settings",
    "content": "WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending-reduced.html#blending-settings",
    "relUrl": "/settings/settings-blending-reduced.html#blending-settings"
  },"961": {
    "doc": "settings-blending",
    "title": "settings-blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending-reduced.html",
    "relUrl": "/settings/settings-blending-reduced.html"
  },"962": {
    "doc": "settings-blending",
    "title": "Blending Settings",
    "content": "WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending.html#blending-settings",
    "relUrl": "/settings/settings-blending.html#blending-settings"
  },"963": {
    "doc": "settings-blending",
    "title": "settings-blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending.html",
    "relUrl": "/settings/settings-blending.html"
  },"964": {
    "doc": "settings-cluster-output",
    "title": "Cluster Output Settings",
    "content": "See Working with Clusters. | Property | Description | . | Edge Position | If enabled, edge point‚Äô position will be the result of that value used as a lerp between its start and end Vtx point. | . | : **Pruning** :| | ¬† | . | Min Vtx Count | If enabled, only ouputs clusters that have more ( &gt; ) Vtx than the specified number. | . | Max Vtx Count | If enabled, only ouputs clusters that have less ( &lt; ) Vtx than the specified number. | . | Min Edge Count | If enabled, only ouputs clusters that have more ( &gt; ) Edge than the specified number. | . | Max Edge Count | If enabled, only ouputs clusters that have less ( &lt; ) Edge than the specified number. | . | Refresh Edge Seed | If enabled, Edge points gets a fresh seed. | . | Build and Cache Cluster | If enabled, pre-build and cache cluster along with the point data.**This has a slight memory cost associated to it, but can offer tremendous performance improvement.***If disabled, cluster processors that comes down the line have to rebuild clusters from point data, which is very costly as they are also tested for errors and possible disconnections in the process.* | . | Expand Clusters | If enabled, also build &amp; cache another layer of cache data.**This can have a significant memory cost, as well as a minimal performance overhead, but can greatly improve certain specific operations down the line.** | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-cluster-output.html#cluster-output-settings",
    "relUrl": "/settings/settings-cluster-output.html#cluster-output-settings"
  },"965": {
    "doc": "settings-cluster-output",
    "title": "settings-cluster-output",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-cluster-output.html",
    "relUrl": "/settings/settings-cluster-output.html"
  },"966": {
    "doc": "settings-col-asset",
    "title": "settings-col-asset",
    "content": ". Common properties . Common properties are properties shared amonst all asset collection‚Äô entries . | Property | Description | . | : **Sub Collection** :| | ¬† | . | Sub Collection | If Is Sub Collection is enabled, lets you pick an **Asset Collection** that will work like a list of alternative choices for this entry. | . | Is Sub Collection | Whether this entry is a sub-collection or not.Enabling this option will reveal the **Asset Collection** picker. | . | : **Settings** :| | ¬† | . | Weight | The weight of this entry, relative to the others in the list.Higher weights means higher chance of being picked, if the context is using weighted random selection. | . | Category | A category associated with this entry. *Think of it as a unique tag.* | . An entry Weight is not only used for Weighted Random selection, but is also used to sort entries in certain cases; among which Indexed Weight (Ascending/Descending) distribution mode of the Asset Staging node. Variations . Optionally, you may enter a few random ranges for staging nodes to use, should you want to. This can come in handy if you want to have high-level, per-asset variations. | : **Positions** : | *Additive* | . | Offset Min | Minimum offset range. | . | Offset Max | Maximum offset range. | . | Absolute offset | Whether the offset should be applied in world space, or \"local\" to the point‚Äô transform. | . | : **Rotation** : | *Additive* | . | Rotation Min | Minimum rotation offset range. | . | Rotation Max | Maximum rotation offset range. | . | : **Scale** : | *Multiplicative* | . | Scale Min | Minimum scale multiplier range. | . | Scale Max | Maximum scale multiplier range. | . | Uniform Scale | Whether the random scale multiplier should be applied per-component or uniformly (*in which case it uses X for all components*). | . Note that variations are never applied by default by any nodes, and are considered an advanced tweak. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-assets/asset-collections/settings-col-asset.html",
    "relUrl": "/doc-assets/asset-collections/settings-col-asset.html"
  },"967": {
    "doc": "settings-dot-comparison",
    "title": "settings-dot-comparison",
    "content": ". Dot Comparison Details . | Comparison | Which comparison to use.*See [Comparisons](/PCGExtendedToolkit/doc-general/comparisons.html#numeric-comparisons).* | . | Dot Units | Let you choose to work either with normalized dot range (-1 / 1) or degrees.*This affects how the attribute Dot value will be interpreted as well.* | . | Unsigned Dot | When enabled, the comparison will occur against an absolute dot value.*This is especially useful when testing against undirected lines.* | . | Dot Value | The type of value used for this probe‚Äô search radius; either a Constant value or fetched from anAttribute | . | *(Dot or Degrees)* Constant | Constant to compare against. | . | *(Dot or Degrees)* Attribute | Constant to compare against. | . | *(Dot or Degrees)* Tolerance | Comparison tolerance, if the selected comparison is an approximative (~) one. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-dot-comparison.html",
    "relUrl": "/settings/settings-dot-comparison.html"
  },"968": {
    "doc": "settings-edge-types",
    "title": "Edge Types Settings",
    "content": "The Edge Types Settings allows you to choose which type or quality of edges you want to work with. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-edge-types.html#edge-types-settings",
    "relUrl": "/settings/settings-edge-types.html#edge-types-settings"
  },"969": {
    "doc": "settings-edge-types",
    "title": "settings-edge-types",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-edge-types.html",
    "relUrl": "/settings/settings-edge-types.html"
  },"970": {
    "doc": "settings-extra-weight",
    "title": "settings-extra-weight",
    "content": "| **Extra Weighting**| | ¬† | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution. | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic‚Äô Modifiers Reference Weight.*The weight is added each time an edge is used.* | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn‚Äôt carried over or cached. | Enabling this feature breaks parallelism. Task are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-extra-weight.html",
    "relUrl": "/settings/settings-extra-weight.html"
  },"971": {
    "doc": "settings-index-safety",
    "title": "settings-index-safety",
    "content": "Index Safety . The index safety property controls how invalid/out of bounds input values are handled. | Safety method | | ¬† | . | Ignore | Invalid indices will be ignored and won‚Äôt be processed further. | . | Tile | Index is tiled (*wrapped around*) the context‚Äô valid min/max range. | . | Clamp | Index is clamped between the context‚Äô valid min/max range. | . | Yoyo | Index bounces back and forth between the context‚Äô valid min/max range. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-index-safety.html",
    "relUrl": "/settings/settings-index-safety.html"
  },"972": {
    "doc": "settings-blending",
    "title": "Influence Settings",
    "content": "| Property | Description | . | **Settings**| | ¬† | . | Influence | Interpolate between the original position and the final, relaxed position.- 1.0 means fully relaxed- 0.0 means the original position is preserved. | . | **Local Influence** | When enabled, this allows you to use a per-point influence value.*This is especially useful for \"pinning\" specific points.* | . | Progressive Influence | When enabled, Influence is **applied between each iteration**, instead of once after all iterations have been processed.*This is more expensive but yield more good looking results, especially with non-uniform local influence.* | . Note that while the default Influence is clamped, the local influence is purposefully not clamped, allowing for undershooting or overshooting the influence‚Äô interpolation between the relaxed and original position. Use carefully. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-influence.html#influence-settings",
    "relUrl": "/settings/settings-influence.html#influence-settings"
  },"973": {
    "doc": "settings-blending",
    "title": "settings-blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-influence.html",
    "relUrl": "/settings/settings-influence.html"
  },"974": {
    "doc": "settings-weighting",
    "title": "Performance Settings",
    "content": "| **Performance Settings**| | ¬† | . | Do Async Processing | Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. *It‚Äôs usually a bad idea performance-wise.* &gt; Note that synchronous execution still processes data in *chunks*, it just does it with guaranteed order, as opposed to parallel processing. | . | Chunk Size | The chunk size represents the number of point/operations a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you‚Äôre just hogging thread ressources. **Ultimately, it depends on your specific setup.**A value of -1 fallbacks to that specific‚Äô node default value under the hood, which is usually a generic sweet spot; ranging from 64 to 4096 depending on the node. | . | Cache Result | Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it‚Äôs a compile-time choice, not an editor-time one **(at least in 5.3)**. I exposed the ability to cache on-demand at the price of some harmless asserts, because once you‚Äôre done iterating on certain settings, it‚Äôs worth caching the results. | . | Flatten Output | When enabled, all of the node output attributes will be flattened; primarily meaning that their metadata (attributes) are not inheriting parents, and the node can be safely saved to a data asset. *It‚Äôs a rather costly operation, so make sure you need it, and for the sake of your RAM, don‚Äôt enable it otherwise.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-performance.html#performance-settings",
    "relUrl": "/settings/settings-performance.html#performance-settings"
  },"975": {
    "doc": "settings-weighting",
    "title": "settings-weighting",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-performance.html",
    "relUrl": "/settings/settings-performance.html"
  },"976": {
    "doc": "settings-projection",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use ‚Äì it‚Äôs very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-projection.html#projection-settings",
    "relUrl": "/settings/settings-projection.html#projection-settings"
  },"977": {
    "doc": "settings-projection",
    "title": "settings-projection",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-projection.html",
    "relUrl": "/settings/settings-projection.html"
  },"978": {
    "doc": "settings-statistics",
    "title": "settings-statistics",
    "content": "| **Statistics** | | ¬† | . | ‚Äî | ![wip](https://img.shields.io/badge/WIP-c8860e) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-statistics.html",
    "relUrl": "/settings/settings-statistics.html"
  },"979": {
    "doc": "settings-weighting",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it‚Äôs very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-weighting.html#weighting",
    "relUrl": "/settings/settings-weighting.html#weighting"
  },"980": {
    "doc": "settings-weighting",
    "title": "settings-weighting",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-weighting.html",
    "relUrl": "/settings/settings-weighting.html"
  },"981": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html#moving-average",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html#moving-average"
  },"982": {
    "doc": "Moving Average",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Window Size | The number of leading &amp; trailing points to sample.*The larger the window, the more uniform the result.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html#properties",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html#properties"
  },"983": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html"
  },"984": {
    "doc": "Radius",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . Table of content . | Properties | . Note that because of how the maths works for this module, it can be used with any input data: whether the points are ordered as paths or not doesn‚Äôt matter. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html#radius",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html#radius"
  },"985": {
    "doc": "Radius",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Blend Radius | Radius within which neighbor points will be sampled. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html#properties",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html#properties"
  },"986": {
    "doc": "Radius",
    "title": "Radius",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html"
  },"987": {
    "doc": "üùò Sort Rule",
    "title": "üùò Sort Rule",
    "content": "An individual sorting rule . TBD . None Sorting RuleA single sorting rule . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html#sort-rule",
    "relUrl": "/doc-misc/sort-points/sort-rule.html#sort-rule"
  },"988": {
    "doc": "üùò Sort Rule",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html#properties",
    "relUrl": "/doc-misc/sort-points/sort-rule.html#properties"
  },"989": {
    "doc": "üùò Sort Rule",
    "title": "üùò Sort Rule",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html",
    "relUrl": "/doc-misc/sort-points/sort-rule.html"
  },"990": {
    "doc": "‚à¢ Auto Tangents",
    "title": "‚à¢ Auto Tangents",
    "content": "Neighbor-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html#auto-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html#auto-tangents"
  },"991": {
    "doc": "‚à¢ Auto Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html#properties"
  },"992": {
    "doc": "‚à¢ Auto Tangents",
    "title": "‚à¢ Auto Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html"
  },"993": {
    "doc": "‚à¢ Catmull-Rom",
    "title": "‚à¢ Catmull-Rom",
    "content": "Neighbor-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-catmull-rom.html#catmull-rom",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-catmull-rom.html#catmull-rom"
  },"994": {
    "doc": "‚à¢ Catmull-Rom",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-catmull-rom.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-catmull-rom.html#properties"
  },"995": {
    "doc": "‚à¢ Catmull-Rom",
    "title": "‚à¢ Catmull-Rom",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-catmull-rom.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-catmull-rom.html"
  },"996": {
    "doc": "‚à¢ Custom Tangents",
    "title": "‚à¢ Custom Tangents",
    "content": "Custom attribute-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html#custom-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html#custom-tangents"
  },"997": {
    "doc": "‚à¢ Custom Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html#properties"
  },"998": {
    "doc": "‚à¢ Custom Tangents",
    "title": "‚à¢ Custom Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html"
  },"999": {
    "doc": "‚à¢ Zero Tangents",
    "title": "‚à¢ Zero Tangents",
    "content": "Neighbor-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-zero.html#zero-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-zero.html#zero-tangents"
  },"1000": {
    "doc": "‚à¢ Zero Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-zero.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-zero.html#properties"
  },"1001": {
    "doc": "‚à¢ Zero Tangents",
    "title": "‚à¢ Zero Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-zero.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-zero.html"
  },"1002": {
    "doc": "üùä Edge Match",
    "title": "üùä Edge Match",
    "content": "PCGEx | Vtx : Edge Match Find the neighbors that best match a given direction . TBD . PropertyA single property writer . Related . | Working with Clusters | Properties : Vtx | . Table of content . | Properties . | Outputs | . | . The Edge Match property outputs the properties of the single connected edges that best matches a given direction. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-best-match.html#edge-match",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-best-match.html#edge-match"
  },"1003": {
    "doc": "üùä Edge Match",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| | ¬† | . | Origin | Defines how the base direction is computed, either from the Node to the neighbor (*going outward*), or from the Neighbor to the node (*going inward*). | . | Direction Source | Select where to read the direction to compare to from; either Constant or Attribute. | . | Direction Constant | Fixed test direction. | . | Direction Attribute | Per-point direction attribute. | . | Transform Direction | If enabled, will transform the input direction (either Constant or Attribute) using the point‚Äô transform. | . Dot Comparison Details . | Comparison | Which comparison to use.*See [Comparisons](/PCGExtendedToolkit/doc-general/comparisons.html#numeric-comparisons).* | . | Dot Units | Let you choose to work either with normalized dot range (-1 / 1) or degrees.*This affects how the attribute Dot value will be interpreted as well.* | . | Unsigned Dot | When enabled, the comparison will occur against an absolute dot value.*This is especially useful when testing against undirected lines.* | . | Dot Value | The type of value used for this probe‚Äô search radius; either a Constant value or fetched from anAttribute | . | *(Dot or Degrees)* Constant | Constant to compare against. | . | *(Dot or Degrees)* Attribute | Constant to compare against. | . | *(Dot or Degrees)* Tolerance | Comparison tolerance, if the selected comparison is an approximative (~) one. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-best-match.html#properties",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-best-match.html#properties"
  },"1004": {
    "doc": "üùä Edge Match",
    "title": "Outputs",
    "content": "| Output | Description | . | Direction AttributeFVector | If enabled, writes the Edge‚Äô direction to the specified attribute. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the Edge‚Äô length to the specified attribute. | . | Edge Index AttributeInt32 | If enabled, writes the Edge‚Äô point index to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Vtx Index AttributeInt32 | If enabled, writes the Vtx‚Äô point index the selected Edge connects to, to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Neighbor Count AttributeInt32 | If enabled, writes the Vtx‚Äô point neighbor count the selected Edge connects to, to the specified attribute.*Amongst other things, this can come in handy to drive the üù∞ Heuristic Attribute.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-best-match.html#outputs",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-best-match.html#outputs"
  },"1005": {
    "doc": "üùä Edge Match",
    "title": "üùä Edge Match",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-best-match.html",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-best-match.html"
  },"1006": {
    "doc": "üùä Special Edges",
    "title": "üùä Special Edges",
    "content": "PCGEx | Vtx : Special Edges Gather infos from special-case edges . The Special Edges property outputs data about the two most extreme edges connected to a vertex ‚Äî the shortest and longest ‚Äî allowing users to capture attributes like direction, length, and indices for both, with an additional option to average all connected edges. PropertyA single property writer . Related . | Working with Clusters | Properties : Vtx | . Table of content . | Properties . | Shortest Edge | Longest Edge | Average Edge | . | . The Special Edges property outputs the properties of the two ‚Äúspecial‚Äù connected edges ‚Äì special in the outlier sense : the Shortest connected edge, as well as the Longest connected edge. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html#special-edges",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html#special-edges"
  },"1007": {
    "doc": "üùä Special Edges",
    "title": "Properties",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html#properties",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html#properties"
  },"1008": {
    "doc": "üùä Special Edges",
    "title": "Shortest Edge",
    "content": "| Output | Description | . | Direction AttributeFVector | If enabled, writes the Shortest Edge‚Äô direction to the specified attribute. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the Shortest Edge‚Äô‚Äô length to the specified attribute. | . | Edge Index AttributeInt32 | If enabled, writes the Shortest Edge‚Äô‚Äô point index to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Vtx Index AttributeInt32 | If enabled, writes the Vtx‚Äô point index the Shortest Edge‚Äô connects to, to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Neighbor Count AttributeInt32 | If enabled, writes the Vtx‚Äô point neighbor count the Shortest Edge‚Äô connects to, to the specified attribute.*Amongst other things, this can come in handy to drive the üù∞ Heuristic Attribute.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html#shortest-edge",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html#shortest-edge"
  },"1009": {
    "doc": "üùä Special Edges",
    "title": "Longest Edge",
    "content": "| Output | Description | . | Direction AttributeFVector | If enabled, writes the Longest Edge‚Äô direction to the specified attribute. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the Longest Edge‚Äô‚Äô length to the specified attribute. | . | Edge Index AttributeInt32 | If enabled, writes the Longest Edge‚Äô‚Äô point index to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Vtx Index AttributeInt32 | If enabled, writes the Vtx‚Äô point index the Longest Edge‚Äô connects to, to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Neighbor Count AttributeInt32 | If enabled, writes the Vtx‚Äô point neighbor count the Longest Edge‚Äô connects to, to the specified attribute.*Amongst other things, this can come in handy to drive the üù∞ Heuristic Attribute.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html#longest-edge",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html#longest-edge"
  },"1010": {
    "doc": "üùä Special Edges",
    "title": "Average Edge",
    "content": "A sub-selection of all connected‚Äô edges average. | Output | Description | . | Direction AttributeFVector | If enabled, writes the averaged direction of all connected edges. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the averaged length of all connected edges. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html#average-edge",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html#average-edge"
  },"1011": {
    "doc": "üùä Special Edges",
    "title": "üùä Special Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-edges.html",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-edges.html"
  },"1012": {
    "doc": "üùä Special Neighbors",
    "title": "üùä Special Neighbors",
    "content": "PCGEx | Vtx : Special Neighbors Gather infos from special-case neighbors . The Special Neighbors property outputs information about two key neighbors of a vertex ‚Äî the one with the most connections (Largest Neighbor) and the one with the fewest connections (Smallest Neighbor). You can extract various attributes, such as edge direction, length, and vertex indices, for both of these special neighbors. PropertyA single property writer . Related . | Working with Clusters | Properties : Vtx | . Table of content . | Properties . | Largest Neighbor | Smallest Neighbor | . | . The Special Neighbor property outputs the properties of the two ‚Äúspecial‚Äù connected neighbors ‚Äì special in the outlier sense : the Largest connected vtx, as well as the Smallest connected vtx ‚Äì in terms of number of connectons. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#special-neighbors",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#special-neighbors"
  },"1013": {
    "doc": "üùä Special Neighbors",
    "title": "Properties",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#properties",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#properties"
  },"1014": {
    "doc": "üùä Special Neighbors",
    "title": "Largest Neighbor",
    "content": "The Largest Neighbor is the connected Vtx with the largest number of connections. | Output | Description | . | Direction AttributeFVector | If enabled, writes the Edge‚Äô direction to the specified attribute. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the Edge‚Äô‚Äô length to the specified attribute. | . | Edge Index AttributeInt32 | If enabled, writes the Edge‚Äô‚Äô point index to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Vtx Index AttributeInt32 | If enabled, writes the Vtx‚Äô point index the Edge‚Äô connects to, to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Neighbor Count AttributeInt32 | If enabled, writes the Vtx‚Äô point neighbor count the Edge‚Äô connects to, to the specified attribute.*Amongst other things, this can come in handy to drive the üù∞ Heuristic Attribute.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#largest-neighbor",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#largest-neighbor"
  },"1015": {
    "doc": "üùä Special Neighbors",
    "title": "Smallest Neighbor",
    "content": "The Smallest Neighbor is the connected Vtx with the smallest number of connections. | Output | Description | . | Direction AttributeFVector | If enabled, writes the Edge‚Äô direction to the specified attribute. | . | *Invert Direction* | *If enabled, will invert (*-1) the direction output above.* | . | Length AttributeDouble | If enabled, writes the Edge‚Äô‚Äô length to the specified attribute. | . | Edge Index AttributeInt32 | If enabled, writes the Edge‚Äô‚Äô point index to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Vtx Index AttributeInt32 | If enabled, writes the Vtx‚Äô point index the Edge‚Äô connects to, to the specified attribute.*This is useful for targeted/cherry-picking manipulations.* | . | Neighbor Count AttributeInt32 | If enabled, writes the Vtx‚Äô point neighbor count the Edge‚Äô connects to, to the specified attribute.*Amongst other things, this can come in handy to drive the üù∞ Heuristic Attribute.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#smallest-neighbor",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html#smallest-neighbor"
  },"1016": {
    "doc": "üùä Special Neighbors",
    "title": "üùä Special Neighbors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html",
    "relUrl": "/doc-clusters/properties-vtx/vtx-extra-special-neighbors.html"
  },"1017": {
    "doc": "Working with Clusters",
    "title": "Working with Clusters",
    "content": "Vtx? Edges? . A summary of what ‚Äúgraph‚Äù means and entails in the context of PCGEx. One of the main focus of PCGEx is working with Clusters : vtx &amp; edge-based ‚Äúgraph‚Äù structures. They‚Äôre akin to a mesh without faces: a bunch of vertices connected by a bunch of edges. PCGEx leverage PCG‚Äô point data as data holders in order to enable easy tweaking and manipulation of edge/vertice data using existing vanilla nodes. In short, a graph is represented by at least two separate set of points: the first, Vtx represent individual vertices; others, Edges, represent interconnected clusters. Edges points stores the indices of their start and end point in the matching Vtx group. Because of that approach, nodes that work with graph require Vtx and Edges as separate inputs. Data Tags are used to mark which edges match which vertices, so you will see additional tags appear on your data, formatted as PCGEx/Cluster::UID. Rule of thumb : If you manually alter (as in add or remove points) the content of a Vtx or Edges created by a PCGEx Node, make sure to use the Sanitize Clusters node before using them as inputs for other PCGEx nodes. Checklist . | Vtx . | Cached Index | Cached Edge Num | . | Edges . | Edge Endpoints | . | Clusters | Graph Output Settings üìå | Important Notes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#working-with-clusters",
    "relUrl": "/doc-general/working-with-clusters.html#working-with-clusters"
  },"1018": {
    "doc": "Working with Clusters",
    "title": "Vtx",
    "content": "A Vtx has one important piece of data written on it, and their position in space is relied upon for edge metrics ‚Äì Vtx being edges‚Äô start and end points. Cached Index . The PCGEx/CachedIndex attribute hold the index of the Vtx when it was written into a graph. This is the index PCGEx/EdgeStart and PCGEx/EdgeEnd refers to on the Edges points. It is primarily useful to know whether the vtx structure has been altered or not, and ensure the graph is safe to use to avoid exceptions. Cached Edge Num . The PCGEx/CachedEdgeNum attribute hold the number of edges connected to that Vtx when it was written into a graph. It is solely used for validation purposes when rebuilding a cluster to process it. Note that this attribute can be reliably fetched to know how many unique edges are connected to a Vtx ;) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#vtx",
    "relUrl": "/doc-general/working-with-clusters.html#vtx"
  },"1019": {
    "doc": "Working with Clusters",
    "title": "Edges",
    "content": "Rule of thumb : The only information that matter on Edges for clusters is their start and end attribute. Their position in space is ignored so feel free to use those points if they can be relevant to you. Edges have a single important piece of data written on them, and everything else is pretty much ignored by PCGEx ‚Äì meaning you can use the set of point almost as you see fit. Edge Endpoints . The PCGEx/Endpoints attribute hold the cached index of its start Vtx when it was written into a cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#edges",
    "relUrl": "/doc-general/working-with-clusters.html#edges"
  },"1020": {
    "doc": "Working with Clusters",
    "title": "Clusters",
    "content": "In PCGEx terms, a cluster is ‚Äúa set of Vtx and Edges that are interconnected in a finite way‚Äù ‚Äì in other words, there is a guaranteed way inside a cluster that a path can be found between any Vtx to any other Vtx when passing through Edges. A graph usually has a single set of vertices, but will output as many edge datasets as there are clusters. These will be then rebuilt inside the nodes to be processed. If you‚Äôre unhappy with how clusters have been split in your graph, is here to save your day! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#clusters",
    "relUrl": "/doc-general/working-with-clusters.html#clusters"
  },"1021": {
    "doc": "Working with Clusters",
    "title": "Graph Output Settings üìå",
    "content": ". This is a setting block you will see in a form or another on nodes that output sanitized clusters. They expose controls/filters over the Vtx/Edges output of the node to make sure the output is sanitized, i.e, that it can be safely traversed by pathfinding search algorithms. See the Sanitize Clusters node for more infos, as it encapsulate the sanitization behavior embedded in many other nodes. If you want more fleshed out controls over Edges data &amp; positioning, check out Node! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#graph-output-settings-",
    "relUrl": "/doc-general/working-with-clusters.html#graph-output-settings-"
  },"1022": {
    "doc": "Working with Clusters",
    "title": "Important Notes",
    "content": "Altering PCGEx/CachedIndex, PCGEx/CachedEdgeNum, PCGEx/EdgeStart or PCGEx/EdgeEnd voids the guarantee that PCGEx nodes will work as expected. The UID used for the tagging is NOT deterministic, and will change at each execution of the graph, and for each node. It is used under the hood only, and should not be edited, nor relied upon for any kind of tag-related operations. For the same reason, if you create custom tags starting with PCGEx/Cluster::, it will break existing vtx/edge associations. Because of the reliance on the tagging system, if you edit Vtx and Edges before using them with a PCGEx node, make sure tags are preserved. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html#important-notes",
    "relUrl": "/doc-general/working-with-clusters.html#important-notes"
  },"1023": {
    "doc": "Working with Clusters",
    "title": "Working with Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-clusters.html",
    "relUrl": "/doc-general/working-with-clusters.html"
  }
}
