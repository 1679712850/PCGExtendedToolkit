{"0": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": "Frequently Asked Questions . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#faq",
    "relUrl": "/FAQ.html#faq"
  },"1": {
    "doc": "F.A.Q",
    "title": "Q: I get “Ensure condition failed: InDependenciesCrc.IsValid()” when caching/uncaching PCGEx nodes!",
    "content": "Yes. It’s ok, you can ignore these. PCG isn’t natively architectured to support node that switch between cacheable/not-cacheable, which sometime generates failed checks. It’s annoying but is harmless. The benefits of switching caching mode outweights the assert in my opinion – if that bugs you, don’t touch to the checkbox, it’s generally safer not to ship with cached data anyway. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes",
    "relUrl": "/FAQ.html#q-i-get-ensure-condition-failed-independenciescrcisvalid-when-cachinguncaching-pcgex-nodes"
  },"2": {
    "doc": "F.A.Q",
    "title": "F.A.Q",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/FAQ.html",
    "relUrl": "/FAQ.html"
  },"3": {
    "doc": "About",
    "title": "I’m Tim!",
    "content": "I made this. Follow @Nebukam . I made PCGEx as a way to bring some my personal Houdini toolkit into Unreal, and figured it could be useful to my fellow artists and designers. I love my current workflow &amp; tools when it comes to procedural generation, and often needed ways to generate data &amp; structures to… well, generate more data and structures to spawn stuff on. Unreal PCG has powerful tools to generate and work with splines, but unless you’re making them by hand, spline are a pain to manipulate and maintain at scale – that’s the main reason why I wanted to have tools to create graph and pathfinding them. Turns out, it’s useful for plenty of other things :) . Special Thanks . Massive kudo to MikeC, who has been an early adopter, and whose feedback and suggestions tremendously helped make PCGEx a better and more useful tool &lt;3 Also thanks to Sinbad, as I shamelessly pasted some of his C++ formatting and practices for this documentation ^_^ . Source code . PCGEx is licensed under MIT : if you want to look at the code, or if you’re worried it could hurt your machine, the code is available in full on github. It does not rely on nor embbed any third party library/dlls. Bugs! . If you encounter a bug, please fill an issue here. Please provide as much information as you can (stack traces, node setup, …). Improvement &amp; Feature Requests . If you have a feature or improvement requestion, please start a discussion here! . Footnotes &amp; Credits . | I am not affiliated with Unreal! | Photo of Edsger W. Dijkstra from Wikipedia, (c) Hamilton Richards / CC BY-SA 3.0 : source | Photo of Bertran Raphael from Wikipedia, (c) Blogjack / CC BY-SA 3.0 : source | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/#im-tim",
    "relUrl": "/about/#im-tim"
  },"4": {
    "doc": "About",
    "title": "About",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/about/",
    "relUrl": "/about/"
  },"5": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": "Comprehensive list of all PCGEx nodes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#all-nodes",
    "relUrl": "/all-nodes.html#all-nodes"
  },"6": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#all-nodes",
    "relUrl": "/all-nodes.html#all-nodes"
  },"7": {
    "doc": "All Nodes",
    "title": "Graphs Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#graphs-nodes",
    "relUrl": "/all-nodes.html#graphs-nodes"
  },"8": {
    "doc": "All Nodes",
    "title": "Classics",
    "content": "Delaunay, Voronoi . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#classics",
    "relUrl": "/all-nodes.html#classics"
  },"9": {
    "doc": "All Nodes",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable graph clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#mesh-to-clusters",
    "relUrl": "/all-nodes.html#mesh-to-clusters"
  },"10": {
    "doc": "All Nodes",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#partition-vertices",
    "relUrl": "/all-nodes.html#partition-vertices"
  },"11": {
    "doc": "All Nodes",
    "title": "Find Node States",
    "content": "Find conditional-based states to nodes within a graph . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#find-node-states",
    "relUrl": "/all-nodes.html#find-node-states"
  },"12": {
    "doc": "All Nodes",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sanitize-clusters",
    "relUrl": "/all-nodes.html#sanitize-clusters"
  },"13": {
    "doc": "All Nodes",
    "title": "Filter Clusters",
    "content": "Filter out cluster based on proximity to target points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#filter-clusters",
    "relUrl": "/all-nodes.html#filter-clusters"
  },"14": {
    "doc": "All Nodes",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-clusters",
    "relUrl": "/all-nodes.html#fuse-clusters"
  },"15": {
    "doc": "All Nodes",
    "title": "Hulls",
    "content": "Convex hull algorithms . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#hulls",
    "relUrl": "/all-nodes.html#hulls"
  },"16": {
    "doc": "All Nodes",
    "title": "Copy Clusters to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#copy-clusters-to-points",
    "relUrl": "/all-nodes.html#copy-clusters-to-points"
  },"17": {
    "doc": "All Nodes",
    "title": "Make Clusters Unique",
    "content": "Create a forward copy of input clusters with unique tags. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#make-clusters-unique",
    "relUrl": "/all-nodes.html#make-clusters-unique"
  },"18": {
    "doc": "All Nodes",
    "title": "Pack Clusters",
    "content": "Pack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#pack-clusters",
    "relUrl": "/all-nodes.html#pack-clusters"
  },"19": {
    "doc": "All Nodes",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#unpack-clusters",
    "relUrl": "/all-nodes.html#unpack-clusters"
  },"20": {
    "doc": "All Nodes",
    "title": "Custom Graph Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#custom-graph-nodes",
    "relUrl": "/all-nodes.html#custom-graph-nodes"
  },"21": {
    "doc": "All Nodes",
    "title": "Build Custom Graph",
    "content": "Find &amp; build relationships between points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#build-custom-graph",
    "relUrl": "/all-nodes.html#build-custom-graph"
  },"22": {
    "doc": "All Nodes",
    "title": "Find Sockets State",
    "content": "Find &amp; writes socket states data to points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#find-sockets-state",
    "relUrl": "/all-nodes.html#find-sockets-state"
  },"23": {
    "doc": "All Nodes",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#find-edge-clusters",
    "relUrl": "/all-nodes.html#find-edge-clusters"
  },"24": {
    "doc": "All Nodes",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph half-edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#draw-custom-graph",
    "relUrl": "/all-nodes.html#draw-custom-graph"
  },"25": {
    "doc": "All Nodes",
    "title": "Sanitize Custom Graph",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sanitize-custom-graph",
    "relUrl": "/all-nodes.html#sanitize-custom-graph"
  },"26": {
    "doc": "All Nodes",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#delete",
    "relUrl": "/all-nodes.html#delete"
  },"27": {
    "doc": "All Nodes",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#promote-edges",
    "relUrl": "/all-nodes.html#promote-edges"
  },"28": {
    "doc": "All Nodes",
    "title": "Edges Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#edges-nodes",
    "relUrl": "/all-nodes.html#edges-nodes"
  },"29": {
    "doc": "All Nodes",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#bridge-clusters",
    "relUrl": "/all-nodes.html#bridge-clusters"
  },"30": {
    "doc": "All Nodes",
    "title": "Refine",
    "content": "Algorithmic edge refinement . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#refine",
    "relUrl": "/all-nodes.html#refine"
  },"31": {
    "doc": "All Nodes",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#relax",
    "relUrl": "/all-nodes.html#relax"
  },"32": {
    "doc": "All Nodes",
    "title": "Write Edge Extras",
    "content": "Compute edge extra data from its vertices . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-edge-extras",
    "relUrl": "/all-nodes.html#write-edge-extras"
  },"33": {
    "doc": "All Nodes",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#find-contours",
    "relUrl": "/all-nodes.html#find-contours"
  },"34": {
    "doc": "All Nodes",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#prune-by-length",
    "relUrl": "/all-nodes.html#prune-by-length"
  },"35": {
    "doc": "All Nodes",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#draw-edges",
    "relUrl": "/all-nodes.html#draw-edges"
  },"36": {
    "doc": "All Nodes",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#pathfinding-nodes",
    "relUrl": "/all-nodes.html#pathfinding-nodes"
  },"37": {
    "doc": "All Nodes",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#edges-pathfinding",
    "relUrl": "/all-nodes.html#edges-pathfinding"
  },"38": {
    "doc": "All Nodes",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#plot-edges-pathfinding",
    "relUrl": "/all-nodes.html#plot-edges-pathfinding"
  },"39": {
    "doc": "All Nodes",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#navmesh-pathfinding",
    "relUrl": "/all-nodes.html#navmesh-pathfinding"
  },"40": {
    "doc": "All Nodes",
    "title": "Plot Navmesh Pathfinding",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#plot-navmesh-pathfinding",
    "relUrl": "/all-nodes.html#plot-navmesh-pathfinding"
  },"41": {
    "doc": "All Nodes",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#paths-nodes",
    "relUrl": "/all-nodes.html#paths-nodes"
  },"42": {
    "doc": "All Nodes",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#smooth",
    "relUrl": "/all-nodes.html#smooth"
  },"43": {
    "doc": "All Nodes",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#orient",
    "relUrl": "/all-nodes.html#orient"
  },"44": {
    "doc": "All Nodes",
    "title": "Blend",
    "content": "Blend individual points between from paths’ start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#blend",
    "relUrl": "/all-nodes.html#blend"
  },"45": {
    "doc": "All Nodes",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-collinear",
    "relUrl": "/all-nodes.html#fuse-collinear"
  },"46": {
    "doc": "All Nodes",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#subdivide",
    "relUrl": "/all-nodes.html#subdivide"
  },"47": {
    "doc": "All Nodes",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-tangents",
    "relUrl": "/all-nodes.html#write-tangents"
  },"48": {
    "doc": "All Nodes",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#paths-to-edge-clusters",
    "relUrl": "/all-nodes.html#paths-to-edge-clusters"
  },"49": {
    "doc": "All Nodes",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#misc-nodes",
    "relUrl": "/all-nodes.html#misc-nodes"
  },"50": {
    "doc": "All Nodes",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sort-points",
    "relUrl": "/all-nodes.html#sort-points"
  },"51": {
    "doc": "All Nodes",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#partition-by-values",
    "relUrl": "/all-nodes.html#partition-by-values"
  },"52": {
    "doc": "All Nodes",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#fuse-points",
    "relUrl": "/all-nodes.html#fuse-points"
  },"53": {
    "doc": "All Nodes",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#attribute-remap",
    "relUrl": "/all-nodes.html#attribute-remap"
  },"54": {
    "doc": "All Nodes",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#points-to-bounds",
    "relUrl": "/all-nodes.html#points-to-bounds"
  },"55": {
    "doc": "All Nodes",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#uber-filter",
    "relUrl": "/all-nodes.html#uber-filter"
  },"56": {
    "doc": "All Nodes",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#d-lloyd-relaxation",
    "relUrl": "/all-nodes.html#d-lloyd-relaxation"
  },"57": {
    "doc": "All Nodes",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#write-index",
    "relUrl": "/all-nodes.html#write-index"
  },"58": {
    "doc": "All Nodes",
    "title": "3D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#d-lloyd-relaxation-1",
    "relUrl": "/all-nodes.html#d-lloyd-relaxation-1"
  },"59": {
    "doc": "All Nodes",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#refresh-seed",
    "relUrl": "/all-nodes.html#refresh-seed"
  },"60": {
    "doc": "All Nodes",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#discard-points-by-count",
    "relUrl": "/all-nodes.html#discard-points-by-count"
  },"61": {
    "doc": "All Nodes",
    "title": "Discard Points by Overlap",
    "content": "Self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#discard-points-by-overlap",
    "relUrl": "/all-nodes.html#discard-points-by-overlap"
  },"62": {
    "doc": "All Nodes",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sampling-nodes",
    "relUrl": "/all-nodes.html#sampling-nodes"
  },"63": {
    "doc": "All Nodes",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-surface",
    "relUrl": "/all-nodes.html#sample-nearest-surface"
  },"64": {
    "doc": "All Nodes",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#guided-trace",
    "relUrl": "/all-nodes.html#guided-trace"
  },"65": {
    "doc": "All Nodes",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-polyline",
    "relUrl": "/all-nodes.html#sample-nearest-polyline"
  },"66": {
    "doc": "All Nodes",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-nearest-points",
    "relUrl": "/all-nodes.html#sample-nearest-points"
  },"67": {
    "doc": "All Nodes",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html#sample-neighbors",
    "relUrl": "/all-nodes.html#sample-neighbors"
  },"68": {
    "doc": "All Nodes",
    "title": "All Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/all-nodes.html",
    "relUrl": "/all-nodes.html"
  },"69": {
    "doc": "all-pathfinding-modules",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#goal-pickers",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#goal-pickers"
  },"70": {
    "doc": "all-pathfinding-modules",
    "title": "Default",
    "content": "Match seeds to goals at the same index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#default",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#default"
  },"71": {
    "doc": "all-pathfinding-modules",
    "title": "Random",
    "content": "Match seeds to goals at a random index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#random",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#random"
  },"72": {
    "doc": "all-pathfinding-modules",
    "title": "Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#goal-from-attribute"
  },"73": {
    "doc": "all-pathfinding-modules",
    "title": "Search",
    "content": "An inventory of the available search modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#search",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#search"
  },"74": {
    "doc": "all-pathfinding-modules",
    "title": "Contours",
    "content": "Contours . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#contours",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#contours"
  },"75": {
    "doc": "all-pathfinding-modules",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#dijkstra",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#dijkstra"
  },"76": {
    "doc": "all-pathfinding-modules",
    "title": "A* Star",
    "content": "A* Algorithm . ## . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html#a-star",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html#a-star"
  },"77": {
    "doc": "all-pathfinding-modules",
    "title": "all-pathfinding-modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/all-pathfinding-modules.html",
    "relUrl": "/doc-pathfinding/all-pathfinding-modules.html"
  },"78": {
    "doc": "Inherit Last",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-end.html#inherit-last",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-end.html#inherit-last"
  },"79": {
    "doc": "Inherit Last",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Blending Settings | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-end.html#properties",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-end.html#properties"
  },"80": {
    "doc": "Inherit Last",
    "title": "Inherit Last",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-end.html",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-end.html"
  },"81": {
    "doc": "Inherit First",
    "title": "Inherit First",
    "content": "Copy the first point’ values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-start.html#inherit-first",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-start.html#inherit-first"
  },"82": {
    "doc": "Inherit First",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Blending Settings | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-start.html#properties",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-start.html#properties"
  },"83": {
    "doc": "Inherit First",
    "title": "Inherit First",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-inherit-start.html",
    "relUrl": "/doc-misc/blending-modules/blending-inherit-start.html"
  },"84": {
    "doc": "Interpolate",
    "title": "Interpolate",
    "content": "Interpolate values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. Table of content . | Properties | Blend Over Methods . | Distance | Count | Fixed | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-interpolate.html#interpolate",
    "relUrl": "/doc-misc/blending-modules/blending-interpolate.html#interpolate"
  },"85": {
    "doc": "Interpolate",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Blending Over | Defines the method used to compute the alpha value for the interpolation. | . | Blending Settings | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-interpolate.html#properties",
    "relUrl": "/doc-misc/blending-modules/blending-interpolate.html#properties"
  },"86": {
    "doc": "Interpolate",
    "title": "Blend Over Methods",
    "content": ". | Distance | Count | Fixed | . Distance . Distance will first calculate the total distance covered by the subpoints (from current to next), and compute their individual lerp as Local Distance / Total Distance. This usually gives more better-looking results if the distance between points is irregular; but the difference in values between a point and the next can either be brutal or negligible. If points are equally spaced, it will look very similar to Point Count. Count . Point Count uses the current point index, and compute their individual lerp as Current Index / Total Point Count. Using this method is equivalent of using a fixed blending step between each point. If points are irregularly spaced, it may look a bit random. Fixed . Uses a unique fixed lerp value for each point. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-interpolate.html#blend-over-methods",
    "relUrl": "/doc-misc/blending-modules/blending-interpolate.html#blend-over-methods"
  },"87": {
    "doc": "Interpolate",
    "title": "Interpolate",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/blending-interpolate.html",
    "relUrl": "/doc-misc/blending-modules/blending-interpolate.html"
  },"88": {
    "doc": "Assemble Sockets",
    "title": "Assemble Sockets",
    "content": "Assemble sockets params into a single Custom Graph param object. The Assemble Sockets node takes one or more socket objects and merge them into a single object that can be used with a Custom Graph builder. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html#assemble-sockets",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html#assemble-sockets"
  },"89": {
    "doc": "Assemble Sockets",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html#properties"
  },"90": {
    "doc": "Assemble Sockets",
    "title": "Assemble Sockets",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-assemble-sockets.html"
  },"91": {
    "doc": "Delete",
    "title": "Delete",
    "content": "Delete custom graph attributes. The Delete Custom Graph node helps with custom graph attributes that have become garbage. It’s important to delete them to speed up data processing once you don’t need them. This node has no specific properties. This node removes all the extra properties associated with custom graphs from a set of points. Depending on the complexity or amount of custom graph params associated with a set of points, it is a welcome optimization to just clean up the data as soon as you don’t need it anymore. Note that by default, the Promote Edges does this cleanup internally. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-delete.html#delete",
    "relUrl": "/doc-custom-graphs/custom-graph-delete.html#delete"
  },"92": {
    "doc": "Delete",
    "title": "Inputs &amp; Outputs",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-delete.html#inputs--outputs",
    "relUrl": "/doc-custom-graphs/custom-graph-delete.html#inputs--outputs"
  },"93": {
    "doc": "Delete",
    "title": "Delete",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-delete.html",
    "relUrl": "/doc-custom-graphs/custom-graph-delete.html"
  },"94": {
    "doc": "Draw Custom Graph",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph half-edges. The Draw Custom Graph node draws connections using debug lines. It can be very helpful to understand the different types of half-edges and what to expect when either working with states, or converting the graph into clusters. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-draw.html#draw-custom-graph",
    "relUrl": "/doc-custom-graphs/custom-graph-draw.html#draw-custom-graph"
  },"95": {
    "doc": "Draw Custom Graph",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-draw.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-draw.html#properties"
  },"96": {
    "doc": "Draw Custom Graph",
    "title": "Draw Custom Graph",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-draw.html",
    "relUrl": "/doc-custom-graphs/custom-graph-draw.html"
  },"97": {
    "doc": "Find Edge Clusters",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. The Find Edge Clusters node is one of the primary use of custom graph is to generate vtx/edge clusters that can be used with the rest of the toolkit. This node converts custom graph half-edges to regular clusters. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-find-edge-clusters.html#find-edge-clusters",
    "relUrl": "/doc-custom-graphs/custom-graph-find-edge-clusters.html#find-edge-clusters"
  },"98": {
    "doc": "Find Edge Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-find-edge-clusters.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-find-edge-clusters.html#properties"
  },"99": {
    "doc": "Find Edge Clusters",
    "title": "Find Edge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-find-edge-clusters.html",
    "relUrl": "/doc-custom-graphs/custom-graph-find-edge-clusters.html"
  },"100": {
    "doc": "Promote Edges",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. The Promote Edges node can turn custom graph’ half edges to other type of data. It’s deprecated. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-promote-edges.html#promote-edges",
    "relUrl": "/doc-custom-graphs/custom-graph-promote-edges.html#promote-edges"
  },"101": {
    "doc": "Promote Edges",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-promote-edges.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-promote-edges.html#properties"
  },"102": {
    "doc": "Promote Edges",
    "title": "Promote Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-promote-edges.html",
    "relUrl": "/doc-custom-graphs/custom-graph-promote-edges.html"
  },"103": {
    "doc": "Sanitize Custom Graph",
    "title": "Sanitize Custom Graph",
    "content": "Rebuild a custom graph after editing. The Sanitize Custom Graph node helps rebuilding connections and data needs to be sanitized in order to avoid corrupted readings after manual modifications of the points. This node ensure the data isn’t corrupted for further use. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-sanitize.html#sanitize-custom-graph",
    "relUrl": "/doc-custom-graphs/custom-graph-sanitize.html#sanitize-custom-graph"
  },"104": {
    "doc": "Sanitize Custom Graph",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-sanitize.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-sanitize.html#properties"
  },"105": {
    "doc": "Sanitize Custom Graph",
    "title": "Sanitize Custom Graph",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-sanitize.html",
    "relUrl": "/doc-custom-graphs/custom-graph-sanitize.html"
  },"106": {
    "doc": "Sockets State",
    "title": "Sockets State",
    "content": "A list of socket conditions identifying a unique state. The Socket State node represents a set of either strict or loose conditions that can be used to mark points. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html#sockets-state",
    "relUrl": "/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html#sockets-state"
  },"107": {
    "doc": "Sockets State",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html#properties",
    "relUrl": "/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html#properties"
  },"108": {
    "doc": "Sockets State",
    "title": "Sockets State",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html",
    "relUrl": "/doc-custom-graphs/find-socket-states/custom-graph-socket-state.html"
  },"109": {
    "doc": "Socket",
    "title": "Socket",
    "content": "Definition of a single custom graph socket. The Socket node is a “probe”, akin to a cone in 3D space inside which connections can be found using a custom graph builder. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-socket.html#socket",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-socket.html#socket"
  },"110": {
    "doc": "Socket",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-socket.html#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-socket.html#properties"
  },"111": {
    "doc": "Socket",
    "title": "Socket",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/custom-graph-socket.html",
    "relUrl": "/doc-custom-graphs/custom-graph-build/custom-graph-socket.html"
  },"112": {
    "doc": "Debug",
    "title": "Debug",
    "content": "Working with PCGEx Debug nodes . Need-to-know stuff regarding internal visual debugging tools available in PCGEx. | Visual Debugging | Debugging inside subgraphs | Available debug nodes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#debug",
    "relUrl": "/doc-misc/debug/debug.html#debug"
  },"113": {
    "doc": "Debug",
    "title": "Visual Debugging",
    "content": "PCGEx Debug node draw debug information flagged as persistent, and as such needs to be flushed. However, there is currently no way in Unreal to selectively flush or tag debug line – hence they needs to be flushed before they are redrawn (Or thousands of thousands of line willl stack and bring the editor to its knees). This means you need to use Flush Debug in your flow before using other PCGEx’ debug nodes. The Flush Debug is basically there to manage execution order and ensure stuffs aren’t flushed from the buffer right after they’re drawn. It’s non-intrusive, and sometimes needs an update or two to work right. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#visual-debugging",
    "relUrl": "/doc-misc/debug/debug.html#visual-debugging"
  },"114": {
    "doc": "Debug",
    "title": "Debugging inside subgraphs",
    "content": ". When disabled, the input data of a node becomes a simple passthrough. The PCGExDebug property in the Debug details of the node is overridable and basically allows you to remotely disable the PCGEx debug nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#debugging-inside-subgraphs",
    "relUrl": "/doc-misc/debug/debug.html#debugging-inside-subgraphs"
  },"115": {
    "doc": "Debug",
    "title": "Available debug nodes",
    "content": "At the time of writing, there are three main debug nodes: . | Draw Attributes | Draw Edges | Draw Custom Graph | . Draw Edges and Draw Custom Graph are specific to Edges &amp; Custom Graph, however Draw Attributes is designed to work with any input. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html#available-debug-nodes",
    "relUrl": "/doc-misc/debug/debug.html#available-debug-nodes"
  },"116": {
    "doc": "Debug",
    "title": "Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/debug.html",
    "relUrl": "/doc-misc/debug/debug.html"
  },"117": {
    "doc": "Bridge Clusters",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. The Bridge Clusters node merge clusters using methods like Delaunay for organic results, Least Edges for minimal bridges, or Most Edges for comprehensive connections. Regardless of method, bridges always connect the two nearest cluster points. Table of content . | Properties | Bridge Methods | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html#bridge-clusters",
    "relUrl": "/doc-edges/edges-bridge-clusters.html#bridge-clusters"
  },"118": {
    "doc": "Bridge Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | Bridge Method | The method that will be used to identify and create bridges between clusters. | . Note that no matter what method is selected, a bridge will always connect the two closest points between two clusters. The chosen method only drives which cluster is connected to which other cluster. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html#properties",
    "relUrl": "/doc-edges/edges-bridge-clusters.html#properties"
  },"119": {
    "doc": "Bridge Clusters",
    "title": "Bridge Methods",
    "content": "| Method | Description | . | **Delaunay**| |   | . | | When using this method, each cluster is abstracted into a single bounding box that encapsulates all its vertices. A 3D Delaunay is generated using each bounding box center as an input, and the resulting delaunay edges are used as bridges. | . | **Least Edges**| |   | . | | When using this method, the algorithm will generate the least possible amount of bridge in order to connect all the clusters together.*Careful because it can easily look like a minimum spanning tree, but it’s not.* | . | **Most Edges**| |   | . | | When using this method, the algorithm will create a bridge from each cluster to every other cluster. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html#bridge-methods",
    "relUrl": "/doc-edges/edges-bridge-clusters.html#bridge-methods"
  },"120": {
    "doc": "Bridge Clusters",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html#inputs--outputs",
    "relUrl": "/doc-edges/edges-bridge-clusters.html#inputs--outputs"
  },"121": {
    "doc": "Bridge Clusters",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html#vtx--edges",
    "relUrl": "/doc-edges/edges-bridge-clusters.html#vtx--edges"
  },"122": {
    "doc": "Bridge Clusters",
    "title": "Bridge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-bridge-clusters.html",
    "relUrl": "/doc-edges/edges-bridge-clusters.html"
  },"123": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-draw.html#draw-edges",
    "relUrl": "/doc-edges/edges-draw.html#draw-edges"
  },"124": {
    "doc": "Draw Edges",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Color | Primary debug color | . | Secondary Color | If enabled, each cluster will have a different color ranging from the primary color to the secondary color, based on the dataset index in the inputs. | . | Thickness | Line thickness | . | Depth Priority | Debug draw depth priority. - -1 : draw on top of everything.- 0 : Regular depth sorting.- 1 : Draw behind everything. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-draw.html#properties",
    "relUrl": "/doc-edges/edges-draw.html#properties"
  },"125": {
    "doc": "Draw Edges",
    "title": "Inputs &amp; Outputs",
    "content": "This nodes forwards its inputs as if it was disabled. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-draw.html#inputs--outputs",
    "relUrl": "/doc-edges/edges-draw.html#inputs--outputs"
  },"126": {
    "doc": "Draw Edges",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-draw.html#vtx--edges",
    "relUrl": "/doc-edges/edges-draw.html#vtx--edges"
  },"127": {
    "doc": "Draw Edges",
    "title": "Draw Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-draw.html",
    "relUrl": "/doc-edges/edges-draw.html"
  },"128": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . The Find Contours nodes finds hole/outlines contours in a graph, using points as proximity seeds. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-find-contours.html#find-contours",
    "relUrl": "/doc-edges/edges-find-contours.html#find-contours"
  },"129": {
    "doc": "Find Contours",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-find-contours.html#properties",
    "relUrl": "/doc-edges/edges-find-contours.html#properties"
  },"130": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-find-contours.html",
    "relUrl": "/doc-edges/edges-find-contours.html"
  },"131": {
    "doc": "Prune by Length",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. A very circumvoluted approach to removing edges using length-based statistics. Table of content . | Properties . | Example | Measure | . | Mean Methods . | Average (Arithmetic mean) | Median | Mode (Shortest or Longest) | Central | Fixed | . | Usage . | Easy pruning . | Prune any edge longer than X | Prune any edge shorter than X | . | . | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#prune-by-length",
    "relUrl": "/doc-edges/edges-prune-by-length.html#prune-by-length"
  },"132": {
    "doc": "Prune by Length",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Measure | The \"unit\" system to use for measuring edges.*See [Measure](#measure).* | . | Mean Method | The method used to compute the **mean value** for a cluster.**The mean is what will be used as a reference values to prune edges.***See [Mean Methods](#mean-methods).* | . | Mode Tolerance | Value used for length equality tolerance.*Only available when using Mode (Shortest) or Mode (Longest) mean methods.* | . | **Pruning**| |   | . | Prune Below | If enabled, edges with a value **below the mean from the specified threshold** will be pruned. | . | Prune Above | If enabled, edges with a value **above the mean from the specified threshold** will be pruned. | . | **Output**| |   | . | **Mean** Attribute Name | When enabled, the computed mean value will be written to the specified attribute.*Useful for debugging, and probably has other applications.Note that the mean value is the same for all edges of a given cluster.* | . Keep in mind that calculations are relative to the mean value. Example . If using Relative measure and Average mean method, the mean value will be the average edge length. The Prune Below value is substracted from that average to find the minimum acceptable length (in relative terms), while the Prune Above value is added to that average to find the maximum acceptable length. In other words, if the average relative mean is 0.5, using Prune Below = 0.1 and Prune Above = 0.1, edges with a relative length &lt; 0.4 and &gt; 0.6 will be pruned. See Easy pruning if this gives you headaches. Measure . | Method | Description | . | **Relative** | When using Relative measure, edge lengths are pre-processed in order to find the min/max values, in order for the other calculation to work from **normalized** values.This is a bit clumsy to use, but also highly scalable if you’re doing sub-graph with no control over the input scale/dimensions. | . | **Absolute** | This measure uses the **raw** edge length.It’s very straighforward to use, but for obvious reason scales poorly; or through PCG overrides by forwarding params from outside. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#properties",
    "relUrl": "/doc-edges/edges-prune-by-length.html#properties"
  },"133": {
    "doc": "Prune by Length",
    "title": "Mean Methods",
    "content": "The mean method is used to find the reference threshold value that will be used by Prune Below and Prune Above. Below are an explanation on how each method works. For the example, let’s say we’re working on a cluster with 10 edges that have the following lengths: . Absolute lengths = [10, 20, 30, 40, 50, 50, 55, 60, 1200, 500] Relative lengths = [0.0083, 0.016, 0.025, 0.03, 0.041, 0.041, 0.045, 0.05, 1, 0.41] . | Average | Median | Mode | Central | Fixed | . Average (Arithmetic mean) . Average mean is, well, the averaged value of all the lengths. Absolute Average Mean = 201.5 Relative Average Mean = 0.125 . Median . Median uses the median value of all the available lengths, sorted. Sorted Absolute lengths = [10, 20, 30, 40, 50, 50, 55, 60, 500, 1200] Absolute Median Mean = 50 // [.., 50, 50, ...] Sorted Relative lengths = [0.0083, 0.016, 0.025, 0.03, 0.041, 0.041, 0.045, 0.05, 0.41, 1] Relative Median Mean = 0.041 // [.., 0.041, 0.041, ...] . Mode (Shortest or Longest) . See Mode (statitics) on Wikipedia. If there are concurrent mode values (multiple buckets containing the same amount of values), the selected mode variant allows you to select either the mode with the shortest lengths, or the one with the longest out of the available conflicting modes. Absolute Mode Mean = 50 // [50, 50] is the largest bucket of equal values Absolute Mode Mean = 0.041 // [0.041, 0.041] is the largest bucket of equal values . In this is scenario, there is no conflicting frequencies. The Mode Tolerance property is used to fill frequency buckets based on equality with already sampled values. Central . Central uses the middle value between the shortest and longest lengths as mean. Absolute Central Mean = 605 // 10 + (1200-10)/2 Relative Central Mean = 0.504 // 0.0083 + (1-0.0083)/2 . Fixed . Fixed mean is basically user-defined mean. This is the way to go if you don’t care about statistics or if you have a consistent, metrics-driven setup. This is the least flexible but most performant approach as there is no need to sample any statistics prior to pruning. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#mean-methods",
    "relUrl": "/doc-edges/edges-prune-by-length.html#mean-methods"
  },"134": {
    "doc": "Prune by Length",
    "title": "Usage",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#usage",
    "relUrl": "/doc-edges/edges-prune-by-length.html#usage"
  },"135": {
    "doc": "Prune by Length",
    "title": "Easy pruning",
    "content": "If you just want to prune edge above or below a certain fixed length – i.e any edge longer than 500 or any edge shorter than 42, just do the following: . Prune any edge longer than X . Measure: Absolute, Mean Method: Fixed, Mean Value: 500, Prune Above : 0. This basically prune all edges which length is above 500 + 0. Prune any edge shorter than X . Measure: Absolute, Mean Method: Fixed, Mean Value: 42, Prune Below : 0. This basically prune all edges which length is below 42 - 0. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#easy-pruning",
    "relUrl": "/doc-edges/edges-prune-by-length.html#easy-pruning"
  },"136": {
    "doc": "Prune by Length",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#inputs--outputs",
    "relUrl": "/doc-edges/edges-prune-by-length.html#inputs--outputs"
  },"137": {
    "doc": "Prune by Length",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html#vtx--edges",
    "relUrl": "/doc-edges/edges-prune-by-length.html#vtx--edges"
  },"138": {
    "doc": "Prune by Length",
    "title": "Prune by Length",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-prune-by-length.html",
    "relUrl": "/doc-edges/edges-prune-by-length.html"
  },"139": {
    "doc": "Write Edge Extras",
    "title": "Write Edge Extras",
    "content": "Compute edge extra data from its vertices . Related . | Interpolate | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-write-extras.html#write-edge-extras",
    "relUrl": "/doc-edges/edges-write-extras.html#write-edge-extras"
  },"140": {
    "doc": "Write Edge Extras",
    "title": "Properties",
    "content": ". DOC TDB . | Property | Description | . | **Blending Settings** | When enabled, the edge will inherit properties and attributes from its Start and End point.It uses Interpolate blending under the hood. | . | **Output** | |   | . | **Edge Length** Attribute Name | When enabled, the length of the edge will be written to the specified attribute.*The length of an edge is the distance between its start and end point.* | . DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-write-extras.html#properties",
    "relUrl": "/doc-edges/edges-write-extras.html#properties"
  },"141": {
    "doc": "Write Edge Extras",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-write-extras.html#inputs--outputs",
    "relUrl": "/doc-edges/edges-write-extras.html#inputs--outputs"
  },"142": {
    "doc": "Write Edge Extras",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-write-extras.html#vtx--edges",
    "relUrl": "/doc-edges/edges-write-extras.html#vtx--edges"
  },"143": {
    "doc": "Write Edge Extras",
    "title": "Write Edge Extras",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-write-extras.html",
    "relUrl": "/doc-edges/edges-write-extras.html"
  },"144": {
    "doc": "🝖 Adjacency",
    "title": "🝖 Adjacency",
    "content": "Check if adjacent node meet specific conditions . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-adjacency.html#adjacency",
    "relUrl": "/doc-graphs/node-states/filter-adjacency.html#adjacency"
  },"145": {
    "doc": "🝖 Adjacency",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-adjacency.html#properties",
    "relUrl": "/doc-graphs/node-states/filter-adjacency.html#properties"
  },"146": {
    "doc": "🝖 Adjacency",
    "title": "🝖 Adjacency",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-adjacency.html",
    "relUrl": "/doc-graphs/node-states/filter-adjacency.html"
  },"147": {
    "doc": "🝖 Compare (Dot)",
    "title": "🝖 Compare (Dot)",
    "content": "Compare the dot product of two vectors . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html#compare-dot",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html#compare-dot"
  },"148": {
    "doc": "🝖 Compare (Dot)",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html#properties"
  },"149": {
    "doc": "🝖 Compare (Dot)",
    "title": "🝖 Compare (Dot)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-dot-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-dot-compare.html"
  },"150": {
    "doc": "🝖 Compare (Mean)",
    "title": "🝖 Compare (Mean)",
    "content": "Compare the mean statistical value of two attributes . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html#compare-mean",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html#compare-mean"
  },"151": {
    "doc": "🝖 Compare (Mean)",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html#properties"
  },"152": {
    "doc": "🝖 Compare (Mean)",
    "title": "🝖 Compare (Mean)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-mean-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-mean-compare.html"
  },"153": {
    "doc": "🝖 Neighbors Count",
    "title": "🝖 Neighbors Count",
    "content": "Check a node’ neighbors count . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-neighbors-count.html#neighbors-count",
    "relUrl": "/doc-graphs/node-states/filter-neighbors-count.html#neighbors-count"
  },"154": {
    "doc": "🝖 Neighbors Count",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-neighbors-count.html#properties",
    "relUrl": "/doc-graphs/node-states/filter-neighbors-count.html#properties"
  },"155": {
    "doc": "🝖 Neighbors Count",
    "title": "🝖 Neighbors Count",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/filter-neighbors-count.html",
    "relUrl": "/doc-graphs/node-states/filter-neighbors-count.html"
  },"156": {
    "doc": "🝖 Compare (Numeric)",
    "title": "🝖 Compare (Numeric)",
    "content": "Numerical comparison of two attributes . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html#compare-numeric",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html#compare-numeric"
  },"157": {
    "doc": "🝖 Compare (Numeric)",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html#properties"
  },"158": {
    "doc": "🝖 Compare (Numeric)",
    "title": "🝖 Compare (Numeric)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-numeric-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-numeric-compare.html"
  },"159": {
    "doc": "🝖 Compare (String)",
    "title": "🝖 Compare (String)",
    "content": "String comparison of two attributes . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html#compare-string",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html#compare-string"
  },"160": {
    "doc": "🝖 Compare (String)",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html#properties",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html#properties"
  },"161": {
    "doc": "🝖 Compare (String)",
    "title": "🝖 Compare (String)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/filter-string-compare.html",
    "relUrl": "/doc-misc/uber-filter/filter-string-compare.html"
  },"162": {
    "doc": "Finding Nodes",
    "title": "Finding Nodes",
    "content": "Where and how to find nodes once in Unreal . Once the plugin is installed and compiled, nodes are available in any PCG Graph along with vanilla nodes. You can either find them in the explorer on the left, or in the list when right-clicking any empty space in the graph. All PCGEx nodes are prefixed with PCGEx | – which is a bit annoying at first, but quickly comes in handy to ensure nodes are clearly identifiable. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/finding-nodes.html#finding-nodes",
    "relUrl": "/installation/finding-nodes.html#finding-nodes"
  },"163": {
    "doc": "Finding Nodes",
    "title": "Finding Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/finding-nodes.html",
    "relUrl": "/installation/finding-nodes.html"
  },"164": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D",
    "content": "Outputs a 2D convex hull. The Convex Hull 2D Outputs the edges/graph of a 2D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. Related . | Working with Graphs | . Table of content . | Properties | Projection Settings | Inputs . | In | . | Outputs . | Vtx &amp; Edges | Paths | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#convex-hull-2d",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#convex-hull-2d"
  },"165": {
    "doc": "Convex Hull 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Prune Points | If enabled, Vtx that aren’t part of the hull are pruned from the output. | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#properties",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#properties"
  },"166": {
    "doc": "Convex Hull 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#projection-settings",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#projection-settings"
  },"167": {
    "doc": "Convex Hull 2D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#inputs",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#inputs"
  },"168": {
    "doc": "Convex Hull 2D",
    "title": "In",
    "content": "The input points to generate a Convex Hull from. Each input dataset is processed separately and will generate its own hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#in",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#in"
  },"169": {
    "doc": "Convex Hull 2D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#outputs",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#outputs"
  },"170": {
    "doc": "Convex Hull 2D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#vtx--edges",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#vtx--edges"
  },"171": {
    "doc": "Convex Hull 2D",
    "title": "Paths",
    "content": "TBD . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html#paths",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html#paths"
  },"172": {
    "doc": "Convex Hull 2D",
    "title": "Convex Hull 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-2d.html",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-2d.html"
  },"173": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": "Outputs a 3D convex hull. The Convex Hull 3D Outputs the edges/graph of a 3D convex hull. Prune points to exclude non-hull vertices. Specify attributes and projection settings for customization. Related . | Working with Graphs | . Table of content . | Properties | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#convex-hull-3d",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#convex-hull-3d"
  },"174": {
    "doc": "Convex Hull 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Prune Points | If enabled, Vtx that aren’t part of the hull are pruned from the output. | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to.*Disabled if points are pruned, since the output in that case will be exclusively hull points.* | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#properties",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#properties"
  },"175": {
    "doc": "Convex Hull 3D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#inputs",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#inputs"
  },"176": {
    "doc": "Convex Hull 3D",
    "title": "In",
    "content": "The input points to generate a Convex Hull from. Each input dataset is processed separately and will generate its own hull. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#in",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#in"
  },"177": {
    "doc": "Convex Hull 3D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#outputs",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#outputs"
  },"178": {
    "doc": "Convex Hull 3D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html#vtx--edges",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html#vtx--edges"
  },"179": {
    "doc": "Convex Hull 3D",
    "title": "Convex Hull 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/graphs-convex-hull-3d.html",
    "relUrl": "/doc-graphs/hulls/graphs-convex-hull-3d.html"
  },"180": {
    "doc": "Copy Clusters to Points",
    "title": "Copy Clusters to Points",
    "content": "DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-copy-clusters-to-points.html",
    "relUrl": "/doc-graphs/graphs-copy-clusters-to-points.html"
  },"181": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D",
    "content": "Outputs a 2D Delaunay triangulation. Output a 2D Delaunay triangulation with options like Urquhart graph, hull identification, and projection settings. ★ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Delaunay-2D . Related . | Working with Graphs | . Table of content . | Properties | Projection Settings | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#delaunay-2d",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#delaunay-2d"
  },"182": {
    "doc": "Delaunay 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| |   | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#properties",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#properties"
  },"183": {
    "doc": "Delaunay 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#projection-settings",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#projection-settings"
  },"184": {
    "doc": "Delaunay 2D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#inputs",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#inputs"
  },"185": {
    "doc": "Delaunay 2D",
    "title": "In",
    "content": "The input points to generate a Delaunay triangulation from. Each input dataset is processed separately and will generate its own triangulation. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#in",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#in"
  },"186": {
    "doc": "Delaunay 2D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#outputs",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#outputs"
  },"187": {
    "doc": "Delaunay 2D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html#vtx--edges",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html#vtx--edges"
  },"188": {
    "doc": "Delaunay 2D",
    "title": "Delaunay 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-2d.html",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-2d.html"
  },"189": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": "Outputs a 3D Delaunay tetrahedralization. Output a 3D Delaunay tetrahedralization with options like Urquhart graph, hull identification, and projection settings. ★ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Delaunay-3D . Related . | Working with Graphs | . Table of content . | Properties | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#delaunay-3d",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#delaunay-3d"
  },"190": {
    "doc": "Delaunay 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Urquhart | If enabled, outputs the [Urquhart](https://en.wikipedia.org/wiki/Urquhart_graph) graph instead of Delaunay. | . | **Hull Identification**| |   | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#properties",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#properties"
  },"191": {
    "doc": "Delaunay 3D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#inputs",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#inputs"
  },"192": {
    "doc": "Delaunay 3D",
    "title": "In",
    "content": "The input points to generate a Delaunay tetrahedralization from. Each input dataset is processed separately and will generate its own tetrahedralization. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#in",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#in"
  },"193": {
    "doc": "Delaunay 3D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#outputs",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#outputs"
  },"194": {
    "doc": "Delaunay 3D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html#vtx--edges",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html#vtx--edges"
  },"195": {
    "doc": "Delaunay 3D",
    "title": "Delaunay 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-delaunay-3d.html",
    "relUrl": "/doc-graphs/classics/graphs-delaunay-3d.html"
  },"196": {
    "doc": "Filter Clusters",
    "title": "Filter Clusters",
    "content": "Filter out cluster based on proximity to target points . The Fuse Clusters node … . Related . | Working with Graphs | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-filter-clusters.html#filter-clusters",
    "relUrl": "/doc-graphs/graphs-filter-clusters.html#filter-clusters"
  },"197": {
    "doc": "Filter Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-filter-clusters.html#properties",
    "relUrl": "/doc-graphs/graphs-filter-clusters.html#properties"
  },"198": {
    "doc": "Filter Clusters",
    "title": "Filter Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-filter-clusters.html",
    "relUrl": "/doc-graphs/graphs-filter-clusters.html"
  },"199": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": "Find the contour of a cluster or cell. The Find Contours nodes finds hole/outlines contours in a graph, using points as proximity seeds. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-find-contours.html#find-contours",
    "relUrl": "/doc-graphs/graphs-find-contours.html#find-contours"
  },"200": {
    "doc": "Find Contours",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-find-contours.html#properties",
    "relUrl": "/doc-graphs/graphs-find-contours.html#properties"
  },"201": {
    "doc": "Find Contours",
    "title": "Find Contours",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-find-contours.html",
    "relUrl": "/doc-graphs/graphs-find-contours.html"
  },"202": {
    "doc": "Fuse Clusters Local",
    "title": "Fuse Clusters Local",
    "content": "Find internal Point/Edge and Edge/Edge intersections. The Fuse Clusters Local node … . Related . | Working with Graphs | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#fuse-clusters-local",
    "relUrl": "/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#fuse-clusters-local"
  },"203": {
    "doc": "Fuse Clusters Local",
    "title": "Properties",
    "content": ". Current implementation is WIP: not all attributes from the inputs are not forwarded to the output graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#properties",
    "relUrl": "/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#properties"
  },"204": {
    "doc": "Fuse Clusters Local",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#inputs--outputs",
    "relUrl": "/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#inputs--outputs"
  },"205": {
    "doc": "Fuse Clusters Local",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#vtx--edges",
    "relUrl": "/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html#vtx--edges"
  },"206": {
    "doc": "Fuse Clusters Local",
    "title": "Fuse Clusters Local",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html",
    "relUrl": "/doc-graphs/fuse-clusters/graphs-fuse-clusters-local.html"
  },"207": {
    "doc": "Make Clusters Unique",
    "title": "Make Clusters Unique",
    "content": "Create a forward copy of input clusters with unique tags. The Copy Cluster … . Related . | Working with Graphs | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-make-clusters-unique.html#make-clusters-unique",
    "relUrl": "/doc-graphs/graphs-make-clusters-unique.html#make-clusters-unique"
  },"208": {
    "doc": "Make Clusters Unique",
    "title": "Properties",
    "content": ". This node has no specific properties. This node creates a duplicate of the input data with new unique cluster tags. This node primarily exists to allow certain advanced operations such as copying an existing graph configuration, modify it and then fuse it with the original one. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-make-clusters-unique.html#properties",
    "relUrl": "/doc-graphs/graphs-make-clusters-unique.html#properties"
  },"209": {
    "doc": "Make Clusters Unique",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-make-clusters-unique.html#inputs--outputs",
    "relUrl": "/doc-graphs/graphs-make-clusters-unique.html#inputs--outputs"
  },"210": {
    "doc": "Make Clusters Unique",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-make-clusters-unique.html#vtx--edges",
    "relUrl": "/doc-graphs/graphs-make-clusters-unique.html#vtx--edges"
  },"211": {
    "doc": "Make Clusters Unique",
    "title": "Make Clusters Unique",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-make-clusters-unique.html",
    "relUrl": "/doc-graphs/graphs-make-clusters-unique.html"
  },"212": {
    "doc": "Mesh to Clusters",
    "title": "Mesh to Clusters",
    "content": "DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-mesh-to-clusters.html",
    "relUrl": "/doc-graphs/graphs-mesh-to-clusters.html"
  },"213": {
    "doc": "Pack Clusters",
    "title": "Pack Clusters",
    "content": "Pack Clusters . Related . | Working with Graphs | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-pack-clusters.html#pack-clusters",
    "relUrl": "/doc-graphs/graphs-pack-clusters.html#pack-clusters"
  },"214": {
    "doc": "Pack Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-pack-clusters.html#properties",
    "relUrl": "/doc-graphs/graphs-pack-clusters.html#properties"
  },"215": {
    "doc": "Pack Clusters",
    "title": "Pack Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-pack-clusters.html",
    "relUrl": "/doc-graphs/graphs-pack-clusters.html"
  },"216": {
    "doc": "Partition Vertices",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . The Partition Vertices splits input vtx into separate output groups, so that each Edge dataset is associated to a unique Vtx dataset (as opposed to a shared Vtx dataset for multiple edge groups) . Related . | Working with Graphs | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-partition-vertices.html#partition-vertices",
    "relUrl": "/doc-graphs/graphs-partition-vertices.html#partition-vertices"
  },"217": {
    "doc": "Partition Vertices",
    "title": "Properties",
    "content": ". This node has no specific properties. Contrary to other edge &amp; graph processors, this node does not produce a sanitized result. If the input is unsanitized, you may have unexpected results. This node primarily exists to allow certain advanced operations such as easily finding individual convex hull of isolated clusters. This is not a default behavior as doing so slightly increases processing times. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-partition-vertices.html#properties",
    "relUrl": "/doc-graphs/graphs-partition-vertices.html#properties"
  },"218": {
    "doc": "Partition Vertices",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-partition-vertices.html#inputs--outputs",
    "relUrl": "/doc-graphs/graphs-partition-vertices.html#inputs--outputs"
  },"219": {
    "doc": "Partition Vertices",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-partition-vertices.html#vtx--edges",
    "relUrl": "/doc-graphs/graphs-partition-vertices.html#vtx--edges"
  },"220": {
    "doc": "Partition Vertices",
    "title": "Partition Vertices",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-partition-vertices.html",
    "relUrl": "/doc-graphs/graphs-partition-vertices.html"
  },"221": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . The Sanitize Clusters ensures clusters are pathfinding-friendly. Fix broken connections, create new clusters as needed. Customize settings for isolated points, edge positions, and cluster sizes. Related . | Working with Graphs | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-sanitize-clusters.html#sanitize-clusters",
    "relUrl": "/doc-graphs/graphs-sanitize-clusters.html#sanitize-clusters"
  },"222": {
    "doc": "Sanitize Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | Prune Isolated Points | If enabled, input points that are not part of a valid cluster *(either no edges or pruned cluster)* will be omitted from the Vtx output.If disabled, the input points are forwarded as-is in the Vtx output (with added attributes). | . | Edge Position | If enabled, this sets the position of the Edge points to a lerp between their Start and End points.*By default, Edges point are placed at the center between their two Vtx.* | . | Min Cluster Size | If enabled, any cluster with less **edges** than specified will be pruned from the output. | . | Max Cluster Size | If enabled, any cluster with more **edges** than specified will be pruned from the output. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-sanitize-clusters.html#properties",
    "relUrl": "/doc-graphs/graphs-sanitize-clusters.html#properties"
  },"223": {
    "doc": "Sanitize Clusters",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-sanitize-clusters.html#inputs--outputs",
    "relUrl": "/doc-graphs/graphs-sanitize-clusters.html#inputs--outputs"
  },"224": {
    "doc": "Sanitize Clusters",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-sanitize-clusters.html#vtx--edges",
    "relUrl": "/doc-graphs/graphs-sanitize-clusters.html#vtx--edges"
  },"225": {
    "doc": "Sanitize Clusters",
    "title": "Sanitize Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-sanitize-clusters.html",
    "relUrl": "/doc-graphs/graphs-sanitize-clusters.html"
  },"226": {
    "doc": "Unpack Clusters",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . Related . | Working with Graphs | . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-unpack-clusters.html#unpack-clusters",
    "relUrl": "/doc-graphs/graphs-unpack-clusters.html#unpack-clusters"
  },"227": {
    "doc": "Unpack Clusters",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-unpack-clusters.html#properties",
    "relUrl": "/doc-graphs/graphs-unpack-clusters.html#properties"
  },"228": {
    "doc": "Unpack Clusters",
    "title": "Unpack Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/graphs-unpack-clusters.html",
    "relUrl": "/doc-graphs/graphs-unpack-clusters.html"
  },"229": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D",
    "content": "Outputs a 2D Voronoi graph. The Voronoi 2D node outputs a 2D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ★ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Voronoi-2D . Related . | Working with Graphs | . Table of content . | Properties | Method | Projection Settings | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#voronoi-2d",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#voronoi-2d"
  },"230": {
    "doc": "Voronoi 2D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Method | The method used to position Voronoi’ sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points’ bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Graphs.* | . | **Hull Identification**| |   | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . | **Projection Settings** | Projection settings allow you to control the projection plane used to compute the graph in 2D. See [Projection Settings](#settings-projection) | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#properties",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#properties"
  },"231": {
    "doc": "Voronoi 2D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi’ site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay’ triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#method",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#method"
  },"232": {
    "doc": "Voronoi 2D",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#projection-settings",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#projection-settings"
  },"233": {
    "doc": "Voronoi 2D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#inputs",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#inputs"
  },"234": {
    "doc": "Voronoi 2D",
    "title": "In",
    "content": "The input points to generate a Voronoi graph from. Each input dataset is processed separately and will generate its own graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#in",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#in"
  },"235": {
    "doc": "Voronoi 2D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#outputs",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#outputs"
  },"236": {
    "doc": "Voronoi 2D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html#vtx--edges",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html#vtx--edges"
  },"237": {
    "doc": "Voronoi 2D",
    "title": "Voronoi 2D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-2d.html",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-2d.html"
  },"238": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": "Outputs a 3D Voronoi graph. The Voronoi 3D node outputs a 3D Voronoi graph with options like balanced, canon, or centroid positioning. Adjust bounds, prune sites, and mark edges on the hull. ★ See Example Project @ EdgesAndGraphs/PCGEx_Graph_Voronoi-3D . Related . | Working with Graphs | . Table of content . | Properties | Method | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#voronoi-3d",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#voronoi-3d"
  },"239": {
    "doc": "Voronoi 3D",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Method | The method used to position Voronoi’ sites. See [Method](#method) | . | Bounds Cutoff | If enabled, voronoi sites outside of the input points’ bounds will be pruned. Bounds are expanded by this property.*Activating this will enable graph output settings, as the graph is no longer guaranteed to be complete. See Working with Graphs.* | . | **Hull Identification**| |   | . | **Hull** Attribute Name | Name of the attribute to write the \"is on hull\" flag to. | . | Mark Edge on Touch | If enabled, edges that *connects to a hull point without being on the hull themselves* will be considered as \"on hull\". | . Note that the hull is optimized and will ignore points that lie on the hull but don’t mathematically influence it (i.e collinear/coplanar points). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#properties",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#properties"
  },"240": {
    "doc": "Voronoi 3D",
    "title": "Method",
    "content": "There are three available methods to drive Voronoi’ site position in space. | Method | Description | . | Balanced | Uses Canon site location when site is within bounds, and fallbacks to Centroid otherwise. | . | Canon | Uses the real, computed voronoi site position.**Sites on the outskirts of the graph usually have extreme deformations.** | . | Centroid | Uses the delaunay’ triangulation centroid instead of the real position.*This is usually good looking, but can lead to overlapping edges.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#method",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#method"
  },"241": {
    "doc": "Voronoi 3D",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#inputs",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#inputs"
  },"242": {
    "doc": "Voronoi 3D",
    "title": "In",
    "content": "The input points to generate a Voronoi graph from. Each input dataset is processed separately and will generate its own graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#in",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#in"
  },"243": {
    "doc": "Voronoi 3D",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#outputs",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#outputs"
  },"244": {
    "doc": "Voronoi 3D",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html#vtx--edges",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html#vtx--edges"
  },"245": {
    "doc": "Voronoi 3D",
    "title": "Voronoi 3D",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/graphs-voronoi-3d.html",
    "relUrl": "/doc-graphs/classics/graphs-voronoi-3d.html"
  },"246": {
    "doc": "🝰 Heuristic Attribute",
    "title": "🝰 Heuristic Attribute",
    "content": "Attribute-driven heuristics . DOC TDB – Heuristics underwent a thorough refactor that isn’t documented yet. See the example project! . Heuristics Attribute allows fine-grained and precise control over pathfinding constraints by leveraging user-defined attributes. When dealing with modifiers, keep in mind that lower values are considered better than higher ones by the Search algorithms. Checklist . | Properties | Individual Modifier . | Properties . | Weight | Score Curve 📌 | . | Examples . | A - Linear | B - Expo | C - Inverse Expo | D - Yoyo | . | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#heuristic-attribute",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#heuristic-attribute"
  },"247": {
    "doc": "🝰 Heuristic Attribute",
    "title": "Properties",
    "content": "| Property | Description | . | Reference Weight | The reference weight is used internally by heuristics to \"adapt\" its scale against modifiers. *In other words, if the heuristic module itself was outputing a value like a modifier, this would its Weight property.* | . | **Modifier List** | A list of individual modifiers. Their values are accumulated per Source, and the final sum is used by the Search algorithm. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#properties"
  },"248": {
    "doc": "🝰 Heuristic Attribute",
    "title": "Individual Modifier",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#individual-modifier",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#individual-modifier"
  },"249": {
    "doc": "🝰 Heuristic Attribute",
    "title": "Properties",
    "content": "| Property | Description | . | Enabled | If disabled, this modifier will be ignored by the pathfinding process. *This is basically a QoL toggle to facilitate experimentation and better understand the impact of a specific modifier when they start pilling up.* | . | Source | Source define if the attribute value of the modifier is fetched from the Vtx point data, or from the Edge point data.*See Pathfinding.* | . | **Weight** | The weight of a modifier represent its final maximum value. | . | Selector | Attribute to read modifier value from. Reads a double.*See Attribute Selectors.* | . | Local Weight | If enabled, the weight used for the modifier is fetched from a local attribute (same Source` as base value), allowing for per-point weight. | . | Score Curve | The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit.More infos below. | . Weight . Under the hood, the value of a modifier is remapped from its min/max to 0-1. That remapped value is used to sample the (Score Curve)[#score-curve] and then that value is multiplied by the weight. Depending on the selected Search, this value is post-processed to ensure it is absolute (non-negative) . Score Curve 📌 . The score curve is a key control element of the final modifier value. It allows your to fully leverage the range of the input attribute value in any way you see fit. The curve is expected to stay normalized in the 0-1 range on the y axis, and is sampled in the 0-1 range on the x axis. Just keep in mind the resulting sampled value will be made absolute (non-negative), and is used as a multiplier. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#properties-1",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#properties-1"
  },"250": {
    "doc": "🝰 Heuristic Attribute",
    "title": "Examples",
    "content": "Say we set-up a point attribute modifier using MyWeightAttribute, which has raw values ranging from -50 to 50, with a weight of 100. | Raw values will be remapped to 0-1 | The curve will be sampled, then multiplied by the weight. | . A - Linear . This is the default, linear curve. It doesn’t modulate weight, so the final weight will closely match the attribute range. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.5 | **50** | . | 25 | 0.75 | 0.75 | **75** | . | 50 | 1.0 | 1.0 | **100** | . B - Expo . Exponential curve is very useful to emphasize higher values and “ignore” lower ones. This can be especially useful when the attribute is for example the edge length, the resulting weight would strongly discourage long edges . | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0.0 | **0** | . | -25 | 0.25 | 0.01 | **1** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.25 | **25** | . | 50 | 1.0 | 1.0 | **100** | . C - Inverse Expo . Inverted curve (exponential or not) curve is very useful to, well, inverse the weight. This is especially handy if you want to discourage smaller values and ignore higher ones. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 1 | **100** | . | -25 | 0.25 | 0.25 | **25** | . | 0 | 0.5 | 0.05 | **5** | . | 25 | 0.75 | 0.01 | **1** | . | 50 | 1.0 | 0 | **0** | . D - Yoyo . This is really just here to make a comparison with other more classic approaches. This resulting weight would ignore extreme values inside the range and strongly discourage anything closer to the center. | Raw attribute value | → Remapped to | → Sampled at | → Final weight | . | -50 | 0.0 | 0 | **0** | . | -25 | 0.25 | 0.5 | **50** | . | 0 | 0.5 | 1 | **100** | . | 25 | 0.75 | 0.5 | **50** | . | 50 | 1.0 | 0 | **0** | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html#examples",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html#examples"
  },"251": {
    "doc": "🝰 Heuristic Attribute",
    "title": "🝰 Heuristic Attribute",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-attribute.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-attribute.html"
  },"252": {
    "doc": "🝰 Direction",
    "title": "🝰 Direction",
    "content": "Subtitle . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-direction.html#direction",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-direction.html#direction"
  },"253": {
    "doc": "🝰 Direction",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-direction.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-direction.html#properties"
  },"254": {
    "doc": "🝰 Direction",
    "title": "🝰 Direction",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-direction.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-direction.html"
  },"255": {
    "doc": "🝰 Shortest Distance",
    "title": "🝰 Shortest Distance",
    "content": "Subtitle . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html#shortest-distance",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html#shortest-distance"
  },"256": {
    "doc": "🝰 Shortest Distance",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html#properties"
  },"257": {
    "doc": "🝰 Shortest Distance",
    "title": "🝰 Shortest Distance",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-distance.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-distance.html"
  },"258": {
    "doc": "🝰 Least Nodes",
    "title": "🝰 Least Nodes",
    "content": "Subtitle . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html#least-nodes",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html#least-nodes"
  },"259": {
    "doc": "🝰 Least Nodes",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html#properties"
  },"260": {
    "doc": "🝰 Least Nodes",
    "title": "🝰 Least Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-node-count.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-node-count.html"
  },"261": {
    "doc": "🝰 Steepness",
    "title": "🝰 Steepness",
    "content": "Favor flat paths . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html#steepness",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html#steepness"
  },"262": {
    "doc": "🝰 Steepness",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html#properties",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html#properties"
  },"263": {
    "doc": "🝰 Steepness",
    "title": "🝰 Steepness",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/heuristic-steepness.html",
    "relUrl": "/doc-pathfinding/heuristics/heuristic-steepness.html"
  },"264": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": "Arithmetic graph generation &amp; operations . Easily generate relational structures from points . This section contains simple graph generators and utilities. Make sure to check out Working with Graphs first. It is tightly related to Edges and Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#graphs",
    "relUrl": "/doc-graphs/#graphs"
  },"265": {
    "doc": "Graphs",
    "title": "Graphs Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#graphs-nodes",
    "relUrl": "/doc-graphs/#graphs-nodes"
  },"266": {
    "doc": "Graphs",
    "title": "Classics",
    "content": "Delaunay, Voronoi . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#classics",
    "relUrl": "/doc-graphs/#classics"
  },"267": {
    "doc": "Graphs",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable graph clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#mesh-to-clusters",
    "relUrl": "/doc-graphs/#mesh-to-clusters"
  },"268": {
    "doc": "Graphs",
    "title": "Find Contours",
    "content": "Find the contour of a cluster or cell. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#find-contours",
    "relUrl": "/doc-graphs/#find-contours"
  },"269": {
    "doc": "Graphs",
    "title": "Find Node States",
    "content": "Find conditional-based states to nodes within a graph . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#find-node-states",
    "relUrl": "/doc-graphs/#find-node-states"
  },"270": {
    "doc": "Graphs",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#partition-vertices",
    "relUrl": "/doc-graphs/#partition-vertices"
  },"271": {
    "doc": "Graphs",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#sanitize-clusters",
    "relUrl": "/doc-graphs/#sanitize-clusters"
  },"272": {
    "doc": "Graphs",
    "title": "Filter Clusters",
    "content": "Filter out cluster based on proximity to target points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#filter-clusters",
    "relUrl": "/doc-graphs/#filter-clusters"
  },"273": {
    "doc": "Graphs",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#fuse-clusters",
    "relUrl": "/doc-graphs/#fuse-clusters"
  },"274": {
    "doc": "Graphs",
    "title": "Hulls",
    "content": "Convex hull algorithms . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#hulls",
    "relUrl": "/doc-graphs/#hulls"
  },"275": {
    "doc": "Graphs",
    "title": "Copy Clusters to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#copy-clusters-to-points",
    "relUrl": "/doc-graphs/#copy-clusters-to-points"
  },"276": {
    "doc": "Graphs",
    "title": "Make Clusters Unique",
    "content": "Create a forward copy of input clusters with unique tags. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#make-clusters-unique",
    "relUrl": "/doc-graphs/#make-clusters-unique"
  },"277": {
    "doc": "Graphs",
    "title": "Pack Clusters",
    "content": "Pack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#pack-clusters",
    "relUrl": "/doc-graphs/#pack-clusters"
  },"278": {
    "doc": "Graphs",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/#unpack-clusters",
    "relUrl": "/doc-graphs/#unpack-clusters"
  },"279": {
    "doc": "Graphs",
    "title": "Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/",
    "relUrl": "/doc-graphs/"
  },"280": {
    "doc": "Relax",
    "title": "Relax",
    "content": "Relax points positions of a graph. The Relax Edges node shifts points gradually in order to smooth position in relation to their neighbors. Related . | . Table of content . | Properties | Relaxing modules | Inputs &amp; Outputs . | Vtx &amp; Edges | . | Examples | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#relax",
    "relUrl": "/doc-edges/edges-relax/#relax"
  },"281": {
    "doc": "Relax",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Iterations | The number of time to additively apply the relaxing algorithm.Each iteration uses the previous’ iteration results. | . | Influence | Interpolate between the original position and the final, relaxed position.- 1.0 means fully relaxed- 0.0 means the original position is preserved. | . | **Local Influence** | When enabled, this allows you to use a per-point influence value.*This is especially useful for \"pinning\" specific points.* | . | Progressive Influence | When enabled, Influence is **applied between each iteration**, instead of once after all iterations have been processed.*This is more expensive but yield more good looking results, especially with non-uniform local influence.* | . | Relaxing | This property lets you select which kind of relaxing you want to apply to the input clusters.**Specifics of the instanced module will be available under its inner Settings section.***See .* | . Note that while the default Influence is clamped, the local influence is purposefully not clamped, allowing for undershooting or overshooting the influence’ interpolation between the relaxed and original position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#properties",
    "relUrl": "/doc-edges/edges-relax/#properties"
  },"282": {
    "doc": "Relax",
    "title": "Relaxing modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#relaxing-modules",
    "relUrl": "/doc-edges/edges-relax/#relaxing-modules"
  },"283": {
    "doc": "Relax",
    "title": "Laplacian",
    "content": "Laplacian / Poisson relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#laplacian",
    "relUrl": "/doc-edges/edges-relax/#laplacian"
  },"284": {
    "doc": "Relax",
    "title": "Force Directed",
    "content": "Force-directed relaxation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#force-directed",
    "relUrl": "/doc-edges/edges-relax/#force-directed"
  },"285": {
    "doc": "Relax",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#inputs--outputs",
    "relUrl": "/doc-edges/edges-relax/#inputs--outputs"
  },"286": {
    "doc": "Relax",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#vtx--edges",
    "relUrl": "/doc-edges/edges-relax/#vtx--edges"
  },"287": {
    "doc": "Relax",
    "title": "Examples",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/#examples",
    "relUrl": "/doc-edges/edges-relax/#examples"
  },"288": {
    "doc": "Relax",
    "title": "Relax",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/",
    "relUrl": "/doc-edges/edges-relax/"
  },"289": {
    "doc": "Refine",
    "title": "Refine",
    "content": "Algorithmic edge refinement . The Refine Edges node allows for algorithmic pruning of edges, in order to enforce specific properties into your graph. Related . | . Table of content . | Properties | Refining modules | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#refine",
    "relUrl": "/doc-edges/edges-refine/#refine"
  },"290": {
    "doc": "Refine",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Refinement | This property lets you select which kind of refinement you want to apply to the input clusters.**Specifics of the instanced module will be available under its inner Settings section.***See .* | . | **Graph Output Settings** | *See Working with Graphs.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#properties",
    "relUrl": "/doc-edges/edges-refine/#properties"
  },"291": {
    "doc": "Refine",
    "title": "Refining modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#refining-modules",
    "relUrl": "/doc-edges/edges-refine/#refining-modules"
  },"292": {
    "doc": "Refine",
    "title": "Minimum Spanning Tree",
    "content": "Implementation of Prim’s Minimum Spanning Tree algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#minimum-spanning-tree",
    "relUrl": "/doc-edges/edges-refine/#minimum-spanning-tree"
  },"293": {
    "doc": "Refine",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#inputs--outputs",
    "relUrl": "/doc-edges/edges-refine/#inputs--outputs"
  },"294": {
    "doc": "Refine",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/#vtx--edges",
    "relUrl": "/doc-edges/edges-refine/#vtx--edges"
  },"295": {
    "doc": "Refine",
    "title": "Refine",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/",
    "relUrl": "/doc-edges/edges-refine/"
  },"296": {
    "doc": "Custom Graphs",
    "title": "Custom Graphs",
    "content": "Custom graph creation from user-defined rules . Establish connections between points using entierely custom rules. DOC TDB . Contrary to mathematical graphs built with the Graphs nodes, Custom Graphs have no intrinsinc –nor guaranteed– properties. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#custom-graphs",
    "relUrl": "/doc-custom-graphs/#custom-graphs"
  },"297": {
    "doc": "Custom Graphs",
    "title": "Overview",
    "content": "The basic workflow is as follow: . | Define custom graph params using . These params are a list of sockets, each of which defines a “probe” for a single connection. | Process points dataset using the previously defined params, and Build Custom Graph. | You now have an abstract graph – it’s super useful just yet | Push the custom graph a Find Edge Clusters node so you have Vtx and Edges to work with the rest of the toolkit! | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#overview",
    "relUrl": "/doc-custom-graphs/#overview"
  },"298": {
    "doc": "Custom Graphs",
    "title": "How Sockets Works",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#how-sockets-works",
    "relUrl": "/doc-custom-graphs/#how-sockets-works"
  },"299": {
    "doc": "Custom Graphs",
    "title": "Custom Graph Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#custom-graph-nodes",
    "relUrl": "/doc-custom-graphs/#custom-graph-nodes"
  },"300": {
    "doc": "Custom Graphs",
    "title": "Build Custom Graph",
    "content": "Find &amp; build relationships between points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#build-custom-graph",
    "relUrl": "/doc-custom-graphs/#build-custom-graph"
  },"301": {
    "doc": "Custom Graphs",
    "title": "Find Sockets State",
    "content": "Find &amp; writes socket states data to points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#find-sockets-state",
    "relUrl": "/doc-custom-graphs/#find-sockets-state"
  },"302": {
    "doc": "Custom Graphs",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#find-edge-clusters",
    "relUrl": "/doc-custom-graphs/#find-edge-clusters"
  },"303": {
    "doc": "Custom Graphs",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph half-edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#draw-custom-graph",
    "relUrl": "/doc-custom-graphs/#draw-custom-graph"
  },"304": {
    "doc": "Custom Graphs",
    "title": "Sanitize Custom Graph",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#sanitize-custom-graph",
    "relUrl": "/doc-custom-graphs/#sanitize-custom-graph"
  },"305": {
    "doc": "Custom Graphs",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#delete",
    "relUrl": "/doc-custom-graphs/#delete"
  },"306": {
    "doc": "Custom Graphs",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/#promote-edges",
    "relUrl": "/doc-custom-graphs/#promote-edges"
  },"307": {
    "doc": "Custom Graphs",
    "title": "Custom Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/",
    "relUrl": "/doc-custom-graphs/"
  },"308": {
    "doc": "Blending Modules",
    "title": "Blending Modules",
    "content": "An inventory of the available blending modules. Blending modules are primarily used by nodes like Subdivide, as well as under the hood of many nodes where only a sub-selection of parameters will be exposed (as opposed to full module selection) . Blending operate on sub-points groups, not entire groups – what “sub-points” means is up to the node using the blending. Hence, “First” and “Last” refers to the first &amp; last of the sub-points. Checklist . | Modules | Common Properties . | Blendmodes | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#blending-modules",
    "relUrl": "/doc-misc/blending-modules/#blending-modules"
  },"309": {
    "doc": "Blending Modules",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#modules",
    "relUrl": "/doc-misc/blending-modules/#modules"
  },"310": {
    "doc": "Blending Modules",
    "title": "Interpolate",
    "content": "Interpolate values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#interpolate",
    "relUrl": "/doc-misc/blending-modules/#interpolate"
  },"311": {
    "doc": "Blending Modules",
    "title": "Inherit First",
    "content": "Copy the first point’ values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#inherit-first",
    "relUrl": "/doc-misc/blending-modules/#inherit-first"
  },"312": {
    "doc": "Blending Modules",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#inherit-last",
    "relUrl": "/doc-misc/blending-modules/#inherit-last"
  },"313": {
    "doc": "Blending Modules",
    "title": "Common Properties",
    "content": "blending-common-properties . | Selector | Data | . | Default Blending | Pick the default blending mode for both point properties and attributes | . | Properties Overrides | Individual overrides for point properties | . | Attributes Overrides | Individual overrides for attributes | . Disregard which blendmode appears when greyed out, what is selected as Default Blending will be used for those. Blendmodes . | Selector | Data | . | None | Keep the first processed value | . | Weight | Weights all the processed values. **How that weight of each value is calculated depends on the node, module, and data set.** *More often than not, it comes down to a basic lerp.* | . | Average | Average all the processed values | . | Min | Keep the minimum value (component-wise) encountered during processing | . | Max | Keep the maximum value (component-wise) encountered during processing | . | Copy | Overwrites the value with the last processed one | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/#common-properties",
    "relUrl": "/doc-misc/blending-modules/#common-properties"
  },"314": {
    "doc": "Blending Modules",
    "title": "Blending Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/blending-modules/",
    "relUrl": "/doc-misc/blending-modules/"
  },"315": {
    "doc": "Find Sockets State",
    "title": "Find Sockets State",
    "content": "Find &amp; writes socket states data to points. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/#find-sockets-state",
    "relUrl": "/doc-custom-graphs/find-socket-states/#find-sockets-state"
  },"316": {
    "doc": "Find Sockets State",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/#properties",
    "relUrl": "/doc-custom-graphs/find-socket-states/#properties"
  },"317": {
    "doc": "Find Sockets State",
    "title": "Find Sockets State",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/find-socket-states/",
    "relUrl": "/doc-custom-graphs/find-socket-states/"
  },"318": {
    "doc": "Paths",
    "title": "Paths",
    "content": "Smooth, orient, tangents, … . Manipulate points as linearily ordered datasets . This section contains path-like data utilities. Paths are assumed to be a linearily-ordered list of points; most likely used to generate a spline. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths",
    "relUrl": "/doc-paths/#paths"
  },"319": {
    "doc": "Paths",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths-nodes",
    "relUrl": "/doc-paths/#paths-nodes"
  },"320": {
    "doc": "Paths",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#smooth",
    "relUrl": "/doc-paths/#smooth"
  },"321": {
    "doc": "Paths",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#orient",
    "relUrl": "/doc-paths/#orient"
  },"322": {
    "doc": "Paths",
    "title": "Blend",
    "content": "Blend individual points between from paths’ start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#blend",
    "relUrl": "/doc-paths/#blend"
  },"323": {
    "doc": "Paths",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#fuse-collinear",
    "relUrl": "/doc-paths/#fuse-collinear"
  },"324": {
    "doc": "Paths",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#subdivide",
    "relUrl": "/doc-paths/#subdivide"
  },"325": {
    "doc": "Paths",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#write-tangents",
    "relUrl": "/doc-paths/#write-tangents"
  },"326": {
    "doc": "Paths",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/#paths-to-edge-clusters",
    "relUrl": "/doc-paths/#paths-to-edge-clusters"
  },"327": {
    "doc": "Paths",
    "title": "Paths",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/",
    "relUrl": "/doc-paths/"
  },"328": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": "Subtitle . Table of content . | Properties | Tangents modules | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#write-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#write-tangents"
  },"329": {
    "doc": "Write Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Arrive Name | Attribute to write the Arrive tangent to. | . | Leave Name | Attribute to write the Leave tangent to. | . | **Tangents** | This property lets you select which kind of tangent maths you want to apply to the input paths.*See [Available Tangents Modules](#available-tangents-modules).* | . The name used for Arrive &amp; Leave should be used as custom tangent attributes when using the Create Spline PCG Node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#properties",
    "relUrl": "/doc-paths/paths-write-tangents/#properties"
  },"330": {
    "doc": "Write Tangents",
    "title": "Tangents modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#tangents-modules",
    "relUrl": "/doc-paths/paths-write-tangents/#tangents-modules"
  },"331": {
    "doc": "Write Tangents",
    "title": "Auto Tangents",
    "content": "Neighbor-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#auto-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#auto-tangents"
  },"332": {
    "doc": "Write Tangents",
    "title": "Custom Tangents",
    "content": "Custom attribute-based tangents . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#custom-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/#custom-tangents"
  },"333": {
    "doc": "Write Tangents",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#inputs",
    "relUrl": "/doc-paths/paths-write-tangents/#inputs"
  },"334": {
    "doc": "Write Tangents",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#in",
    "relUrl": "/doc-paths/paths-write-tangents/#in"
  },"335": {
    "doc": "Write Tangents",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#outputs",
    "relUrl": "/doc-paths/paths-write-tangents/#outputs"
  },"336": {
    "doc": "Write Tangents",
    "title": "Out",
    "content": "Same as Inputs with the added metadata. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/#out",
    "relUrl": "/doc-paths/paths-write-tangents/#out"
  },"337": {
    "doc": "Write Tangents",
    "title": "Write Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/",
    "relUrl": "/doc-paths/paths-write-tangents/"
  },"338": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. Table of content . | Properties . | Partition Rule | . | Why upscale? | How partition Index works . | Raw partition value | Index partition | . | Key Sum | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#partition-by-values",
    "relUrl": "/doc-misc/partition-by-values/#partition-by-values"
  },"339": {
    "doc": "Partition by Values",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Split Output | Whether to output individual partitions or simply write the unique partition key to an attribute. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | Key Sum | Outputs the sum of all partition keys to a int64 attribute.**This value is unlikely to be unique, but can come in handy for filtering purposes.**See [Key Sum](#key-sum) | . Partition Rule . | Property | Description | . | Enabled | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Selector | An attribute or property that will be used for partitioning. See Attribute Selectors. | . | Filter Size | The size of the partition in relation the attribute or property uses.*Higher values means fewer larger partitions; smaller values means more smaller partitions.* | . | **Input pre-processing**| |   | . | Upscale | A scale factor to apply to the selected attribute value before partitioning.*This is especially useful when working with smaller range of values like Density.*See [Why upscale?](#why-upscale). | . | Offset | An offset value added to the selected attribute value before partitioning.**Offset is added to the Upscaled value.***This allow to shift separation ‘lines’ when using spatial values for partitioning.* | . | **Partition Key Attribute**| |   | . | **Key** Attribute Name | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Use Partition Index as Key | Whether to use the partition Index as a key *(starting at 0, up to N partitions)* or the default output *(actual under-the-hood value used to distinguish unique buckets)*.See [How partition Index works](#how-partition-index-works). | . | **Partition Tagging***Only if Split Output is enabled*| |   | . | Tag Prefix Name | Tag the data with the partition key, using the format Prefix::PartitionKey or Prefix::PartitionIndex | . | Tag Use Partition Index as Key | Whether to use the partition Index as a key.See [How partition Index works](#how-partition-index-works). | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#properties",
    "relUrl": "/doc-misc/partition-by-values/#properties"
  },"340": {
    "doc": "Partition by Values",
    "title": "Why upscale?",
    "content": "Under the hood, the Partition by Values broadcast and transform the reference values to a int64 used as a unique ID for individual partition. Because of that, any value in the -1..1 range (such as Density, Steepness etc) will be rounded to the nearest integer. Upscaling fixes this problem. For example, without upscaling, [0.1, 0.25, 0.01] will be partitioned as [0, 0, 0]; so a unique 0-id’d partition. On the other end, the same set [0.1, 0.25, 0.01] upscaled by a factor of 100 will be partitioned as [10, 25, 1]; so 3 separated partitions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#why-upscale",
    "relUrl": "/doc-misc/partition-by-values/#why-upscale"
  },"341": {
    "doc": "Partition by Values",
    "title": "How partition Index works",
    "content": "The for each partition, the corresponding attribute value is basically upscaled, offsetted and rounded down. This operation is repeated for each partition rule, and points are then distributed into buckets which all have the same partition keys. You can either output this “key” value as-is, or use the partition index. That index correspond to the partition order when all keys are sorted by ascending order. Using a single partition rule based on $Position.X, using a filter size of 10. On the left is the detail panel, on the right is a screencap of the value debugger for that rule . Raw partition value . Index partition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#how-partition-index-works",
    "relUrl": "/doc-misc/partition-by-values/#how-partition-index-works"
  },"342": {
    "doc": "Partition by Values",
    "title": "Key Sum",
    "content": "The Key Sum attribute value will be, well, the sum of all unique partitions keys. It’s useful in very specific scenarios, such as when partitioning based on booleans values, in order to filter partitions. Say you have three separate boolean (or 0-1) attributes, with a partition rule set up for each of these attributes; with Use Partition Index as Key enabled. Each partition will either have a 0 or 1 unique key, with a maximum of 9 partitions created (0 0 0, 1 0 0, 0 1 0 etc.). You will only have 4 different Key Sum: 0, 1, 2 and 3, which you can use as sort-of weak flag system: . | 0 0 0 = 0 | 1 0 0 = 1 | 0 1 0 = 1 | 0 0 1 = 1 | 1 1 0 = 2 | 0 1 1 = 2 | 1 0 1 = 2 | 1 1 1 = 3 | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#key-sum",
    "relUrl": "/doc-misc/partition-by-values/#key-sum"
  },"343": {
    "doc": "Partition by Values",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#inputs",
    "relUrl": "/doc-misc/partition-by-values/#inputs"
  },"344": {
    "doc": "Partition by Values",
    "title": "In",
    "content": "A single point dataset. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#in",
    "relUrl": "/doc-misc/partition-by-values/#in"
  },"345": {
    "doc": "Partition by Values",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#outputs",
    "relUrl": "/doc-misc/partition-by-values/#outputs"
  },"346": {
    "doc": "Partition by Values",
    "title": "Out",
    "content": "Depending on selected properties, can be the same as Inputs with the added metadata, or completely new per-partition datasets (usually more than what went it). Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/#out",
    "relUrl": "/doc-misc/partition-by-values/#out"
  },"347": {
    "doc": "Partition by Values",
    "title": "Partition by Values",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/",
    "relUrl": "/doc-misc/partition-by-values/"
  },"348": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . The Smooth node enhances path appearance. Customize closed paths, protect start and end points. Adjust global influence for overall smoothing. Use local influence to tailor per-point impact. Explore different smoothing types for varied effects. Table of content . | Properties | Smoothing modules | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#smooth",
    "relUrl": "/doc-paths/paths-smooth/#smooth"
  },"349": {
    "doc": "Smooth",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Preserve Start | If enabled, the first point will be unaffected by the smoothing*Same as if its local influence was 0.* | . | Preserve End | If enabled, the last point will be unaffected by the smoothing*Same as if its local influence was 0.* | . | Influence | Global influence.This is used as a value to lerp the smoothed points properties with the unsmoothed one.- 0 = Not smoothed- 1 = Fully smoothed | . | Local Influence | If enabled, the influence property is applied per-point using the specified attribute from the point being smoothed. | . | **Smoothing** | This property lets you select which kind of smoothing you want to apply to the input paths.*See [Available Smoothing Modules](#available-smoothing-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#properties",
    "relUrl": "/doc-paths/paths-smooth/#properties"
  },"350": {
    "doc": "Smooth",
    "title": "Smoothing modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#smoothing-modules",
    "relUrl": "/doc-paths/paths-smooth/#smoothing-modules"
  },"351": {
    "doc": "Smooth",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#radius",
    "relUrl": "/doc-paths/paths-smooth/#radius"
  },"352": {
    "doc": "Smooth",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#moving-average",
    "relUrl": "/doc-paths/paths-smooth/#moving-average"
  },"353": {
    "doc": "Smooth",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#inputs",
    "relUrl": "/doc-paths/paths-smooth/#inputs"
  },"354": {
    "doc": "Smooth",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#in",
    "relUrl": "/doc-paths/paths-smooth/#in"
  },"355": {
    "doc": "Smooth",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#outputs",
    "relUrl": "/doc-paths/paths-smooth/#outputs"
  },"356": {
    "doc": "Smooth",
    "title": "Out",
    "content": "Same as Inputs with the transformation applied. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/#out",
    "relUrl": "/doc-paths/paths-smooth/#out"
  },"357": {
    "doc": "Smooth",
    "title": "Smooth",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/",
    "relUrl": "/doc-paths/paths-smooth/"
  },"358": {
    "doc": "Fuse Clusters",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. The Fuse Clusters node … . Related . | Working with Graphs | . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/#fuse-clusters",
    "relUrl": "/doc-graphs/fuse-clusters/#fuse-clusters"
  },"359": {
    "doc": "Fuse Clusters",
    "title": "Properties",
    "content": ". Current implementation is WIP: not all attributes from the inputs are not forwarded to the output graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/#properties",
    "relUrl": "/doc-graphs/fuse-clusters/#properties"
  },"360": {
    "doc": "Fuse Clusters",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/#inputs--outputs",
    "relUrl": "/doc-graphs/fuse-clusters/#inputs--outputs"
  },"361": {
    "doc": "Fuse Clusters",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/#vtx--edges",
    "relUrl": "/doc-graphs/fuse-clusters/#vtx--edges"
  },"362": {
    "doc": "Fuse Clusters",
    "title": "Fuse Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/fuse-clusters/",
    "relUrl": "/doc-graphs/fuse-clusters/"
  },"363": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. Table of content . | Properties . | Rules ordering | Sorting Rule | . | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#sort-points",
    "relUrl": "/doc-misc/sort-points/#sort-points"
  },"364": {
    "doc": "Sort Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . Rules ordering . Rules are compared in the same order as in the property panel, starting at index 0. The sorting goes through each rules until it finds a valid comparison (non-equal values) – for each point. Sorting Rule . | Property | Description | . | Selector | An attribute or property to compare. See Attribute Selectors. | . | Tolerance | Equality tolerance used when comparing two values. | . | Invert Rule | Switches from the default &lt; comparison to &gt;. | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#properties",
    "relUrl": "/doc-misc/sort-points/#properties"
  },"365": {
    "doc": "Sort Points",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#inputs",
    "relUrl": "/doc-misc/sort-points/#inputs"
  },"366": {
    "doc": "Sort Points",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#in",
    "relUrl": "/doc-misc/sort-points/#in"
  },"367": {
    "doc": "Sort Points",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#outputs",
    "relUrl": "/doc-misc/sort-points/#outputs"
  },"368": {
    "doc": "Sort Points",
    "title": "Out",
    "content": "Same as Inputs but re-ordered. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/#out",
    "relUrl": "/doc-misc/sort-points/#out"
  },"369": {
    "doc": "Sort Points",
    "title": "Sort Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/",
    "relUrl": "/doc-misc/sort-points/"
  },"370": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": "Modules &amp; Documentation . This section is dedicated to broader pathfinding topics &amp; modules. Node specifics can be found on their dedicated node page. Pathfinding modules for Pathfinding nodes. Key steps include heuristic computation, goal picking, and search algorithms finding the best path based on weighted connections. 🝰 Heuristics and their weights are key to the operation. Note: Plot nodes handle point datasets differently, finding a path through each point in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding",
    "relUrl": "/doc-pathfinding/#pathfinding"
  },"371": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding",
    "relUrl": "/doc-pathfinding/#pathfinding"
  },"372": {
    "doc": "Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#edges-pathfinding",
    "relUrl": "/doc-pathfinding/#edges-pathfinding"
  },"373": {
    "doc": "Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-edges-pathfinding",
    "relUrl": "/doc-pathfinding/#plot-edges-pathfinding"
  },"374": {
    "doc": "Pathfinding",
    "title": "How pathfinding works",
    "content": "Although details vary a bit depending on the selected Search algorithm, the basic gist is, for each path &amp; cluster: . | Goal Pickers will find a suitable Seed and Goal point within the cluster. | The Search Algorithm will then find the best path that goes from Seed to Goal, accounting for its internal maths, and using 🝰 Heuristics as to determine whether one connection is better than another. | . Note: The Seed and Goal node are picked based on closest distance to input positions. Starting from the seed, each “next step” is weighted according to the V Vertex weight and the E Edge weight that connects to it. The search returns the path found with the lowest possible weight, or score. While the selected search algorithm is important, 🝰 Heuristics are more critical to the operation, as user-defined weights can drastically change and shape the path deemed best by the search. Note: The Plot nodes variations don’t have a goal picker and instead process each point data set as a list of points to go through from start to finish. The first point is the initial seed, the last point is the final goal, and then a path is found that goes through each point in-between, in order. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#how-pathfinding-works",
    "relUrl": "/doc-pathfinding/#how-pathfinding-works"
  },"375": {
    "doc": "Pathfinding",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#pathfinding-nodes",
    "relUrl": "/doc-pathfinding/#pathfinding-nodes"
  },"376": {
    "doc": "Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#edges-pathfinding-1",
    "relUrl": "/doc-pathfinding/#edges-pathfinding-1"
  },"377": {
    "doc": "Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-edges-pathfinding-1",
    "relUrl": "/doc-pathfinding/#plot-edges-pathfinding-1"
  },"378": {
    "doc": "Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/#navmesh-pathfinding"
  },"379": {
    "doc": "Pathfinding",
    "title": "Plot Navmesh Pathfinding",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#plot-navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/#plot-navmesh-pathfinding"
  },"380": {
    "doc": "Pathfinding",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#goal-pickers",
    "relUrl": "/doc-pathfinding/#goal-pickers"
  },"381": {
    "doc": "Pathfinding",
    "title": "Default",
    "content": "Match seeds to goals at the same index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#default",
    "relUrl": "/doc-pathfinding/#default"
  },"382": {
    "doc": "Pathfinding",
    "title": "Random",
    "content": "Match seeds to goals at a random index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#random",
    "relUrl": "/doc-pathfinding/#random"
  },"383": {
    "doc": "Pathfinding",
    "title": "Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#goal-from-attribute",
    "relUrl": "/doc-pathfinding/#goal-from-attribute"
  },"384": {
    "doc": "Pathfinding",
    "title": "Search",
    "content": "An inventory of the available search modules. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#search",
    "relUrl": "/doc-pathfinding/#search"
  },"385": {
    "doc": "Pathfinding",
    "title": "Contours",
    "content": "Contours . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#contours",
    "relUrl": "/doc-pathfinding/#contours"
  },"386": {
    "doc": "Pathfinding",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#dijkstra",
    "relUrl": "/doc-pathfinding/#dijkstra"
  },"387": {
    "doc": "Pathfinding",
    "title": "A* Star",
    "content": "A* Algorithm . ## . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/#a-star",
    "relUrl": "/doc-pathfinding/#a-star"
  },"388": {
    "doc": "Pathfinding",
    "title": "Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/",
    "relUrl": "/doc-pathfinding/"
  },"389": {
    "doc": "Build Custom Graph",
    "title": "Build Custom Graph",
    "content": "Find &amp; build relationships between points. The Build Custom Graph node generates connections between points according to a set of rules (Sockets). Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/#build-custom-graph",
    "relUrl": "/doc-custom-graphs/custom-graph-build/#build-custom-graph"
  },"390": {
    "doc": "Build Custom Graph",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/#properties",
    "relUrl": "/doc-custom-graphs/custom-graph-build/#properties"
  },"391": {
    "doc": "Build Custom Graph",
    "title": "Build Custom Graph",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/",
    "relUrl": "/doc-custom-graphs/custom-graph-build/"
  },"392": {
    "doc": "Classics",
    "title": "Classics",
    "content": "Delaunay, Voronoi . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/#classics",
    "relUrl": "/doc-graphs/classics/#classics"
  },"393": {
    "doc": "Classics",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/#properties",
    "relUrl": "/doc-graphs/classics/#properties"
  },"394": {
    "doc": "Classics",
    "title": "Classics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/classics/",
    "relUrl": "/doc-graphs/classics/"
  },"395": {
    "doc": "Sample Neighbors",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/#sample-neighbors",
    "relUrl": "/doc-sampling/sampling-neighbors/#sample-neighbors"
  },"396": {
    "doc": "Sample Neighbors",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/#properties"
  },"397": {
    "doc": "Sample Neighbors",
    "title": "Sample Neighbors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/",
    "relUrl": "/doc-sampling/sampling-neighbors/"
  },"398": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": "Data from nearest points, polylines, surfaces, … . Extract data from surroundings . This section contains raw data samplers. They’re mostly helpers/boilerplate code to sample and write data to attribute without providing immediate mean of using of the results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sampling",
    "relUrl": "/doc-sampling/#sampling"
  },"399": {
    "doc": "Sampling",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sampling-nodes",
    "relUrl": "/doc-sampling/#sampling-nodes"
  },"400": {
    "doc": "Sampling",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-surface",
    "relUrl": "/doc-sampling/#sample-nearest-surface"
  },"401": {
    "doc": "Sampling",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#guided-trace",
    "relUrl": "/doc-sampling/#guided-trace"
  },"402": {
    "doc": "Sampling",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-polyline",
    "relUrl": "/doc-sampling/#sample-nearest-polyline"
  },"403": {
    "doc": "Sampling",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-nearest-points",
    "relUrl": "/doc-sampling/#sample-nearest-points"
  },"404": {
    "doc": "Sampling",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/#sample-neighbors",
    "relUrl": "/doc-sampling/#sample-neighbors"
  },"405": {
    "doc": "Sampling",
    "title": "Sampling",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/",
    "relUrl": "/doc-sampling/"
  },"406": {
    "doc": "∷ General",
    "title": "∷ General",
    "content": "Notes &amp; informations . This section is dedicated to broader &amp; shared documentation topics. Node specifics can be found on the dedicated node page. When working with specific nodes, make sure to check out the home of the category they belong to as it often contains important infos pertaining to their family of nodes as a whole! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#general",
    "relUrl": "/doc-general/#general"
  },"407": {
    "doc": "∷ General",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#pcgex-nodes",
    "relUrl": "/doc-general/#pcgex-nodes"
  },"408": {
    "doc": "∷ General",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#attribute-selectors",
    "relUrl": "/doc-general/#attribute-selectors"
  },"409": {
    "doc": "∷ General",
    "title": "Working with Graphs",
    "content": "Vtx? Edges? . A summary of what “graph” means and entails in the context of PCGEx. Some topics and their modules are more complex, and have a dedicated section: . | Pathfinding | Custom Graphs | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#working-with-graphs",
    "relUrl": "/doc-general/#working-with-graphs"
  },"410": {
    "doc": "∷ General",
    "title": "Modules &amp; Sub-processors",
    "content": "Modules and sub-processors are instanced classes used across a variety of nodes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/#modules--sub-processors",
    "relUrl": "/doc-general/#modules--sub-processors"
  },"411": {
    "doc": "∷ General",
    "title": "∷ General",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/",
    "relUrl": "/doc-general/"
  },"412": {
    "doc": "Uber Filter",
    "title": "Uber Filter",
    "content": "Combine multiple filters . A one-stop node for all your filtering needs. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#uber-filter",
    "relUrl": "/doc-misc/uber-filter/#uber-filter"
  },"413": {
    "doc": "Uber Filter",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/#properties",
    "relUrl": "/doc-misc/uber-filter/#properties"
  },"414": {
    "doc": "Uber Filter",
    "title": "Uber Filter",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/uber-filter/",
    "relUrl": "/doc-misc/uber-filter/"
  },"415": {
    "doc": "Misc",
    "title": "Misc",
    "content": "All-around, generic utility nodes. Contrary to mathematical graphs built with the Graphs nodes, Custom Graphs have no intrinsinc –nor guaranteed– properties. See on Blueprint-ue . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#misc",
    "relUrl": "/doc-misc/#misc"
  },"416": {
    "doc": "Misc",
    "title": "Overview",
    "content": "The basic workflow is as follow: . | Define custom graph params using . These params are a list of sockets, each of which defines a “probe” for a single connection. | Process points dataset using the previously defined params, and Build Custom Graph. | You now have an abstract graph – it’s super useful just yet | Push the custom graph a Find Edge Clusters node so you have Vtx and Edges to work with the rest of the toolkit! | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#overview",
    "relUrl": "/doc-misc/#overview"
  },"417": {
    "doc": "Misc",
    "title": "How Sockets Works",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#how-sockets-works",
    "relUrl": "/doc-misc/#how-sockets-works"
  },"418": {
    "doc": "Misc",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#misc-nodes",
    "relUrl": "/doc-misc/#misc-nodes"
  },"419": {
    "doc": "Misc",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#sort-points",
    "relUrl": "/doc-misc/#sort-points"
  },"420": {
    "doc": "Misc",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#partition-by-values",
    "relUrl": "/doc-misc/#partition-by-values"
  },"421": {
    "doc": "Misc",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#fuse-points",
    "relUrl": "/doc-misc/#fuse-points"
  },"422": {
    "doc": "Misc",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#attribute-remap",
    "relUrl": "/doc-misc/#attribute-remap"
  },"423": {
    "doc": "Misc",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#points-to-bounds",
    "relUrl": "/doc-misc/#points-to-bounds"
  },"424": {
    "doc": "Misc",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#uber-filter",
    "relUrl": "/doc-misc/#uber-filter"
  },"425": {
    "doc": "Misc",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#d-lloyd-relaxation",
    "relUrl": "/doc-misc/#d-lloyd-relaxation"
  },"426": {
    "doc": "Misc",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#write-index",
    "relUrl": "/doc-misc/#write-index"
  },"427": {
    "doc": "Misc",
    "title": "3D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#d-lloyd-relaxation-1",
    "relUrl": "/doc-misc/#d-lloyd-relaxation-1"
  },"428": {
    "doc": "Misc",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#refresh-seed",
    "relUrl": "/doc-misc/#refresh-seed"
  },"429": {
    "doc": "Misc",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#discard-points-by-count",
    "relUrl": "/doc-misc/#discard-points-by-count"
  },"430": {
    "doc": "Misc",
    "title": "Discard Points by Overlap",
    "content": "Self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/#discard-points-by-overlap",
    "relUrl": "/doc-misc/#discard-points-by-overlap"
  },"431": {
    "doc": "Misc",
    "title": "Misc",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/",
    "relUrl": "/doc-misc/"
  },"432": {
    "doc": "Search",
    "title": "Search",
    "content": "An inventory of the available search modules. Search algorithms are at the core of PCGEx Pathfinding nodes &amp; capabilities. They are responsible for traversing individual clusters in search for the ideal path between the seed and goal points. At the time of writing, there are only two algorithms implemented, A Start and Dijkstra. The next implementation candidates will be DFS and BFS as they yield slightly different results, althought less friendly to modifiers. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#search",
    "relUrl": "/doc-pathfinding/search/#search"
  },"433": {
    "doc": "Search",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#modules",
    "relUrl": "/doc-pathfinding/search/#modules"
  },"434": {
    "doc": "Search",
    "title": "Contours",
    "content": "Contours . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#contours",
    "relUrl": "/doc-pathfinding/search/#contours"
  },"435": {
    "doc": "Search",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#dijkstra",
    "relUrl": "/doc-pathfinding/search/#dijkstra"
  },"436": {
    "doc": "Search",
    "title": "A* Star",
    "content": "A* Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/#a-star",
    "relUrl": "/doc-pathfinding/search/#a-star"
  },"437": {
    "doc": "Search",
    "title": "Search",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/",
    "relUrl": "/doc-pathfinding/search/"
  },"438": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Heuristics",
    "content": "An inventory of the available heuristics modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . Heuristics are basically some under-the-hood maths used by Search Algorithms to gauge whether one path is better than another. Different algorithms use heuristics differently, but their values is computed consistently. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#heuristics",
    "relUrl": "/doc-pathfinding/heuristics/#heuristics"
  },"439": {
    "doc": "🝰 Heuristics",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#modules",
    "relUrl": "/doc-pathfinding/heuristics/#modules"
  },"440": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#shortest-distance",
    "relUrl": "/doc-pathfinding/heuristics/#shortest-distance"
  },"441": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Steepness",
    "content": "Favor flat paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#steepness",
    "relUrl": "/doc-pathfinding/heuristics/#steepness"
  },"442": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#direction",
    "relUrl": "/doc-pathfinding/heuristics/#direction"
  },"443": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/#least-nodes",
    "relUrl": "/doc-pathfinding/heuristics/#least-nodes"
  },"444": {
    "doc": "🝰 Heuristics",
    "title": "🝰 Heuristics",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/heuristics/",
    "relUrl": "/doc-pathfinding/heuristics/"
  },"445": {
    "doc": "∷ Installation",
    "title": "∷ Installation",
    "content": "How to install . The best way is to clone the repo as a submodule; though you can also download pre-packaged versions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#installation",
    "relUrl": "/installation/#installation"
  },"446": {
    "doc": "∷ Installation",
    "title": "Drop-in Package",
    "content": "The easiest way to install PCGExtendedToolkit is to download the packaged version of the plugin. However, for the sake of simplicity (and size), a packaged version only exist for the latest launcher minor release of the engine, at the time the PCGEx release was published. PCGEx for Unreal 5.4 (Package) PCGEx for Unreal 5.3 (Package) . Simply download one of the .zip above and put PCGExtendedToolkit directly in your YourProject/Plugins/ folder. Note that these packages are created in windows, for windows – you can always compile the plugin yourself from the sources if the latest package doesn’t work for your version of the editor. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#drop-in-package",
    "relUrl": "/installation/#drop-in-package"
  },"447": {
    "doc": "∷ Installation",
    "title": "Build from Source",
    "content": "  Github . If building from source, make sure your project &amp; computer is set-up for C++ dev. See Epic Documentation on the topic. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#build-from-source",
    "relUrl": "/installation/#build-from-source"
  },"448": {
    "doc": "∷ Installation",
    "title": "Cloning &amp; Build using Git",
    "content": "The best way is to clone the repository to a submodule; that way you can contribute pull requests if you want. &gt; cd YourProject &gt; git submodule add https://github.com/Nebukam/PCGExtendedToolkit Plugins/PCGExtendedToolkit &gt; git add ../.gitmodules &gt; git commit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#cloning--build-using-git",
    "relUrl": "/installation/#cloning--build-using-git"
  },"449": {
    "doc": "∷ Installation",
    "title": "Install from the Source’ ZIP",
    "content": "  Download from Github (.zip) . Alternatively you can download the ZIP of this repo and place it in YourProject/Plugins/PCGExtendedToolkit . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/#install-from-the-source-zip",
    "relUrl": "/installation/#install-from-the-source-zip"
  },"450": {
    "doc": "∷ Installation",
    "title": "∷ Installation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/installation/",
    "relUrl": "/installation/"
  },"451": {
    "doc": "Hulls",
    "title": "Hulls",
    "content": "Convex hull algorithms . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/#hulls",
    "relUrl": "/doc-graphs/hulls/#hulls"
  },"452": {
    "doc": "Hulls",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/#properties",
    "relUrl": "/doc-graphs/hulls/#properties"
  },"453": {
    "doc": "Hulls",
    "title": "Hulls",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/hulls/",
    "relUrl": "/doc-graphs/hulls/"
  },"454": {
    "doc": "Orient",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . The Orient node compute individual point transforms &amp; orientation based on its next &amp; previous neighbors. Table of content . | Properties | Orientation modules | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#orient",
    "relUrl": "/doc-paths/paths-orient/#orient"
  },"455": {
    "doc": "Orient",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | **Orientation** | This property lets you select which kind of orientation arithmetics you want to apply to the input paths.*See [Available Orientation Modules](#available-orienting-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#properties",
    "relUrl": "/doc-paths/paths-orient/#properties"
  },"456": {
    "doc": "Orient",
    "title": "Orientation modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#orientation-modules",
    "relUrl": "/doc-paths/paths-orient/#orientation-modules"
  },"457": {
    "doc": "Orient",
    "title": "LookAt",
    "content": "Look at next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#lookat",
    "relUrl": "/doc-paths/paths-orient/#lookat"
  },"458": {
    "doc": "Orient",
    "title": "Weighted",
    "content": "Distance-weighted interpolation . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#weighted",
    "relUrl": "/doc-paths/paths-orient/#weighted"
  },"459": {
    "doc": "Orient",
    "title": "Average",
    "content": "Average between previous and next . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#average",
    "relUrl": "/doc-paths/paths-orient/#average"
  },"460": {
    "doc": "Orient",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#inputs",
    "relUrl": "/doc-paths/paths-orient/#inputs"
  },"461": {
    "doc": "Orient",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#in",
    "relUrl": "/doc-paths/paths-orient/#in"
  },"462": {
    "doc": "Orient",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#outputs",
    "relUrl": "/doc-paths/paths-orient/#outputs"
  },"463": {
    "doc": "Orient",
    "title": "Out",
    "content": "Same as Inputs with the transformation applied. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/#out",
    "relUrl": "/doc-paths/paths-orient/#out"
  },"464": {
    "doc": "Orient",
    "title": "Orient",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/",
    "relUrl": "/doc-paths/paths-orient/"
  },"465": {
    "doc": "Find Node States",
    "title": "Find Node States",
    "content": "Find conditional-based states to nodes within a graph . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/#find-node-states",
    "relUrl": "/doc-graphs/node-states/#find-node-states"
  },"466": {
    "doc": "Find Node States",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/#properties",
    "relUrl": "/doc-graphs/node-states/#properties"
  },"467": {
    "doc": "Find Node States",
    "title": "Find Node States",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-graphs/node-states/",
    "relUrl": "/doc-graphs/node-states/"
  },"468": {
    "doc": "Edges",
    "title": "Edges",
    "content": "Refinemement, connections, intersections, … . Advanced operations on edge-based structures. This section contains edge-specific operations. Make sure to check out Working with Graphs first. It is tightly related to Graphs and Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#edges",
    "relUrl": "/doc-edges/#edges"
  },"469": {
    "doc": "Edges",
    "title": "Edges Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#edges-nodes",
    "relUrl": "/doc-edges/#edges-nodes"
  },"470": {
    "doc": "Edges",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#bridge-clusters",
    "relUrl": "/doc-edges/#bridge-clusters"
  },"471": {
    "doc": "Edges",
    "title": "Refine",
    "content": "Algorithmic edge refinement . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#refine",
    "relUrl": "/doc-edges/#refine"
  },"472": {
    "doc": "Edges",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#relax",
    "relUrl": "/doc-edges/#relax"
  },"473": {
    "doc": "Edges",
    "title": "Write Edge Extras",
    "content": "Compute edge extra data from its vertices . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#write-edge-extras",
    "relUrl": "/doc-edges/#write-edge-extras"
  },"474": {
    "doc": "Edges",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#find-contours",
    "relUrl": "/doc-edges/#find-contours"
  },"475": {
    "doc": "Edges",
    "title": "Write Paths Extras",
    "content": "Compute path extra data . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#write-paths-extras",
    "relUrl": "/doc-edges/#write-paths-extras"
  },"476": {
    "doc": "Edges",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#prune-by-length",
    "relUrl": "/doc-edges/#prune-by-length"
  },"477": {
    "doc": "Edges",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/#draw-edges",
    "relUrl": "/doc-edges/#draw-edges"
  },"478": {
    "doc": "Edges",
    "title": "Edges",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/",
    "relUrl": "/doc-edges/"
  },"479": {
    "doc": "Goal Pickers",
    "title": "Goal Pickers",
    "content": "An inventory of the available goal pickers modules. Heuristics modules are primarily used by Pathfinding nodes, such as Edges Pathfinding and Plot Edges Pathfinding . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#goal-pickers",
    "relUrl": "/doc-pathfinding/goal-pickers/#goal-pickers"
  },"480": {
    "doc": "Goal Pickers",
    "title": "Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#modules",
    "relUrl": "/doc-pathfinding/goal-pickers/#modules"
  },"481": {
    "doc": "Goal Pickers",
    "title": "Default",
    "content": "Match seeds to goals at the same index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#default",
    "relUrl": "/doc-pathfinding/goal-pickers/#default"
  },"482": {
    "doc": "Goal Pickers",
    "title": "Random",
    "content": "Match seeds to goals at a random index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#random",
    "relUrl": "/doc-pathfinding/goal-pickers/#random"
  },"483": {
    "doc": "Goal Pickers",
    "title": "Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/#goal-from-attribute",
    "relUrl": "/doc-pathfinding/goal-pickers/#goal-from-attribute"
  },"484": {
    "doc": "Goal Pickers",
    "title": "Goal Pickers",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/",
    "relUrl": "/doc-pathfinding/goal-pickers/"
  },"485": {
    "doc": "PCG Extended Toolkit",
    "title": "PCGEx PCGExtendedToolkit",
    "content": "The PCG Extended Toolkit is a free (libre) plugin that extends Unreal Engine’ Procedural Content Generation pipeline, with a focus on building graphs &amp; pathfinding.   Installation Guides . This documentation is still heavily work-in-progress! However, every property already has helpful tooltips in editor ;) . Make sure to check the Example Project on github . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pcgex-pcgextendedtoolkit",
    "relUrl": "/#pcgex-pcgextendedtoolkit"
  },"486": {
    "doc": "PCG Extended Toolkit",
    "title": "All Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#all-nodes",
    "relUrl": "/#all-nodes"
  },"487": {
    "doc": "PCG Extended Toolkit",
    "title": "Graphs Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#graphs-nodes",
    "relUrl": "/#graphs-nodes"
  },"488": {
    "doc": "PCG Extended Toolkit",
    "title": "Classics",
    "content": "Delaunay, Voronoi . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#classics",
    "relUrl": "/#classics"
  },"489": {
    "doc": "PCG Extended Toolkit",
    "title": "Mesh to Clusters",
    "content": "Convert mesh/geometry topology to usable graph clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#mesh-to-clusters",
    "relUrl": "/#mesh-to-clusters"
  },"490": {
    "doc": "PCG Extended Toolkit",
    "title": "Partition Vertices",
    "content": "Create per-cluster Vtx datasets . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#partition-vertices",
    "relUrl": "/#partition-vertices"
  },"491": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Node States",
    "content": "Find conditional-based states to nodes within a graph . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-node-states",
    "relUrl": "/#find-node-states"
  },"492": {
    "doc": "PCG Extended Toolkit",
    "title": "Sanitize Clusters",
    "content": "Ensure clusters are clean and complete . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sanitize-clusters",
    "relUrl": "/#sanitize-clusters"
  },"493": {
    "doc": "PCG Extended Toolkit",
    "title": "Filter Clusters",
    "content": "Filter out cluster based on proximity to target points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#filter-clusters",
    "relUrl": "/#filter-clusters"
  },"494": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Clusters",
    "content": "Fuse clusters together by finding Point/Edge and Edge/Edge intersections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-clusters",
    "relUrl": "/#fuse-clusters"
  },"495": {
    "doc": "PCG Extended Toolkit",
    "title": "Hulls",
    "content": "Convex hull algorithms . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#hulls",
    "relUrl": "/#hulls"
  },"496": {
    "doc": "PCG Extended Toolkit",
    "title": "Copy Clusters to Points",
    "content": "Creates copies of entire clusters to target points; much like Copy Points does. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#copy-clusters-to-points",
    "relUrl": "/#copy-clusters-to-points"
  },"497": {
    "doc": "PCG Extended Toolkit",
    "title": "Make Clusters Unique",
    "content": "Create a forward copy of input clusters with unique tags. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#make-clusters-unique",
    "relUrl": "/#make-clusters-unique"
  },"498": {
    "doc": "PCG Extended Toolkit",
    "title": "Pack Clusters",
    "content": "Pack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pack-clusters",
    "relUrl": "/#pack-clusters"
  },"499": {
    "doc": "PCG Extended Toolkit",
    "title": "Unpack Clusters",
    "content": "Unpack Clusters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#unpack-clusters",
    "relUrl": "/#unpack-clusters"
  },"500": {
    "doc": "PCG Extended Toolkit",
    "title": "Custom Graph Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#custom-graph-nodes",
    "relUrl": "/#custom-graph-nodes"
  },"501": {
    "doc": "PCG Extended Toolkit",
    "title": "Build Custom Graph",
    "content": "Find &amp; build relationships between points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#build-custom-graph",
    "relUrl": "/#build-custom-graph"
  },"502": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Sockets State",
    "content": "Find &amp; writes socket states data to points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-sockets-state",
    "relUrl": "/#find-sockets-state"
  },"503": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Edge Clusters",
    "content": "Find and creates edge cluster from a custom graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-edge-clusters",
    "relUrl": "/#find-edge-clusters"
  },"504": {
    "doc": "PCG Extended Toolkit",
    "title": "Draw Custom Graph",
    "content": "Debug &amp; draw custom graph half-edges. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#draw-custom-graph",
    "relUrl": "/#draw-custom-graph"
  },"505": {
    "doc": "PCG Extended Toolkit",
    "title": "Sanitize Custom Graph",
    "content": "Rebuild a custom graph after editing. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sanitize-custom-graph",
    "relUrl": "/#sanitize-custom-graph"
  },"506": {
    "doc": "PCG Extended Toolkit",
    "title": "Delete",
    "content": "Delete custom graph attributes. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#delete",
    "relUrl": "/#delete"
  },"507": {
    "doc": "PCG Extended Toolkit",
    "title": "Promote Edges",
    "content": "Translate custom graph edge to points or paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#promote-edges",
    "relUrl": "/#promote-edges"
  },"508": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges-nodes",
    "relUrl": "/#edges-nodes"
  },"509": {
    "doc": "PCG Extended Toolkit",
    "title": "Bridge Clusters",
    "content": "Connects clusters together. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#bridge-clusters",
    "relUrl": "/#bridge-clusters"
  },"510": {
    "doc": "PCG Extended Toolkit",
    "title": "Refine",
    "content": "Algorithmic edge refinement . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#refine",
    "relUrl": "/#refine"
  },"511": {
    "doc": "PCG Extended Toolkit",
    "title": "Relax",
    "content": "Relax points positions of a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#relax",
    "relUrl": "/#relax"
  },"512": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Edge Extras",
    "content": "Compute edge extra data from its vertices . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-edge-extras",
    "relUrl": "/#write-edge-extras"
  },"513": {
    "doc": "PCG Extended Toolkit",
    "title": "Find Contours",
    "content": "Find edge contours &amp; outlines . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#find-contours",
    "relUrl": "/#find-contours"
  },"514": {
    "doc": "PCG Extended Toolkit",
    "title": "Prune by Length",
    "content": "Remove edges from a graph using length data. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#prune-by-length",
    "relUrl": "/#prune-by-length"
  },"515": {
    "doc": "PCG Extended Toolkit",
    "title": "Draw Edges",
    "content": "Draw debug edge lines of a given vtx/edge pair. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#draw-edges",
    "relUrl": "/#draw-edges"
  },"516": {
    "doc": "PCG Extended Toolkit",
    "title": "Pathfinding Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#pathfinding-nodes",
    "relUrl": "/#pathfinding-nodes"
  },"517": {
    "doc": "PCG Extended Toolkit",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#edges-pathfinding",
    "relUrl": "/#edges-pathfinding"
  },"518": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-edges-pathfinding",
    "relUrl": "/#plot-edges-pathfinding"
  },"519": {
    "doc": "PCG Extended Toolkit",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#navmesh-pathfinding",
    "relUrl": "/#navmesh-pathfinding"
  },"520": {
    "doc": "PCG Extended Toolkit",
    "title": "Plot Navmesh Pathfinding",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#plot-navmesh-pathfinding",
    "relUrl": "/#plot-navmesh-pathfinding"
  },"521": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths-nodes",
    "relUrl": "/#paths-nodes"
  },"522": {
    "doc": "PCG Extended Toolkit",
    "title": "Smooth",
    "content": "Smooth points properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#smooth",
    "relUrl": "/#smooth"
  },"523": {
    "doc": "PCG Extended Toolkit",
    "title": "Orient",
    "content": "Orient points in relation to their neighbors . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#orient",
    "relUrl": "/#orient"
  },"524": {
    "doc": "PCG Extended Toolkit",
    "title": "Blend",
    "content": "Blend individual points between from paths’ start and end points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#blend",
    "relUrl": "/#blend"
  },"525": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-collinear",
    "relUrl": "/#fuse-collinear"
  },"526": {
    "doc": "PCG Extended Toolkit",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#subdivide",
    "relUrl": "/#subdivide"
  },"527": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Tangents",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-tangents",
    "relUrl": "/#write-tangents"
  },"528": {
    "doc": "PCG Extended Toolkit",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#paths-to-edge-clusters",
    "relUrl": "/#paths-to-edge-clusters"
  },"529": {
    "doc": "PCG Extended Toolkit",
    "title": "Misc Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#misc-nodes",
    "relUrl": "/#misc-nodes"
  },"530": {
    "doc": "PCG Extended Toolkit",
    "title": "Sort Points",
    "content": "Sort points using any number of properties and attributes . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sort-points",
    "relUrl": "/#sort-points"
  },"531": {
    "doc": "PCG Extended Toolkit",
    "title": "Partition by Values",
    "content": "Create complex partitions from multiple criteria . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#partition-by-values",
    "relUrl": "/#partition-by-values"
  },"532": {
    "doc": "PCG Extended Toolkit",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#fuse-points",
    "relUrl": "/#fuse-points"
  },"533": {
    "doc": "PCG Extended Toolkit",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#attribute-remap",
    "relUrl": "/#attribute-remap"
  },"534": {
    "doc": "PCG Extended Toolkit",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#points-to-bounds",
    "relUrl": "/#points-to-bounds"
  },"535": {
    "doc": "PCG Extended Toolkit",
    "title": "Uber Filter",
    "content": "Combine multiple filters . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#uber-filter",
    "relUrl": "/#uber-filter"
  },"536": {
    "doc": "PCG Extended Toolkit",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#d-lloyd-relaxation",
    "relUrl": "/#d-lloyd-relaxation"
  },"537": {
    "doc": "PCG Extended Toolkit",
    "title": "Write Index",
    "content": "Write current point index to an attribute . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#write-index",
    "relUrl": "/#write-index"
  },"538": {
    "doc": "PCG Extended Toolkit",
    "title": "3D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#d-lloyd-relaxation-1",
    "relUrl": "/#d-lloyd-relaxation-1"
  },"539": {
    "doc": "PCG Extended Toolkit",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#refresh-seed",
    "relUrl": "/#refresh-seed"
  },"540": {
    "doc": "PCG Extended Toolkit",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#discard-points-by-count",
    "relUrl": "/#discard-points-by-count"
  },"541": {
    "doc": "PCG Extended Toolkit",
    "title": "Discard Points by Overlap",
    "content": "Self-pruning but for collections. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#discard-points-by-overlap",
    "relUrl": "/#discard-points-by-overlap"
  },"542": {
    "doc": "PCG Extended Toolkit",
    "title": "Sampling Nodes",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sampling-nodes",
    "relUrl": "/#sampling-nodes"
  },"543": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-surface",
    "relUrl": "/#sample-nearest-surface"
  },"544": {
    "doc": "PCG Extended Toolkit",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#guided-trace",
    "relUrl": "/#guided-trace"
  },"545": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-polyline",
    "relUrl": "/#sample-nearest-polyline"
  },"546": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-nearest-points",
    "relUrl": "/#sample-nearest-points"
  },"547": {
    "doc": "PCG Extended Toolkit",
    "title": "Sample Neighbors",
    "content": "Sample points based on edge connections . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/#sample-neighbors",
    "relUrl": "/#sample-neighbors"
  },"548": {
    "doc": "PCG Extended Toolkit",
    "title": "PCG Extended Toolkit",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/",
    "relUrl": "/"
  },"549": {
    "doc": "Attribute Remap",
    "title": "Attribute Remap",
    "content": "Highly customizable attribute remapping. The Attribute Remap allows you to easily do component-wise attribute remapping and clamping. Table of content . | Properties | Remap Curve &amp; Scale | Range Method | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#attribute-remap",
    "relUrl": "/doc-misc/misc-attribute-remap.html#attribute-remap"
  },"550": {
    "doc": "Attribute Remap",
    "title": "Properties",
    "content": ". Note that this node only support attribute and not properties, extra selectors will be ignored. Additional note: this node works in a component-wise fashion: the remapping will be done individually for each component of the input data. By default the same remapping rule is applied to each component, but you can freely override the behavior per-component. | Property | Description | . | **Settings**| |   | . | Source Attribute Name | The source attribute to read data from. | . | Target Attribute Name | The target attribute to write data to.*Can be the same as Source.* | . | **Remap (Default)**| |   | . | **Input Clamp Settings**| |   | . | Clamp Min | If enabled, input data smaller than the specified value will be clamped. | . | Clamp Max | If enabled, input data greater than the specified value will be clamped. | . | **Remap Settings**| |   | . | In Min | If enabled, lets you input the In Min value manually for the remapping.**If left disabled, this value will be the minimum found in the input dataset.** | . | In Max | If enabled, lets you input the In Max value manually for the remapping.**If left disabled, this value will be the maximum found in the input dataset.** | . | Scale | A scale factor applied to the output, remapped value.*See [Remap Curve &amp; Scale](#remap-curve–scale).* | . | Range Method | Basically lets you choose whether the smallest value should be 0 (Full Range) or the effective Min value (Effective range).*See [Range Method](#range-method).* | . | Remap Curve | The curve that will be sampled for remapping.*See [Remap Curve &amp; Scale](#remap-curve–scale).* | . | **Output Clamp Settings** | *Same as Input, but applied to the final value before writing it.* | . | **Remap overrides**| |   | . | **Remap (2nd Component)** | Override default settings for the 2nd component (Y, Yaw, G, etc) | . | **Remap (3rd Component)** | Override default settings for the 3rd component (Z, Pitch, B, etc) | . | **Remap (4th Component)** | Override default settings for the 4th component (W, A) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#properties",
    "relUrl": "/doc-misc/misc-attribute-remap.html#properties"
  },"551": {
    "doc": "Attribute Remap",
    "title": "Remap Curve &amp; Scale",
    "content": "The way this node works is by measuring the minimum &amp; maximum attribute value, and remap input values to a [0..1] range that is then used to sample the specified Remap Curve on the x-axis. The y curve value is then multplied by the specified Scale. See Range Method as it drives how values are sampled close to zero! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#remap-curve--scale",
    "relUrl": "/doc-misc/misc-attribute-remap.html#remap-curve--scale"
  },"552": {
    "doc": "Attribute Remap",
    "title": "Range Method",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values – but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#range-method",
    "relUrl": "/doc-misc/misc-attribute-remap.html#range-method"
  },"553": {
    "doc": "Attribute Remap",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#inputs",
    "relUrl": "/doc-misc/misc-attribute-remap.html#inputs"
  },"554": {
    "doc": "Attribute Remap",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#in",
    "relUrl": "/doc-misc/misc-attribute-remap.html#in"
  },"555": {
    "doc": "Attribute Remap",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#outputs",
    "relUrl": "/doc-misc/misc-attribute-remap.html#outputs"
  },"556": {
    "doc": "Attribute Remap",
    "title": "Out",
    "content": "Same as Inputs with the added metadata. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html#out",
    "relUrl": "/doc-misc/misc-attribute-remap.html#out"
  },"557": {
    "doc": "Attribute Remap",
    "title": "Attribute Remap",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-attribute-remap.html",
    "relUrl": "/doc-misc/misc-attribute-remap.html"
  },"558": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": "Filter point dataset by their point count. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#discard-points-by-count",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#discard-points-by-count"
  },"559": {
    "doc": "Discard Points by Count",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Min Point Count | If enabled, does not output data with a point count smaller than the specified amount. | . | Max Point Count | If enabled, does not output data with a point count larger than the specified amount. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#properties",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#properties"
  },"560": {
    "doc": "Discard Points by Count",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#inputs",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#inputs"
  },"561": {
    "doc": "Discard Points by Count",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#in",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#in"
  },"562": {
    "doc": "Discard Points by Count",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#outputs",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#outputs"
  },"563": {
    "doc": "Discard Points by Count",
    "title": "Out",
    "content": "Inputs that passed the filter. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html#out",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html#out"
  },"564": {
    "doc": "Discard Points by Count",
    "title": "Discard Points by Count",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-count.html",
    "relUrl": "/doc-misc/misc-discard-points-by-count.html"
  },"565": {
    "doc": "Discard Points by Overlap",
    "title": "Discard Points by Overlap",
    "content": "Self-pruning but for collections. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html#discard-points-by-overlap",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html#discard-points-by-overlap"
  },"566": {
    "doc": "Discard Points by Overlap",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html#properties",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html#properties"
  },"567": {
    "doc": "Discard Points by Overlap",
    "title": "Discard Points by Overlap",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-discard-points-by-overlap.html",
    "relUrl": "/doc-misc/misc-discard-points-by-overlap.html"
  },"568": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": "Draw lines and points from attributes . This node is used in 100% of the screenshots of this documentation. Table of content . | Properties | Individual Debug Settings | Expressions . | Direction | Connection (Position) | Connection (Point Index) | Point | Boolean | Label | . | Inputs &amp; Outputs | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#draw-attributes",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#draw-attributes"
  },"569": {
    "doc": "Draw Attributes",
    "title": "Properties",
    "content": ". Each Draw Attribute node can display any number of things by fetching values from whatever point data is plugged into the input pin; in the order in which they are set up. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#properties",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#properties"
  },"570": {
    "doc": "Draw Attributes",
    "title": "Individual Debug Settings",
    "content": ". | Property | Description | . | **Settings**| |   | . | Enabled | Whether these settings are enabled or not. Allows to quickly turn a debug display on/off without deleting the entire entry. | . | Selector | The attribute or property to draw. | . | Expressed As | The type of shape/form that will be used to express the selected attribute or property. | . | **Expression Settings**| |   | . | – | Depending on the selected expression, different settings are available. See[Expressions](#expressions). | . | **Thickness &amp; Size**| |   | . | Thickness | The thickness of the debug line, when drawing a line. | . | Size | How the Size is interpreted depends on the chosen expression. See[Expressions](#expressions). | . | Local Size Attribute | When enabled, allows you to use a local attribute as a Size.*If enabled, the fixed Size attribute becomes a multiplier to the local attribute.* | . | **Color**| |   | . | Color | The debug color. | . | Local Color Attribute | When enabled, allows you to use a local attribute instead of the default Color property. | . | Color Is Linear | Specifies whether the Local Color attribute is linear (0-1 based) or hex (0-255).*If disabled, the attribute or property value will be divided by 255 internally.* | . | Depth Priority | Debug draw depth priority. -1 : draw on top of everything.0 : Regular depth sorting.1 : Draw behind everything. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#individual-debug-settings",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#individual-debug-settings"
  },"571": {
    "doc": "Draw Attributes",
    "title": "Expressions",
    "content": "As of writing time, there are a few expression available: . | Direction | Connection (Position) | Connection (Point index) | Point | Boolean | Label | . Direction . | **Extra Properties**| |   | . | Normalize Before Sizing | If enabled, the incoming vector will be normalized before it is resized and drawn. | . Connection (Position) . Draws a line between the current point’ location and the selected attribute or property as a world space position. | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Connection (Point Index) . Draws a line between the current point’ location and another point within the same group as a world space position. The selected attribute or property is used as the index for the point to use as target position. | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Note: this is a legacy tool for drawing edges, if using graphs, use Draw Edges instead. Point . | **Extra Properties**| |   | . | As an offset | If enabled, the incoming vector will be used as an offset from the current point location. | . Boolean . Boolean is similar to Point, except it is drawn at the point’ location in space. The debug color is selected based on the input value: If the value is &lt;= 0 the base color will be picked; otherwise Secondary Color is used. | **Extra Properties**| |   | . | Secondary Color | The color to be used for values &gt; 0. | . Label . Label is currently not working as expected, despite using engine APIs and not throwing any error when used. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#expressions",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#expressions"
  },"572": {
    "doc": "Draw Attributes",
    "title": "Inputs &amp; Outputs",
    "content": "This nodes forwards its inputs as if it was disabled. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html#inputs--outputs",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html#inputs--outputs"
  },"573": {
    "doc": "Draw Attributes",
    "title": "Draw Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-draw-attributes.html",
    "relUrl": "/doc-misc/debug/misc-draw-attributes.html"
  },"574": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": "Flushes persistent debug lines . See Debug . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-flush-debug.html#flush-debug",
    "relUrl": "/doc-misc/debug/misc-flush-debug.html#flush-debug"
  },"575": {
    "doc": "Flush Debug",
    "title": "Inputs &amp; Outputs",
    "content": "Anything. This node forwards out whatever goes in. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-flush-debug.html#inputs--outputs",
    "relUrl": "/doc-misc/debug/misc-flush-debug.html#inputs--outputs"
  },"576": {
    "doc": "Flush Debug",
    "title": "Flush Debug",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/debug/misc-flush-debug.html",
    "relUrl": "/doc-misc/debug/misc-flush-debug.html"
  },"577": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": "Proximity-based point pruning and blending. The Fuse Points reduces the number of point within a group by merging points that are within a set radius of each others; and allows you to control how the resulting properties and attributes are blended. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#fuse-points",
    "relUrl": "/doc-misc/misc-fuse-points.html#fuse-points"
  },"578": {
    "doc": "Fuse Points",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Component Wise Radius | Whether to use a component-wise radius or a spherical one.When component-wise is enabled, distance is checked individually on X, Y and Z axis in world-space. | . | Radius | Radius within which multiple points are to be fused into a single one. | . | Preserve Order | If enabled, fused points will be sorted to maintain their original order. | . | **Blending Settings** | Control how removed points’ properties and attributes are blended into the point they are fused to.See | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#properties",
    "relUrl": "/doc-misc/misc-fuse-points.html#properties"
  },"579": {
    "doc": "Fuse Points",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#inputs",
    "relUrl": "/doc-misc/misc-fuse-points.html#inputs"
  },"580": {
    "doc": "Fuse Points",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#in",
    "relUrl": "/doc-misc/misc-fuse-points.html#in"
  },"581": {
    "doc": "Fuse Points",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#outputs",
    "relUrl": "/doc-misc/misc-fuse-points.html#outputs"
  },"582": {
    "doc": "Fuse Points",
    "title": "Out",
    "content": "A processed point dataset for each input dataset. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html#out",
    "relUrl": "/doc-misc/misc-fuse-points.html#out"
  },"583": {
    "doc": "Fuse Points",
    "title": "Fuse Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-fuse-points.html",
    "relUrl": "/doc-misc/misc-fuse-points.html"
  },"584": {
    "doc": "2D Lloyd Relaxation",
    "title": "2D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. Applies any number of Lloyd relaxation passes, in 2D space. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#d-lloyd-relaxation",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#d-lloyd-relaxation"
  },"585": {
    "doc": "2D Lloyd Relaxation",
    "title": "Properties",
    "content": ". See Lloyd Relaxation on Wikipedia. | Property | Description | . | **Settings**| |   | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#properties",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#properties"
  },"586": {
    "doc": "2D Lloyd Relaxation",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#inputs",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#inputs"
  },"587": {
    "doc": "2D Lloyd Relaxation",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#in",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#in"
  },"588": {
    "doc": "2D Lloyd Relaxation",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#outputs",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#outputs"
  },"589": {
    "doc": "2D Lloyd Relaxation",
    "title": "Out",
    "content": "Same as Inputs with the added metadata. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html#out",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html#out"
  },"590": {
    "doc": "2D Lloyd Relaxation",
    "title": "2D Lloyd Relaxation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-2d.html",
    "relUrl": "/doc-misc/misc-lloyd-relax-2d.html"
  },"591": {
    "doc": "3D Lloyd Relaxation",
    "title": "3D Lloyd Relaxation",
    "content": "Applies the Lloyd Relaxation algorithm. Applies any number of Lloyd relaxation passes, in 3D space. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#d-lloyd-relaxation",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#d-lloyd-relaxation"
  },"592": {
    "doc": "3D Lloyd Relaxation",
    "title": "Properties",
    "content": ". See Lloyd Relaxation on Wikipedia. | Property | Description | . | **Settings**| |   | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#properties",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#properties"
  },"593": {
    "doc": "3D Lloyd Relaxation",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#inputs",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#inputs"
  },"594": {
    "doc": "3D Lloyd Relaxation",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#in",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#in"
  },"595": {
    "doc": "3D Lloyd Relaxation",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#outputs",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#outputs"
  },"596": {
    "doc": "3D Lloyd Relaxation",
    "title": "Out",
    "content": "Same as Inputs with the added metadata. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html#out",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html#out"
  },"597": {
    "doc": "3D Lloyd Relaxation",
    "title": "3D Lloyd Relaxation",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-lloyd-relax-3d.html",
    "relUrl": "/doc-misc/misc-lloyd-relax-3d.html"
  },"598": {
    "doc": "Partition by Values (Static)",
    "title": "Partition by Values (Static)",
    "content": "Create complex partitions from multiple criteria . The Partition by Values node offer enhanced control over sub-group creation using multiple criteria, with rules specifying attributes for partitioning and optional pre-processing. Table of content . | Properties . | Partition Rule | . | Why upscale? | How partition Index works . | Raw partition value | Index partition | . | Key Sum | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#partition-by-values-static",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#partition-by-values-static"
  },"599": {
    "doc": "Partition by Values (Static)",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Split Output | Whether to output individual partitions or simply write the unique partition key to an attribute. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . | Key Sum | Outputs the sum of all partition keys to a int64 attribute.**This value is unlikely to be unique, but can come in handy for filtering purposes.**See [Key Sum](#key-sum) | . Partition Rule . | Property | Description | . | Enabled | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Selector | An attribute or property that will be used for partitioning. See Attribute Selectors. | . | Filter Size | The size of the partition in relation the attribute or property uses.*Higher values means fewer larger partitions; smaller values means more smaller partitions.* | . | **Input pre-processing**| |   | . | Upscale | A scale factor to apply to the selected attribute value before partitioning.*This is especially useful when working with smaller range of values like Density.*See [Why upscale?](#why-upscale). | . | Offset | An offset value added to the selected attribute value before partitioning.**Offset is added to the Upscaled value.***This allow to shift separation ‘lines’ when using spatial values for partitioning.* | . | **Partition Key Attribute**| |   | . | **Key** Attribute Name | Whether that rule is enabled or not. *Helpful for trial and error without removing the configuration from the array.* | . | Use Partition Index as Key | Whether to use the partition Index as a key *(starting at 0, up to N partitions)* or the default output *(actual under-the-hood value used to distinguish unique buckets)*.See [How partition Index works](#how-partition-index-works). | . | **Partition Tagging***Only if Split Output is enabled*| |   | . | Tag Prefix Name | Tag the data with the partition key, using the format Prefix::PartitionKey or Prefix::PartitionIndex | . | Tag Use Partition Index as Key | Whether to use the partition Index as a key.See [How partition Index works](#how-partition-index-works). | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#properties",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#properties"
  },"600": {
    "doc": "Partition by Values (Static)",
    "title": "Why upscale?",
    "content": "Under the hood, the Partition by Values broadcast and transform the reference values to a int64 used as a unique ID for individual partition. Because of that, any value in the -1..1 range (such as Density, Steepness etc) will be rounded to the nearest integer. Upscaling fixes this problem. For example, without upscaling, [0.1, 0.25, 0.01] will be partitioned as [0, 0, 0]; so a unique 0-id’d partition. On the other end, the same set [0.1, 0.25, 0.01] upscaled by a factor of 100 will be partitioned as [10, 25, 1]; so 3 separated partitions. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#why-upscale",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#why-upscale"
  },"601": {
    "doc": "Partition by Values (Static)",
    "title": "How partition Index works",
    "content": "The for each partition, the corresponding attribute value is basically upscaled, offsetted and rounded down. This operation is repeated for each partition rule, and points are then distributed into buckets which all have the same partition keys. You can either output this “key” value as-is, or use the partition index. That index correspond to the partition order when all keys are sorted by ascending order. Using a single partition rule based on $Position.X, using a filter size of 10. On the left is the detail panel, on the right is a screencap of the value debugger for that rule . Raw partition value . Index partition . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#how-partition-index-works",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#how-partition-index-works"
  },"602": {
    "doc": "Partition by Values (Static)",
    "title": "Key Sum",
    "content": "The Key Sum attribute value will be, well, the sum of all unique partitions keys. It’s useful in very specific scenarios, such as when partitioning based on booleans values, in order to filter partitions. Say you have three separate boolean (or 0-1) attributes, with a partition rule set up for each of these attributes; with Use Partition Index as Key enabled. Each partition will either have a 0 or 1 unique key, with a maximum of 9 partitions created (0 0 0, 1 0 0, 0 1 0 etc.). You will only have 4 different Key Sum: 0, 1, 2 and 3, which you can use as sort-of weak flag system: . | 0 0 0 = 0 | 1 0 0 = 1 | 0 1 0 = 1 | 0 0 1 = 1 | 1 1 0 = 2 | 0 1 1 = 2 | 1 0 1 = 2 | 1 1 1 = 3 | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#key-sum",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#key-sum"
  },"603": {
    "doc": "Partition by Values (Static)",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#inputs",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#inputs"
  },"604": {
    "doc": "Partition by Values (Static)",
    "title": "In",
    "content": "A single point dataset. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#in",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#in"
  },"605": {
    "doc": "Partition by Values (Static)",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#outputs",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#outputs"
  },"606": {
    "doc": "Partition by Values (Static)",
    "title": "Out",
    "content": "Depending on selected properties, can be the same as Inputs with the added metadata, or completely new per-partition datasets (usually more than what went it). Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html#out",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html#out"
  },"607": {
    "doc": "Partition by Values (Static)",
    "title": "Partition by Values (Static)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/misc-partition-by-values-static.html",
    "relUrl": "/doc-misc/partition-by-values/misc-partition-by-values-static.html"
  },"608": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": "Convert point clouds to a single bounding point . Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#points-to-bounds",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#points-to-bounds"
  },"609": {
    "doc": "Points to Bounds",
    "title": "Properties",
    "content": ". Points to bound has no dedicated properties and is pretty straighforward to use. It embeds a data blender module, which you can read more about in the specific section. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#properties",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#properties"
  },"610": {
    "doc": "Points to Bounds",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#inputs",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#inputs"
  },"611": {
    "doc": "Points to Bounds",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#in",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#in"
  },"612": {
    "doc": "Points to Bounds",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#outputs",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#outputs"
  },"613": {
    "doc": "Points to Bounds",
    "title": "Out",
    "content": "As many outputs as there are inputs. Each output contains a single point representing the bounds of the corresponding input dataset. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html#out",
    "relUrl": "/doc-misc/misc-points-to-bounds.html#out"
  },"614": {
    "doc": "Points to Bounds",
    "title": "Points to Bounds",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-points-to-bounds.html",
    "relUrl": "/doc-misc/misc-points-to-bounds.html"
  },"615": {
    "doc": "Refresh Seed",
    "title": "Refresh Seed",
    "content": "Refreshes point seeds based on their position. Don’t laugh, this is actually much more useful that you’d think. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#refresh-seed",
    "relUrl": "/doc-misc/misc-refresh-seed.html#refresh-seed"
  },"616": {
    "doc": "Refresh Seed",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Base | A value added to the seed calculation to offset the output value. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#properties",
    "relUrl": "/doc-misc/misc-refresh-seed.html#properties"
  },"617": {
    "doc": "Refresh Seed",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#inputs",
    "relUrl": "/doc-misc/misc-refresh-seed.html#inputs"
  },"618": {
    "doc": "Refresh Seed",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#in",
    "relUrl": "/doc-misc/misc-refresh-seed.html#in"
  },"619": {
    "doc": "Refresh Seed",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#outputs",
    "relUrl": "/doc-misc/misc-refresh-seed.html#outputs"
  },"620": {
    "doc": "Refresh Seed",
    "title": "Out",
    "content": "Same as Inputs with the refreshed seed value. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html#out",
    "relUrl": "/doc-misc/misc-refresh-seed.html#out"
  },"621": {
    "doc": "Refresh Seed",
    "title": "Refresh Seed",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-refresh-seed.html",
    "relUrl": "/doc-misc/misc-refresh-seed.html"
  },"622": {
    "doc": "Sort Points (Static)",
    "title": "Sort Points (Static)",
    "content": "Sort points using any number of properties and attributes . The Sort Points node organize points based on rules. Key elements include sorting direction (ascending/descending) and rules defined in a specific order. Each rule compares a selected attribute with a tolerance for equality. Note the warning on comparing values, emphasizing the default use of the first component for multi-component types. Table of content . | Properties . | Rules ordering | Sorting Rule | . | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#sort-points-static",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#sort-points-static"
  },"623": {
    "doc": "Sort Points (Static)",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Sort Direction | The output sorting direction – Ascending *(small values first)* or Descending *(high values first)*. | . | **Rules** | A list of ordered individual rules used for sorting the points. | . Rules ordering . Rules are compared in the same order as in the property panel, starting at index 0. The sorting goes through each rules until it finds a valid comparison (non-equal values) – for each point. Sorting Rule . | Property | Description | . | Selector | An attribute or property to compare. See Attribute Selectors. | . | Tolerance | Equality tolerance used when comparing two values. | . | Invert Rule | Switches from the default &lt; comparison to &gt;. | . When selecting a value to compare, keep in mind that it will be broadcasted to a double type. This means that if you don’t specify which component to use on multi-component type (Vectors, Transforms, etc), it will default to the first one (X). ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#properties",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#properties"
  },"624": {
    "doc": "Sort Points (Static)",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#inputs",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#inputs"
  },"625": {
    "doc": "Sort Points (Static)",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#in",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#in"
  },"626": {
    "doc": "Sort Points (Static)",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#outputs",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#outputs"
  },"627": {
    "doc": "Sort Points (Static)",
    "title": "Out",
    "content": "Same as Inputs but re-ordered. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html#out",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html#out"
  },"628": {
    "doc": "Sort Points (Static)",
    "title": "Sort Points (Static)",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/misc-sort-points-static.html",
    "relUrl": "/doc-misc/sort-points/misc-sort-points-static.html"
  },"629": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": "Write current point index to an attribute . Don’t laugh, this is actually much more useful that you’d think. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#write-index",
    "relUrl": "/doc-misc/misc-write-index.html#write-index"
  },"630": {
    "doc": "Write Index",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Output Normalized Index | If enabled, the index will be written as a double *(instead of int32)*, as a normalized value in the range [0..1]. | . | Output Attribute Name | Name of the attribute to write the point index to. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#properties",
    "relUrl": "/doc-misc/misc-write-index.html#properties"
  },"631": {
    "doc": "Write Index",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#inputs",
    "relUrl": "/doc-misc/misc-write-index.html#inputs"
  },"632": {
    "doc": "Write Index",
    "title": "In",
    "content": "Any number of point datasets. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#in",
    "relUrl": "/doc-misc/misc-write-index.html#in"
  },"633": {
    "doc": "Write Index",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#outputs",
    "relUrl": "/doc-misc/misc-write-index.html#outputs"
  },"634": {
    "doc": "Write Index",
    "title": "Out",
    "content": "Same as Inputs with the added metadata. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html#out",
    "relUrl": "/doc-misc/misc-write-index.html#out"
  },"635": {
    "doc": "Write Index",
    "title": "Write Index",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/misc-write-index.html",
    "relUrl": "/doc-misc/misc-write-index.html"
  },"636": {
    "doc": "🝢 Neighbors Attributes",
    "title": "🝢 Neighbors Attributes",
    "content": "A specific rule for one or multiple neighbor attributes sampling. TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#neighbors-attributes",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#neighbors-attributes"
  },"637": {
    "doc": "🝢 Neighbors Attributes",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html#properties"
  },"638": {
    "doc": "🝢 Neighbors Attributes",
    "title": "🝢 Neighbors Attributes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-attributes.html"
  },"639": {
    "doc": "🝢 Neighbors Properties",
    "title": "🝢 Neighbors Properties",
    "content": "A specific rule for one or multiple neighbor properties sampling . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#neighbors-properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#neighbors-properties"
  },"640": {
    "doc": "🝢 Neighbors Properties",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#properties",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html#properties"
  },"641": {
    "doc": "🝢 Neighbors Properties",
    "title": "🝢 Neighbors Properties",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html",
    "relUrl": "/doc-sampling/sampling-neighbors/neighbor-sample-propertiers.html"
  },"642": {
    "doc": "Average",
    "title": "Average",
    "content": "Average between previous and next . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html#average",
    "relUrl": "/doc-paths/paths-orient/orient-average.html#average"
  },"643": {
    "doc": "Average",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Orient Axis | The transform’ axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-average.html#properties"
  },"644": {
    "doc": "Average",
    "title": "Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-average.html",
    "relUrl": "/doc-paths/paths-orient/orient-average.html"
  },"645": {
    "doc": "LookAt",
    "title": "LookAt",
    "content": "Look at next . Table of content . | Properties | LookAt Target | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#lookat",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#lookat"
  },"646": {
    "doc": "LookAt",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | LookAt | Select what the point should look at.*See [LookAt Target](#lookat-target).* | . | Look at Selector | The attribute to fetch as a LookAt target if LookAt == Attribute. | . | Attribute as Offset | If enabled, the attribute specified above will be used as a translation offset from the point location, as opposed to a world space position. | . | **Orientation**| |   | . | Orient Axis | The transform’ axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#properties"
  },"647": {
    "doc": "LookAt",
    "title": "LookAt Target",
    "content": "There are three possibilities: . | Look At Next : orientation will be computed so the point is oriented toward its next neighbor. | Look At Previous : orientation will be computed so the point is oriented toward its previous neighbor. | Attribute : orientation will be computed so the point looks at the world space position stored in a local attribute. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html#lookat-target",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html#lookat-target"
  },"648": {
    "doc": "LookAt",
    "title": "LookAt",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-lookat.html",
    "relUrl": "/doc-paths/paths-orient/orient-lookat.html"
  },"649": {
    "doc": "Weighted",
    "title": "Weighted",
    "content": "Distance-weighted interpolation . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html#weighted",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html#weighted"
  },"650": {
    "doc": "Weighted",
    "title": "Properties",
    "content": ". Weighted orientation balances the orientation of the point between the previous and next point based on perpendicular distance. | Property | Description | . | **Settings**| |   | . | Inverse Weight | Reverse the orientation weight.*Weight to next will be used for previous, and vice-versa.* | . | **Orienting**| |   | . | Orient Axis | The transform’ axis that will be *oriented*. | . | Up Axis | The Up axis used for the orientation maths. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html#properties",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html#properties"
  },"651": {
    "doc": "Weighted",
    "title": "Weighted",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-orient/orient-weighted.html",
    "relUrl": "/doc-paths/paths-orient/orient-weighted.html"
  },"652": {
    "doc": "🝗 Partition Rule",
    "title": "🝗 Partition Rule",
    "content": "An individual partition rule . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html#partition-rule",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html#partition-rule"
  },"653": {
    "doc": "🝗 Partition Rule",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html#properties",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html#properties"
  },"654": {
    "doc": "🝗 Partition Rule",
    "title": "🝗 Partition Rule",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/partition-by-values/partition-rule.html",
    "relUrl": "/doc-misc/partition-by-values/partition-rule.html"
  },"655": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": "Find a path that goes through multiple chained points. Related . | Pathfinding | . Table of content . | Properties | Modules . | Available Search modules | Available 🝰 Heuristics modules | . | Inputs . | Plots | . | Outputs . | Paths | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#plot-edges-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#plot-edges-pathfinding"
  },"656": {
    "doc": "Plot Edges Pathfinding",
    "title": "Properties",
    "content": ". DOC TDB – Heuristics underwent a thorough refactor that isn’t documented yet. Each heuristic has its own node and they can be combined into the heuristic input of the pathfinding node. See the example project! . | Property | Description | . | **Settings**| |   | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Add Plot Points to Path | Include plot points positions as part of the output path. | . | **Modules**| |   | . | **Search Algorithm** | The search algorithm that will be used to solve pathfinding.*Each module has individual settings and documentation – See [Available Search Algorithms](#available-search-modules).* | . | **Heuristics** | The base heuristics module that will be used during pathfinding.*Each module has individual settings and documentation – See [Available Heuristics](#available-heuristics-modules).* | . | **Heuristics Modifiers** | This property group is available no matter what **Heuristics** have been picked.*See 🝰 Heuristic Attribute.* | . | Statistics |   | . | — | | . | **Extra Weighting**| |   | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution.*Note that accumulated weight is consolidated between each plot points, as opposed to between each plotted path.* | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time an edge is used.* | . | Global Visited Weight | If enabled, additive weight will be shared across the different plotted path. | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn’t carried over or cached. | Enabling Global Visited Weight breaks parallelism. Tasks are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#properties"
  },"657": {
    "doc": "Plot Edges Pathfinding",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#modules"
  },"658": {
    "doc": "Plot Edges Pathfinding",
    "title": "Available Search modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#available-search-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#available-search-modules"
  },"659": {
    "doc": "Plot Edges Pathfinding",
    "title": "Contours",
    "content": "Contours . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#contours",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#contours"
  },"660": {
    "doc": "Plot Edges Pathfinding",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#dijkstra",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#dijkstra"
  },"661": {
    "doc": "Plot Edges Pathfinding",
    "title": "A* Star",
    "content": "A* Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#a-star",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#a-star"
  },"662": {
    "doc": "Plot Edges Pathfinding",
    "title": "Available 🝰 Heuristics modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#available--heuristics-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#available--heuristics-modules"
  },"663": {
    "doc": "Plot Edges Pathfinding",
    "title": "🝰 Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#shortest-distance",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#shortest-distance"
  },"664": {
    "doc": "Plot Edges Pathfinding",
    "title": "🝰 Steepness",
    "content": "Favor flat paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#steepness",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#steepness"
  },"665": {
    "doc": "Plot Edges Pathfinding",
    "title": "🝰 Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#direction",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#direction"
  },"666": {
    "doc": "Plot Edges Pathfinding",
    "title": "🝰 Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#least-nodes",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#least-nodes"
  },"667": {
    "doc": "Plot Edges Pathfinding",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#inputs",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#inputs"
  },"668": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plots",
    "content": "The plot input supports an unlimited amount of points dataset. Each Plot dataset is interpreted as a list of point that must be connected by a single path, in order, then merged into a single consolidated path. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#plots",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#plots"
  },"669": {
    "doc": "Plot Edges Pathfinding",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#outputs",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#outputs"
  },"670": {
    "doc": "Plot Edges Pathfinding",
    "title": "Paths",
    "content": "A point dataset for each path generated. Points in the dataset are ordered linearily from start to end. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html#paths",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html#paths"
  },"671": {
    "doc": "Plot Edges Pathfinding",
    "title": "Plot Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges-plot.html",
    "relUrl": "/doc-pathfinding/pathfinding-edges-plot.html"
  },"672": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": "Find paths connecting seeds to goals. Related . | Pathfinding | . Table of content . | Properties | Modules . | Available Goal Pickers modules | Available Search modules | Available 🝰 Heuristics modules | . | Inputs . | Seeds &amp; Goals | . | Outputs . | Paths | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#edges-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#edges-pathfinding"
  },"673": {
    "doc": "Edges Pathfinding",
    "title": "Properties",
    "content": ". DOC TDB – Heuristics underwent a thorough refactor that isn’t documented yet. Each heuristic has its own node and they can be combined into the heuristic input of the pathfinding node. See the example project! . | Property | Description | . | **Goal Picker** | The module that will be used to interpret and manipulate goals and seeds inputs.*Each module has individual settings and documentation – See [Available Goal Pickers](#available-goal-pickers-modules).* | . | **Settings**| |   | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | **Modules**| |   | . | **Search Algorithm** | The search algorithm that will be used to solve pathfinding.*Each module has individual settings and documentation – See [Available Search Algorithms](#available-search-modules).* | . | **Heuristics** | The base heuristics module that will be used during pathfinding.*Each module has individual settings and documentation – See [Available Heuristics](#available-heuristics-modules).* | . | **Heuristics Modifiers** | This property group is available no matter what **Heuristics** have been picked.*See 🝰 Heuristic Attribute.* | . | Statistics |   | . | — | | . | **Extra Weighting**| |   | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution. | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time an edge is used.* | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn’t carried over or cached. | Enabling this feature breaks parallelism. Tasks are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#properties"
  },"674": {
    "doc": "Edges Pathfinding",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#modules"
  },"675": {
    "doc": "Edges Pathfinding",
    "title": "Available Goal Pickers modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available-goal-pickers-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available-goal-pickers-modules"
  },"676": {
    "doc": "Edges Pathfinding",
    "title": "Default",
    "content": "Match seeds to goals at the same index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#default",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#default"
  },"677": {
    "doc": "Edges Pathfinding",
    "title": "Random",
    "content": "Match seeds to goals at a random index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#random",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#random"
  },"678": {
    "doc": "Edges Pathfinding",
    "title": "Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#goal-from-attribute"
  },"679": {
    "doc": "Edges Pathfinding",
    "title": "Available Search modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available-search-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available-search-modules"
  },"680": {
    "doc": "Edges Pathfinding",
    "title": "Contours",
    "content": "Contours . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#contours",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#contours"
  },"681": {
    "doc": "Edges Pathfinding",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#dijkstra",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#dijkstra"
  },"682": {
    "doc": "Edges Pathfinding",
    "title": "A* Star",
    "content": "A* Algorithm . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#a-star",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#a-star"
  },"683": {
    "doc": "Edges Pathfinding",
    "title": "Available 🝰 Heuristics modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#available--heuristics-modules",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#available--heuristics-modules"
  },"684": {
    "doc": "Edges Pathfinding",
    "title": "🝰 Shortest Distance",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#shortest-distance",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#shortest-distance"
  },"685": {
    "doc": "Edges Pathfinding",
    "title": "🝰 Steepness",
    "content": "Favor flat paths . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#steepness",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#steepness"
  },"686": {
    "doc": "Edges Pathfinding",
    "title": "🝰 Direction",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#direction",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#direction"
  },"687": {
    "doc": "Edges Pathfinding",
    "title": "🝰 Least Nodes",
    "content": "Subtitle . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#least-nodes",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#least-nodes"
  },"688": {
    "doc": "Edges Pathfinding",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#inputs",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#inputs"
  },"689": {
    "doc": "Edges Pathfinding",
    "title": "Seeds &amp; Goals",
    "content": "Each of these input data will be forwarded to the selected Goal Picker. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#seeds--goals",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#seeds--goals"
  },"690": {
    "doc": "Edges Pathfinding",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#outputs",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#outputs"
  },"691": {
    "doc": "Edges Pathfinding",
    "title": "Paths",
    "content": "A point dataset for each path generated. Points in the dataset are ordered linearily from start to end. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html#paths",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html#paths"
  },"692": {
    "doc": "Edges Pathfinding",
    "title": "Edges Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-edges.html",
    "relUrl": "/doc-pathfinding/pathfinding-edges.html"
  },"693": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Plot Navmesh Pathfinding",
    "content": "Sample the navmesh to find a path that goes through multiple chained points. Related . | . Table of content . | Properties | Inputs . | Plots | . | Outputs . | Paths | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#plot-navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#plot-navmesh-pathfinding"
  },"694": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Properties",
    "content": ". Important: Currently, the navigation data used by the node is the one returned by GetDefaultNavDataInstance(); hence it requires a navmesh to be built and loaded at the time of execution. | Property | Description | . | **Settings**| |   | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Add Plot Points to Path | Include plot points positions as part of the output path. | . | Require Naviguable End Location | Ensures the picked goal is close enough to an naviguable location, otherwise doesn’t generate a path. | . | **Post-processing**| |   | . | Fuse Distance | Fuse points in the sampled path that are too close together.*The navigation system may sometimes generate intricate paths which points that are very close to each other, which may or may not be suitable for your usecase. This settings gives you a bit of control over that.* | . | **Blending** | Controls how data is blended on the path points between the Seed and Goal point.*See .* | . Remaining properties are Unreal’ navigation system query specifics. Despite using the right API, they seem to be ignored for the most part, which is something I need to look into. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#properties"
  },"695": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#inputs",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#inputs"
  },"696": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Plots",
    "content": "The plot input supports an unlimited amount of points dataset. Each Plot dataset is interpreted as a list of point that must be connected by a single path, in order, then merged into a single consolidated path. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#plots",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#plots"
  },"697": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#outputs",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#outputs"
  },"698": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Paths",
    "content": "A point dataset for each path generated. Points in the dataset are ordered linearily from start to end. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html#paths",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html#paths"
  },"699": {
    "doc": "Plot Navmesh Pathfinding",
    "title": "Plot Navmesh Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh-plot.html",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh-plot.html"
  },"700": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": "Sample the navmesh to find paths . Table of content . | Properties | Inputs . | Seeds &amp; Goals | . | Outputs . | Paths | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#navmesh-pathfinding",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#navmesh-pathfinding"
  },"701": {
    "doc": "Navmesh Pathfinding",
    "title": "Properties",
    "content": ". Important: Currently, the navigation data used by the node is the one returned by GetDefaultNavDataInstance(); hence it requires a navmesh to be built and loaded at the time of execution. | Property | Description | . | **Settings**| |   | . | Add Seed to Path | Prepends the *seed position* at the beginning of the output path.*This will create a point with the position of the seed.* | . | Add Goal to Path | Appends the *goal position* at the end of the output path.*This will create a point with the position of the goal.* | . | Require Naviguable End Location | Ensures the picked goal is close enough to an naviguable location, otherwise doesn’t generate a path. | . | **Post-processing**| |   | . | Fuse Distance | Fuse points in the sampled path that are too close together.*The navigation system may sometimes generate intricate paths which points that are very close to each other, which may or may not be suitable for your usecase. This settings gives you a bit of control over that.* | . | **Blending** | Controls how data is blended on the path points between the Seed and Goal point.*See .* | . Remaining properties are Unreal’ navigation system query specifics. Despite using the right API, they seem to be ignored for the most part, which is something I need to look into. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#properties",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#properties"
  },"702": {
    "doc": "Navmesh Pathfinding",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#inputs",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#inputs"
  },"703": {
    "doc": "Navmesh Pathfinding",
    "title": "Seeds &amp; Goals",
    "content": "Each of these input data will be forwarded to the selected Goal Picker. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#seeds--goals",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#seeds--goals"
  },"704": {
    "doc": "Navmesh Pathfinding",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#outputs",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#outputs"
  },"705": {
    "doc": "Navmesh Pathfinding",
    "title": "Paths",
    "content": "A point dataset for each path generated. Points in the dataset are ordered linearily from start to end. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html#paths",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html#paths"
  },"706": {
    "doc": "Navmesh Pathfinding",
    "title": "Navmesh Pathfinding",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/pathfinding-navmesh.html",
    "relUrl": "/doc-pathfinding/pathfinding-navmesh.html"
  },"707": {
    "doc": "Blend",
    "title": "Blend",
    "content": "Blend individual points between from paths’ start and end points. Table of content . | Properties | Modules . | Available Modules | . | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#blend",
    "relUrl": "/doc-paths/paths-blend.html#blend"
  },"708": {
    "doc": "Blend",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | **Blending** | This property lets you select which kind of blending you want to apply to the input paths.*See [Available Blending Modules](#available-blending-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#properties",
    "relUrl": "/doc-paths/paths-blend.html#properties"
  },"709": {
    "doc": "Blend",
    "title": "Modules",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#modules",
    "relUrl": "/doc-paths/paths-blend.html#modules"
  },"710": {
    "doc": "Blend",
    "title": "Available  Modules",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#available--modules",
    "relUrl": "/doc-paths/paths-blend.html#available--modules"
  },"711": {
    "doc": "Blend",
    "title": "Interpolate",
    "content": "Interpolate values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#interpolate",
    "relUrl": "/doc-paths/paths-blend.html#interpolate"
  },"712": {
    "doc": "Blend",
    "title": "Inherit First",
    "content": "Copy the first point’ values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#inherit-first",
    "relUrl": "/doc-paths/paths-blend.html#inherit-first"
  },"713": {
    "doc": "Blend",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#inherit-last",
    "relUrl": "/doc-paths/paths-blend.html#inherit-last"
  },"714": {
    "doc": "Blend",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#inputs",
    "relUrl": "/doc-paths/paths-blend.html#inputs"
  },"715": {
    "doc": "Blend",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#in",
    "relUrl": "/doc-paths/paths-blend.html#in"
  },"716": {
    "doc": "Blend",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#outputs",
    "relUrl": "/doc-paths/paths-blend.html#outputs"
  },"717": {
    "doc": "Blend",
    "title": "Out",
    "content": "Same as Inputs with the transformation applied. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html#out",
    "relUrl": "/doc-paths/paths-blend.html#out"
  },"718": {
    "doc": "Blend",
    "title": "Blend",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-blend.html",
    "relUrl": "/doc-paths/paths-blend.html"
  },"719": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": "Fuse collinear points on a path . The Fuse Collinear node removes points that are collinear, with control over thresholds. It can also optionally fuse points based on their proximity. Table of content . | Properties | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#fuse-collinear",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#fuse-collinear"
  },"720": {
    "doc": "Fuse Collinear",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Threshold | Threshold in degree under which the deviation is considered small enough to be collinear. | . | Fuse Distance | In addition to collinearity, this value allows to fuse points that are close enough. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#properties",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#properties"
  },"721": {
    "doc": "Fuse Collinear",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#inputs",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#inputs"
  },"722": {
    "doc": "Fuse Collinear",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#in",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#in"
  },"723": {
    "doc": "Fuse Collinear",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#outputs",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#outputs"
  },"724": {
    "doc": "Fuse Collinear",
    "title": "Out",
    "content": "A smaller dataset for each input dataset. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html#out",
    "relUrl": "/doc-paths/paths-fuse-collinear.html#out"
  },"725": {
    "doc": "Fuse Collinear",
    "title": "Fuse Collinear",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-fuse-collinear.html",
    "relUrl": "/doc-paths/paths-fuse-collinear.html"
  },"726": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": "Create sub-points between existing points . The Subdivide Path nodes create new point between existing ones on a path. Define closure behavior, choose a subdivide method (Distance or Count), and specify an amount. Opt for blending options to refine subpoints further. Table of content . | Properties | Subdivide Method | Modules | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#subdivide",
    "relUrl": "/doc-paths/paths-subdivide.html#subdivide"
  },"727": {
    "doc": "Subdivide",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Closed Path | If enabled, will process input paths as closed, effectively wrapping last and first point. | . | Subdivide Method | Method to be used to define how many points are going to be inserted between existing ones.See [Subdivide Method](#subdivide-method) | . | Distance *or* Count | Based on the method, specifies how many points will be created. | . | **Blending** | This property lets you select which kind of blending you want to apply to the input paths.*See [Available Blending Modules](#available-blending-modules).* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#properties",
    "relUrl": "/doc-paths/paths-subdivide.html#properties"
  },"728": {
    "doc": "Subdivide",
    "title": "Subdivide Method",
    "content": "| Method | Description | . | **Distance** | will create a new point every X units inside existing segments, as specified in the Distance property.*Smaller values will create more points, larger values will create less points.* | . | **Count** | will create X new points for each existing segments, as specified in the Count property. | . Distance will create more uniform looking subdivisions, while Count is more predictable. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#subdivide-method",
    "relUrl": "/doc-paths/paths-subdivide.html#subdivide-method"
  },"729": {
    "doc": "Subdivide",
    "title": "Modules",
    "content": "## . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#modules",
    "relUrl": "/doc-paths/paths-subdivide.html#modules"
  },"730": {
    "doc": "Subdivide",
    "title": "Interpolate",
    "content": "Interpolate values between first and last point. Processed subpoints properties &amp; attributes will lerp between the first and last subpoints. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#interpolate",
    "relUrl": "/doc-paths/paths-subdivide.html#interpolate"
  },"731": {
    "doc": "Subdivide",
    "title": "Inherit First",
    "content": "Copy the first point’ values . Processed subpoints will inherit from the first properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#inherit-first",
    "relUrl": "/doc-paths/paths-subdivide.html#inherit-first"
  },"732": {
    "doc": "Subdivide",
    "title": "Inherit Last",
    "content": "Copy the last point’ values . Processed subpoints will inherit from the last properties &amp; attributes. Nothing fancy about it. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#inherit-last",
    "relUrl": "/doc-paths/paths-subdivide.html#inherit-last"
  },"733": {
    "doc": "Subdivide",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#inputs",
    "relUrl": "/doc-paths/paths-subdivide.html#inputs"
  },"734": {
    "doc": "Subdivide",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#in",
    "relUrl": "/doc-paths/paths-subdivide.html#in"
  },"735": {
    "doc": "Subdivide",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#outputs",
    "relUrl": "/doc-paths/paths-subdivide.html#outputs"
  },"736": {
    "doc": "Subdivide",
    "title": "Out",
    "content": "Same as Inputs with the added subdivisions points. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html#out",
    "relUrl": "/doc-paths/paths-subdivide.html#out"
  },"737": {
    "doc": "Subdivide",
    "title": "Subdivide",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-subdivide.html",
    "relUrl": "/doc-paths/paths-subdivide.html"
  },"738": {
    "doc": "Paths to Edge Clusters",
    "title": "Paths to Edge Clusters",
    "content": "Convert paths to edges clusters. The Paths to Edge Clusters node converts multiple input paths into edge clusters by fusing points but preserving edge relationships. Table of content . | Properties | Inputs . | In | . | Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#paths-to-edge-clusters",
    "relUrl": "/doc-paths/paths-to-edges.html#paths-to-edge-clusters"
  },"739": {
    "doc": "Paths to Edge Clusters",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Fuse Distance | This define the distance at this the points are considered to be identical. | . | **Graph Output Settings** | *See Working with Graphs.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#properties",
    "relUrl": "/doc-paths/paths-to-edges.html#properties"
  },"740": {
    "doc": "Paths to Edge Clusters",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#inputs",
    "relUrl": "/doc-paths/paths-to-edges.html#inputs"
  },"741": {
    "doc": "Paths to Edge Clusters",
    "title": "In",
    "content": "Any number of point datasets assumed to be paths. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#in",
    "relUrl": "/doc-paths/paths-to-edges.html#in"
  },"742": {
    "doc": "Paths to Edge Clusters",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#outputs",
    "relUrl": "/doc-paths/paths-to-edges.html#outputs"
  },"743": {
    "doc": "Paths to Edge Clusters",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs. Reminder that empty inputs will be ignored &amp; pruned. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html#vtx--edges",
    "relUrl": "/doc-paths/paths-to-edges.html#vtx--edges"
  },"744": {
    "doc": "Paths to Edge Clusters",
    "title": "Paths to Edge Clusters",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-to-edges.html",
    "relUrl": "/doc-paths/paths-to-edges.html"
  },"745": {
    "doc": "Write Paths Extras",
    "title": "Write Paths Extras",
    "content": "Compute path extra data . Writes a variety of path statistics such as length, time, normals, centroids etc . Table of content . | Properties | Inputs &amp; Outputs . | Vtx &amp; Edges | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-extras.html#write-paths-extras",
    "relUrl": "/doc-paths/paths-write-extras.html#write-paths-extras"
  },"746": {
    "doc": "Write Paths Extras",
    "title": "Properties",
    "content": ". DOC TDB . | Property | Description | . | **Blending Settings** | When enabled, the edge will inherit properties and attributes from its Start and End point.It uses Interpolate blending under the hood. | . | **Output** | |   | . | **Edge Length** Attribute Name | When enabled, the length of the edge will be written to the specified attribute.*The length of an edge is the distance between its start and end point.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-extras.html#properties",
    "relUrl": "/doc-paths/paths-write-extras.html#properties"
  },"747": {
    "doc": "Write Paths Extras",
    "title": "Inputs &amp; Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-extras.html#inputs--outputs",
    "relUrl": "/doc-paths/paths-write-extras.html#inputs--outputs"
  },"748": {
    "doc": "Write Paths Extras",
    "title": "Vtx &amp; Edges",
    "content": "See Working with Graphs . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-extras.html#vtx--edges",
    "relUrl": "/doc-paths/paths-write-extras.html#vtx--edges"
  },"749": {
    "doc": "Write Paths Extras",
    "title": "Write Paths Extras",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-extras.html",
    "relUrl": "/doc-paths/paths-write-extras.html"
  },"750": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": "Selecting sub-components and fields . Attribute selection are not just names, but also provide additional way to select more specific data from a given attribute. A lot of the nodes in PCGEx allow you to select local values or attributes to further tweak and alter the way data is processed. These selectors inherit from native PCG implementation and support both point properties and attribute names as strings. In PCGEx, this is only supported when reading from attributes, not writing to them. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#attribute-selectors",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#attribute-selectors"
  },"751": {
    "doc": "Attribute Selectors",
    "title": "Component selection",
    "content": "PCG natively support suffixing properties &amp; attribute with selectors, such as .X, .Y, .Z; as shown in the debug view. This means you can safely use $Position.Z inside an attribute selector in order to select the Z value of the Position vector. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#component-selection",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#component-selection"
  },"752": {
    "doc": "Attribute Selectors",
    "title": "Extra Selectors",
    "content": "PCGEx expand a tiny bit on that and support additional properties, depending on the underlying data type: . Note that these extra selectors are not case sensitive, and can be used additively: $Transform.Backward.Length is a valid selectors. | Selector | Data | . | : **Vectors** :| |   | . | | Uses the X component (Vector2D, Vector, Vector4) | . | | Uses the Y component (Vector2D, Vector, Vector4) | . | | Uses the Z component (Vector, Vector4), fallbacks to Y. | . | | Uses the W component (Vector4), fallbacks to Z | . | , , | Uses the length of the vector | . | : **Color** :| |   | . | | Uses the Red value | . | | Uses the Green value | . | | Uses the Blue value | . | | Uses the Alpha value | . | : **Rotators** :| |   | . | , , | Uses the Roll component | . | , , | Uses the Yaw component | . | , , | Uses the Pitch component | . | : **Quaternions &amp; Transforms** :| |   | . | , | Uses the Forward direction vector | . | , | Uses the Backward direction vector | . | | Uses the Right direction vector | . | | Uses the Roll direction vector | . | , | Uses the Up direction vector | . | , | Uses the Down direction vector | . | : **Transforms** :| |   | . | , | Uses the Position component (Vector) | . | , , | Uses the Rotation component (Quaternion) | . | | Uses the Scale component (Vector) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html#extra-selectors",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html#extra-selectors"
  },"753": {
    "doc": "Attribute Selectors",
    "title": "Attribute Selectors",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-attribute-selectors.html",
    "relUrl": "/doc-general/pcgex-attribute-selectors.html"
  },"754": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": "Shared concepts . A summary of the informations &amp; parameters available on every PCGEx node. Almost every node in the PCGEx inherit from the same point processor, and as such they have some shared capabilities. PCGEx has a focus on performance and multithreading – very few nodes are actively computing anything on the main thread, and instead the bulk of the tasks is handled asynchronously; and parallelized whenever possible. This helps keeping the editor relatively smooth when performing heavy tasks. Because of the parallelization, a very few select nodes have non-deterministic outputs; meaning they will yield slightly different results between two runs. These nodes are flagged in the doc. This is something I’m working to fix to ensure all nodes have deterministic results. Common Tweaks . | Performance . | Do Async Processing | Chunk Size | Cache Result | . | Input Pruning &amp; De-duping . | De-duplication | Pruning | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#pcgex-nodes",
    "relUrl": "/doc-general/pcgex-node.html#pcgex-nodes"
  },"755": {
    "doc": "PCGEx Nodes",
    "title": "Performance",
    "content": ". Do Async Processing . Checked by default, you can toggle it off to force synchronous/unparallelized execution of the code. (This is a cheap workaround to ensure deterministic result in nodes that are otherwise non-deterministic due to parallel processing) . Note that synchronous execution still processes data in chunks, it just does it with guaranteed order, as opposed to parallel processing. Chunk Size . The chunk size usually represents the number of point a node will process in a single parallel batch. There is no ideal value: too small and you loose the gain of parallelization, too high and you’re just hogging thread ressources. Ultimately, it depends on your specific setup. A value of -1 fallbacks to that specific’ node default value under the hood. Unreal PCG plugin recommend a minimum batch size of 256, which is the default value I’m using for most of the nodes. Heavier operations can go as low as 32. Cache Result . Under the hood, all PCG node come with the ability to cache their result; but the system is designed so it’s a compile-time choice, not an editor-time one. I exposed the ability to cache on-demand at the price of some harmless asserts, because once you’re done iterating on certain settings, it’s worth caching the results. Be aware that the cache is easily corrupted, and sometime leads to missing points or data; it’s still a small price to pay when you’re working iteratively with hundreds of thousands points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#performance",
    "relUrl": "/doc-general/pcgex-node.html#performance"
  },"756": {
    "doc": "PCGEx Nodes",
    "title": "Input Pruning &amp; De-duping",
    "content": "De-duplication . Datasets are de-duplicated by design in PCGEx – this means that if you plug the exact same data (as in same memory pointer) it will be only processed once – even if it has different tags. Pruning . Datasets that are empty and contains no points will be ignored, and won’t be forwarded to the ouput pins. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html#input-pruning--de-duping",
    "relUrl": "/doc-general/pcgex-node.html#input-pruning--de-duping"
  },"757": {
    "doc": "PCGEx Nodes",
    "title": "PCGEx Nodes",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/pcgex-node.html",
    "relUrl": "/doc-general/pcgex-node.html"
  },"758": {
    "doc": "Goal from Attribute",
    "title": "Goal from Attribute",
    "content": "Match seed with goals picked at an attribute-specified index. Table of content . | Properties | Index Safety | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html#goal-from-attribute"
  },"759": {
    "doc": "Goal from Attribute",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Goal Count | Either a Single Goal or Multiple Goals | . | Attribute | If Single Goal is specified, lets you specify a property or attribute which value will be used as an index within the input goals. | . | Attributes | If Multiple Goal is specified, lets you specify a list of property or attribute which values will be used as an index within the input goals. | . | Index Safety | Failsafe method if the picked Goal index is out of bounds.*See [Index Safety](#index-safety)* | . When using Multiple Goal, each seed will attempt to create one connection per entry in the array. The attribute is fetched on the Seed input. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html#properties"
  },"760": {
    "doc": "Goal from Attribute",
    "title": "Index Safety",
    "content": "The index safety property controls how invalid indices are handled. | Safety method | Description | . | Ignore | Invalid indices will be ignored and won’t be processed further. | . | Tile | Index is tiled (wrapped around) the context’ valid min/max range. | . | Clamp | Index is clamped between the context’ valid min/max range. | . Tiling index means that for a range of [0..10], a value of 11 will be sanitized to 1 and a value of -1 sanitized to 9. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html#index-safety",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html#index-safety"
  },"761": {
    "doc": "Goal from Attribute",
    "title": "Goal from Attribute",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-attribute.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-attribute.html"
  },"762": {
    "doc": "Default",
    "title": "Default",
    "content": "Match seeds to goals at the same index. Table of content . | Properties | Index Safety | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html#default",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html#default"
  },"763": {
    "doc": "Default",
    "title": "Properties",
    "content": ". The default goal picker attempts to match input Seeds and Goals in a 1:1 fashion. Seed index 0 will be matched to goal index 0, and so on. | Property | Description | . | **Settings**| |   | . | Index Safety | Failsafe method if there are more Seeds than there are Goals.Note that extra Goals are simply ignored.*See [Index Safety](#index-safety)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html#properties"
  },"764": {
    "doc": "Default",
    "title": "Index Safety",
    "content": "The index safety property controls how invalid indices are handled. | Safety method | Description | . | Ignore | Invalid indices will be ignored and won’t be processed further. | . | Tile | Index is tiled (wrapped around) the context’ valid min/max range. | . | Clamp | Index is clamped between the context’ valid min/max range. | . Tiling index means that for a range of [0..10], a value of 11 will be sanitized to 1 and a value of -1 sanitized to 9. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html#index-safety",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html#index-safety"
  },"765": {
    "doc": "Default",
    "title": "Default",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-default.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-default.html"
  },"766": {
    "doc": "Random",
    "title": "Random",
    "content": "Match seeds to goals at a random index. Table of content . | Properties | Goal Count . | Single | Multiple Fixed | Multiple Random | . | Index Safety | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#random",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#random"
  },"767": {
    "doc": "Random",
    "title": "Properties",
    "content": ". The random goal picker match each Seed with one or multiple Goals. | Property | Description | . | **Settings**| |   | . | Goal Count | How many random goals each seed should connect to.*See [Index Safety](#index-safety)* | . | Num Goals | When specifying multiple goals, this is the maximum number of goals to connect each seeds to. | . | Index Safety | Failsafe method if the picked Goal index is out of bounds.*See [Index Safety](#index-safety)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#properties",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#properties"
  },"768": {
    "doc": "Random",
    "title": "Goal Count",
    "content": "There are three different methods available: . | Single | Random | Fixed | . Single . Single will, well, connect to a single random goal. Multiple Fixed . Random will connect to a fixed number of random goals, specified in Num Goals. Multiple Random . Random will connect to a random number of random goals. The number of connection will be between 0 and Num Goals . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#goal-count",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#goal-count"
  },"769": {
    "doc": "Random",
    "title": "Index Safety",
    "content": "The index safety property controls how invalid indices are handled. | Safety method | Description | . | Ignore | Invalid indices will be ignored and won’t be processed further. | . | Tile | Index is tiled (wrapped around) the context’ valid min/max range. | . | Clamp | Index is clamped between the context’ valid min/max range. | . Tiling index means that for a range of [0..10], a value of 11 will be sanitized to 1 and a value of -1 sanitized to 9. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html#index-safety",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html#index-safety"
  },"770": {
    "doc": "Random",
    "title": "Random",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/picker-random.html",
    "relUrl": "/doc-pathfinding/goal-pickers/picker-random.html"
  },"771": {
    "doc": "Minimum Spanning Tree",
    "title": "Minimum Spanning Tree",
    "content": "Implementation of Prim’s Minimum Spanning Tree algorithm. Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/prim-mst.html#minimum-spanning-tree",
    "relUrl": "/doc-edges/edges-refine/prim-mst.html#minimum-spanning-tree"
  },"772": {
    "doc": "Minimum Spanning Tree",
    "title": "Properties",
    "content": ". This module offers an implementation of Prim’s algorithm to find the minimum spanning tree of individual clusters. By design, the output is guaranteed to be sanitized (e.g, each cluster will retains its existing connectivity properties). Under the hood, MST leverages the heuristic module – enabling full tweaking of what is considered the “minimum-length” edge. The default settings is the “canon” implementation. | Property | Description | . | Heuristics Modifiers | See 🝰 Heuristic Attribute. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/prim-mst.html#properties",
    "relUrl": "/doc-edges/edges-refine/prim-mst.html#properties"
  },"773": {
    "doc": "Minimum Spanning Tree",
    "title": "Minimum Spanning Tree",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-refine/prim-mst.html",
    "relUrl": "/doc-edges/edges-refine/prim-mst.html"
  },"774": {
    "doc": "Force Directed",
    "title": "Force Directed",
    "content": "Force-directed relaxation . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-force-directed.html#force-directed",
    "relUrl": "/doc-edges/edges-relax/relax-force-directed.html#force-directed"
  },"775": {
    "doc": "Force Directed",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | TBD | See *(Common properties)* | . See Force-directed graph drawing on Wikipedia . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-force-directed.html#properties",
    "relUrl": "/doc-edges/edges-relax/relax-force-directed.html#properties"
  },"776": {
    "doc": "Force Directed",
    "title": "Force Directed",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-force-directed.html",
    "relUrl": "/doc-edges/edges-relax/relax-force-directed.html"
  },"777": {
    "doc": "Laplacian",
    "title": "Laplacian",
    "content": "Laplacian / Poisson relaxation . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-laplacian.html#laplacian",
    "relUrl": "/doc-edges/edges-relax/relax-laplacian.html#laplacian"
  },"778": {
    "doc": "Laplacian",
    "title": "Properties",
    "content": ". Laplacian Relax has no specific properties. The basic gist is it iteratively attempts to “uniformize” the distance between each nodes based on neighboring edges. See Laplacian Relaxation on Wikipedia . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-laplacian.html#properties",
    "relUrl": "/doc-edges/edges-relax/relax-laplacian.html#properties"
  },"779": {
    "doc": "Laplacian",
    "title": "Laplacian",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-edges/edges-relax/relax-laplacian.html",
    "relUrl": "/doc-edges/edges-relax/relax-laplacian.html"
  },"780": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": "Sample points within a spherical range . The Sample Nearest Points node explore points within a range using various methods. Define sampling range, weight targets, and obtain useful attributes. Table of content . | Properties | Sampling Methods | Weighting | Weighting | Inputs . | In | In Targets | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#sample-nearest-points",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#sample-nearest-points"
  },"781": {
    "doc": "Sample Nearest Points",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Sampling**| |   | . | Sample Method | Selects the sampling method. See [Sampling Methods](#sampling-methods). | . | Range Min | Minimum sampling range. | . | Range Max | Maximum sampling range.**Use 0 to sample all targets.** | . Points that are not within range are ignored. If no point is found within the specified range, the sampling for that point will be marked as Usuccessful. | **Weighting**| |   | . | Weight Method | Selects the method used to compute the weight of each target.*See [Weighting](#weighting)*. | . | Weight Over Distance | Curve used to sample the final weight of each target. | . | **Outputs**| |   | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false). | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the point at the sampled location, as an FVector. | . | Normal Source | Which direction to use as an Up vector for the Normal cross-product maths. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Signed Distance** Attribute Name | Writes the signed distance between the point and the sampled location, as a double. | . | Signed Distance Axis | Which axis to use to determine whether the distance is positive or negative (toward/away).*Currently based on point Transform, this will likely change in the future to an attribute selector.* | . | **Angle** Attribute Name | Writes the angle between the point and the sampled location, as a double. | . | Angle Axis | Which axis to use to determine the angle sign/range (toward/away) | . | Angle Range | The output range for the Angle value. | . Based on the selected Sample method, the output values are a weighted average of all the sampled target. See Weighting. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#properties"
  },"782": {
    "doc": "Sample Nearest Points",
    "title": "Sampling Methods",
    "content": "| Method | Description | . | Within Range | Samples all points within the specified range. | . | Closest Target | Sample the single closest target within the specified range. | . | Farthest Target | Sample the single farthest target within the specified range. | . | Target Extents | Reverse the sampling mechanisms so points will sample the targets which Extents contains them.**At the time of writing, will only check targets which position in world space is within range.***It is recommend to use a max range of 0 with this method.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#sampling-methods",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#sampling-methods"
  },"783": {
    "doc": "Sample Nearest Points",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it’s very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#weighting"
  },"784": {
    "doc": "Sample Nearest Points",
    "title": "Weighting",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values – but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#weighting-1",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#weighting-1"
  },"785": {
    "doc": "Sample Nearest Points",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#inputs",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#inputs"
  },"786": {
    "doc": "Sample Nearest Points",
    "title": "In",
    "content": "Points that will sample the input targets. Each point position in world space will be used as a center for a spherical query of the surrounding target points. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#in",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#in"
  },"787": {
    "doc": "Sample Nearest Points",
    "title": "In Targets",
    "content": "A single point group that will be sampled by each point of each dataset pluggued in the In pin. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#in-targets",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#in-targets"
  },"788": {
    "doc": "Sample Nearest Points",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#outputs",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#outputs"
  },"789": {
    "doc": "Sample Nearest Points",
    "title": "Out",
    "content": "Same as input, with additional metadata. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html#out",
    "relUrl": "/doc-sampling/sampling-nearest-point.html#out"
  },"790": {
    "doc": "Sample Nearest Points",
    "title": "Sample Nearest Points",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-point.html",
    "relUrl": "/doc-sampling/sampling-nearest-point.html"
  },"791": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": "Sample informations from the nearest polyline . The Sample Nearest Polyline node explore polylines within a range using various methods. Define sampling range, weight targets, and obtain useful attributes. Table of content . | Properties | Sampling Methods | Weighting | Weighting | Inputs . | In | In Targets | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#sample-nearest-polyline",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#sample-nearest-polyline"
  },"792": {
    "doc": "Sample Nearest Polyline",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. Each polyline will yield a single sample point: the closest point on the closest segment, within the specified range. | Property | Description | . | **Sampling**| |   | . | Sample Method | Selects the sampling method. See [Sampling Methods](#sampling-methods). | . | Range Min | Minimum sampling range. | . | Range Max | Maximum sampling range.**Use 0 to sample all segments.** | . Segments that are not within range are ignored. If no polyline segment is found within the specified range, the sampling for that point will be marked as Usuccessful. | **Weighting**| |   | . | Weight Method | Selects the method used to compute the weight of each target.*See [Weighting](#weighting)*. | . | Weight Over Distance | Curve used to sample the final weight of each target. | . | **Outputs**| |   | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false). | . | **Location** Attribute Name | Writes the location sampled on the polyline, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the location sampled on the polyline, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the point at the location sampled on the polyline, as an FVector. | . | Normal Source | Which direction to use as an Up vector for the Normal cross-product maths. | . | **Distance** Attribute Name | Writes the distance between the point and the location sampled on the polyline, as a double. | . | **Signed Distance** Attribute Name | Writes the signed distance between the point and the location sampled on the polyline, as a double. | . | Signed Distance Axis | Which axis to use to determine whether the distance is positive or negative (toward/away).*Currently based on point Transform, this will likely change in the future to an attribute selector.* | . | **Angle** Attribute Name | Writes the angle between the point and the transform sampled on the polyline, as a double. | . | Angle Axis | Which axis to use to determine the angle sign/range (toward/away) | . | Angle Range | The output range for the Angle value. | . | **Time** Attribute Name | Writes the time (*in Spline terms*) of the location sampled on the polyline, as a double. | . Based on the selected Sample method, the output values are a weighted average of all the sampled positions. See Weighting. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#properties"
  },"793": {
    "doc": "Sample Nearest Polyline",
    "title": "Sampling Methods",
    "content": "| Method | Description | . | Within Range | Samples all polylines within the specified range. | . | Closest Target | Sample the single closest polyline within the specified range. | . | Farthest Target | Sample the single farthest polyline within the specified range. | . | Target Extents | Reverse the sampling mechanisms so points will sample the targets which Extents contains them.**At the time of writing, will only check targets which position in world space is within range.***It is recommend to use a max range of 0 with this method.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#sampling-methods",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#sampling-methods"
  },"794": {
    "doc": "Sample Nearest Polyline",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it’s very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#weighting",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#weighting"
  },"795": {
    "doc": "Sample Nearest Polyline",
    "title": "Weighting",
    "content": ". Note that the Effective Range method tends to spread/scale the input set of values – but allows one to leverage the full range of the curve no matter the min/max input values. Hence, using Full Range with only high (or low) input value will only sample a very narrow portion of the curve. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#weighting-1",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#weighting-1"
  },"796": {
    "doc": "Sample Nearest Polyline",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#inputs",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#inputs"
  },"797": {
    "doc": "Sample Nearest Polyline",
    "title": "In",
    "content": "Points that will sample the input targets. Each point position in world space will be used as a center for a spherical query of the surrounding polylines’ segments. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#in",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#in"
  },"798": {
    "doc": "Sample Nearest Polyline",
    "title": "In Targets",
    "content": "Any number of polylines that will be sampled by each point of each dataset pluggued in the In pin. Sampling target location for each target polyline is the closest point on the closest segment. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#in-targets",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#in-targets"
  },"799": {
    "doc": "Sample Nearest Polyline",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#outputs",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#outputs"
  },"800": {
    "doc": "Sample Nearest Polyline",
    "title": "Out",
    "content": "Same as input, with additional metadata. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html#out",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html#out"
  },"801": {
    "doc": "Sample Nearest Polyline",
    "title": "Sample Nearest Polyline",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-polyline.html",
    "relUrl": "/doc-sampling/sampling-nearest-polyline.html"
  },"802": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": "Sample information from the nearest mesh collision . The Sample Nearest Points node fetches all collisions within a given radius, and find the closest point on the closest collision. Works with simple colliders only. This node works with collisions and as such can be very expensive on large datasets. Table of content . | Properties | Collision Types . | Channel | . | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#sample-nearest-surface",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#sample-nearest-surface"
  },"803": {
    "doc": "Sample Nearest Surface",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Settings**| |   | . | Max Distance | Maximum surface search distance. | . | Local Max Distance | If enabled, will use a local property or attribute as Max Distance. | . | **Outputs**| |   | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false).*Sampling is considered unsuccessful if there was no point within the specified range.* | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the surface at the sampled, as an FVector. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Collision Settings**| |   | . | Max Distance | The maximum distance to search for a collision, from the point location in world space.*In other words, the radius of the query sphere.* | . | Collision Type | The type of collison to sample.*See [Collision Types](#collision-types)*. | . | Collision Details | Additional properties are available based on the selected Collision Type. | . | Ignore Self | Ignore the Actor owning the outer PCG graph. | . | Ignored Actor Selector | In-depth actor filtering.*Uses native PCG’ actor filter. See Unreal documentation.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#properties",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#properties"
  },"804": {
    "doc": "Sample Nearest Surface",
    "title": "Collision Types",
    "content": "Channel . | **Extra properties**| |   | . | **Channel**| |   | . | Collision Channel | Project-specific. Selects a single collision channel to test against. | . | **Object Type**| |   | . | Collision Object Type | Same as Collision Channel, but work with a **flag**, allowing for a combination of types to test against. | . | **Profile**| |   | . | Collision Profile Name | Name of the collision profile to test against. | . Important note: under the hood this find the closest point on the closest collider – this feature is only supported for simple collider and won’t work on complex ones. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#collision-types",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#collision-types"
  },"805": {
    "doc": "Sample Nearest Surface",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#inputs",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#inputs"
  },"806": {
    "doc": "Sample Nearest Surface",
    "title": "In",
    "content": "Points that will sample the environment for collision. Each point position in world space will be used as a center for a spherical query of the surrounding collisons. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#in",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#in"
  },"807": {
    "doc": "Sample Nearest Surface",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#outputs",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#outputs"
  },"808": {
    "doc": "Sample Nearest Surface",
    "title": "Out",
    "content": "Same as input, with additional metadata. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html#out",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html#out"
  },"809": {
    "doc": "Sample Nearest Surface",
    "title": "Sample Nearest Surface",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-nearest-surface.html",
    "relUrl": "/doc-sampling/sampling-nearest-surface.html"
  },"810": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": "Sample environment using line casting . The Guided Trace node performs a single line trace for each point, using a local attribute or property as direction &amp; size. This node works with collisions and as such can be very expensive on large datasets. Table of content . | Properties | Collision Types . | Channel | . | Inputs . | In | . | Outputs . | Out | . | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#guided-trace",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#guided-trace"
  },"811": {
    "doc": "Guided Trace",
    "title": "Properties",
    "content": ". Each output property is written individually for each point. | Property | Description | . | **Settings**| |   | . | Direction | Select which property or attribute should be used as direction for the line trace. | . | Max Distance | Maximum trace distance. | . | Local Max Distance | If enabled, will use a local property or attribute as Max Distance. | . | **Outputs**| |   | . | **Success** Attribute Name | Writes a boolean attribute to each point specifying whether the sampling has been successful (true) or not (false).*Sampling is considered unsuccessful if there was no point within the specified range.* | . | **Location** Attribute Name | Writes the sampled location, as an FVector. | . | **Look at** Attribute Name | Writes the direction from the point to the sampled location, as an FVector. | . | **Normal** Attribute Name | Writes the normal of the surface at the sampled, as an FVector. | . | **Distance** Attribute Name | Writes the distance between the point and the sampled location, as a double. | . | **Collision Settings**| |   | . | Max Distance | The maximum distance to search for a collision, from the point location in world space.*In other words, the radius of the query sphere.* | . | Collision Type | The type of collison to sample.*See [Collision Types](#collision-types)*. | . | Collision Details | Additional properties are available based on the selected Collision Type. | . | Ignore Self | Ignore the Actor owning the outer PCG graph. | . | Ignored Actor Selector | In-depth actor filtering.*Uses native PCG’ actor filter. See Unreal documentation.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#properties",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#properties"
  },"812": {
    "doc": "Guided Trace",
    "title": "Collision Types",
    "content": "Channel . | **Extra properties**| |   | . | **Channel**| |   | . | Collision Channel | Project-specific. Selects a single collision channel to test against. | . | **Object Type**| |   | . | Collision Object Type | Same as Collision Channel, but work with a **flag**, allowing for a combination of types to test against. | . | **Profile**| |   | . | Collision Profile Name | Name of the collision profile to test against. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#collision-types",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#collision-types"
  },"813": {
    "doc": "Guided Trace",
    "title": "Inputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#inputs",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#inputs"
  },"814": {
    "doc": "Guided Trace",
    "title": "In",
    "content": "Points that will sample the environment for collision. Each point position in world space will be used as a center for a spherical query of the surrounding collisons. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#in",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#in"
  },"815": {
    "doc": "Guided Trace",
    "title": "Outputs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#outputs",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#outputs"
  },"816": {
    "doc": "Guided Trace",
    "title": "Out",
    "content": "Same as input, with additional metadata. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html#out",
    "relUrl": "/doc-sampling/sampling-surface-guided.html#out"
  },"817": {
    "doc": "Guided Trace",
    "title": "Guided Trace",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-sampling/sampling-surface-guided.html",
    "relUrl": "/doc-sampling/sampling-surface-guided.html"
  },"818": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": "A* Algorithm . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-astar.html#a-star",
    "relUrl": "/doc-pathfinding/search/search-astar.html#a-star"
  },"819": {
    "doc": "A* Star",
    "title": "Properties",
    "content": ". A* on Wikipedia . DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-astar.html#properties",
    "relUrl": "/doc-pathfinding/search/search-astar.html#properties"
  },"820": {
    "doc": "A* Star",
    "title": "A* Star",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-astar.html",
    "relUrl": "/doc-pathfinding/search/search-astar.html"
  },"821": {
    "doc": "Contours",
    "title": "Contours",
    "content": "Contours . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-contours.html#contours",
    "relUrl": "/doc-pathfinding/search/search-contours.html#contours"
  },"822": {
    "doc": "Contours",
    "title": "Properties",
    "content": ". Contrary to regular search algorithms, Contours only traverse edge contours and ignores modifiers. DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-contours.html#properties",
    "relUrl": "/doc-pathfinding/search/search-contours.html#properties"
  },"823": {
    "doc": "Contours",
    "title": "Contours",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-contours.html",
    "relUrl": "/doc-pathfinding/search/search-contours.html"
  },"824": {
    "doc": "Dijkstra",
    "title": "Dijkstra",
    "content": "Dijkstra’s Algorithm . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-djikstra.html#dijkstra",
    "relUrl": "/doc-pathfinding/search/search-djikstra.html#dijkstra"
  },"825": {
    "doc": "Dijkstra",
    "title": "Properties",
    "content": ". Dijkstra on Wikipedia . DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-djikstra.html#properties",
    "relUrl": "/doc-pathfinding/search/search-djikstra.html#properties"
  },"826": {
    "doc": "Dijkstra",
    "title": "Dijkstra",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/search/search-djikstra.html",
    "relUrl": "/doc-pathfinding/search/search-djikstra.html"
  },"827": {
    "doc": "settings-blending",
    "title": "Blending Settings",
    "content": "WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending.html#blending-settings",
    "relUrl": "/settings/settings-blending.html#blending-settings"
  },"828": {
    "doc": "settings-blending",
    "title": "settings-blending",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-blending.html",
    "relUrl": "/settings/settings-blending.html"
  },"829": {
    "doc": "settings-edge-types",
    "title": "Edge Types Settings",
    "content": "The Edge Types Settings allows you to choose which type or quality of edges you want to work with. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-edge-types.html#edge-types-settings",
    "relUrl": "/settings/settings-edge-types.html#edge-types-settings"
  },"830": {
    "doc": "settings-edge-types",
    "title": "settings-edge-types",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-edge-types.html",
    "relUrl": "/settings/settings-edge-types.html"
  },"831": {
    "doc": "settings-extra-weight",
    "title": "settings-extra-weight",
    "content": "| **Extra Weighting**| |   | . | Weight up Visited | If enabled, points and edges will accumulate additional weight are paths are found.This allows you to make \"already in use\" points &amp; edges either more or less desirable for the next internal execution. | . | Visited Points Weight Factor | The weight to add to points that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time a point is used.* | . | Visited Edges Weight Factor | The weight to add to edges that have been visited. This is a multiplier of the Heuristic’ Modifiers Reference Weight.*The weight is added each time an edge is used.* | . Important note on weighting up visited Vtx and Edges: . | The weight is only computed for the pathfinding node and isn’t carried over or cached. | Enabling this feature breaks parallelism. Task are still ran asynchronously, but each path must wait for the previous one to be computed. Impact is usually negligible, but if you have lots of paths, it may take noticeably more time to process. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-extra-weight.html",
    "relUrl": "/settings/settings-extra-weight.html"
  },"832": {
    "doc": "settings-graph-output",
    "title": "Graph Output Settings",
    "content": "WIP . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-graph-output.html#graph-output-settings",
    "relUrl": "/settings/settings-graph-output.html#graph-output-settings"
  },"833": {
    "doc": "settings-graph-output",
    "title": "settings-graph-output",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-graph-output.html",
    "relUrl": "/settings/settings-graph-output.html"
  },"834": {
    "doc": "settings-index-safety",
    "title": "Index Safety",
    "content": "The index safety property controls how invalid indices are handled. | Safety method | Description | . | Ignore | Invalid indices will be ignored and won’t be processed further. | . | Tile | Index is tiled (*wrapped around*) the context’ valid min/max range. | . | Clamp | Index is clamped between the context’ valid min/max range. | . Tiling index means that for a range of [0..10], a value of 11 will be sanitized to 1 and a value of -1 sanitized to 9. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/settings-index-safety.html#index-safety",
    "relUrl": "/doc-pathfinding/goal-pickers/settings-index-safety.html#index-safety"
  },"835": {
    "doc": "settings-index-safety",
    "title": "settings-index-safety",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-pathfinding/goal-pickers/settings-index-safety.html",
    "relUrl": "/doc-pathfinding/goal-pickers/settings-index-safety.html"
  },"836": {
    "doc": "settings-projection",
    "title": "Projection Settings",
    "content": "The projection settings control how the point position is translated to a 2D space before the graph is computed; and how this projection will translate back to the original space, if relevant. | Property | Description | . | Projection Normal | Normal vector of the plane used for projection.By default, the projection plan normal is Up; so the graph is computed over the X Y plane. | . | Local Projection Normal | If enabled, uses a per-point projection vector. | . Local projection normal is very powerful but can also be very clunky to use – it’s very easy to end up with singularities that will prevent the graph from being properly computed. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-projection.html#projection-settings",
    "relUrl": "/settings/settings-projection.html#projection-settings"
  },"837": {
    "doc": "settings-projection",
    "title": "settings-projection",
    "content": ". ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-projection.html",
    "relUrl": "/settings/settings-projection.html"
  },"838": {
    "doc": "settings-statistics",
    "title": "settings-statistics",
    "content": "| **Statistics** | |   | . | — | ![wip](https://img.shields.io/badge/WIP-c8860e) | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-statistics.html",
    "relUrl": "/settings/settings-statistics.html"
  },"839": {
    "doc": "settings-weighting",
    "title": "Weighting",
    "content": "There is two weighting method available. Full Range and Effective Range. Each method outputs a [0..1] value that will be used to sample the Weight Over Distance curve. However, there is a critical nuance between the two: . | Full Range is a simple normalization, each target distance is divided by the longest one. As such, it’s very unlikely the curve will get sampled close to x=0. | Effective Range remaps each target distance using the shortest &amp; longest distance as min/max. As such, the shortest sampled distance will sample the curve at x=0, and the longest at x=1. | . Important note: when using the Within range sample method, some outputs will use the final weighted position/transforms for their calculations; although mathematically correct, this may yield unusuable/innacurate results. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-weighting.html#weighting",
    "relUrl": "/settings/settings-weighting.html#weighting"
  },"840": {
    "doc": "settings-weighting",
    "title": "settings-weighting",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/settings/settings-weighting.html",
    "relUrl": "/settings/settings-weighting.html"
  },"841": {
    "doc": "🝱 Simple Solver",
    "title": "🝱 Simple Solver",
    "content": "A simple custom graph solver, searching connections using sockets. The simple solver search for a connection in each socket direction, and favors the closest match. DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/simple-solver.html#simple-solver",
    "relUrl": "/doc-custom-graphs/custom-graph-build/simple-solver.html#simple-solver"
  },"842": {
    "doc": "🝱 Simple Solver",
    "title": "🝱 Simple Solver",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/simple-solver.html",
    "relUrl": "/doc-custom-graphs/custom-graph-build/simple-solver.html"
  },"843": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": "Index-based moving-average sampling . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html#moving-average",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html#moving-average"
  },"844": {
    "doc": "Moving Average",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | Window Size | The number of leading &amp; trailing points to sample.*The larger the window, the more uniform the result.* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html#properties",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html#properties"
  },"845": {
    "doc": "Moving Average",
    "title": "Moving Average",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-moving-average.html",
    "relUrl": "/doc-paths/paths-smooth/smoothing-moving-average.html"
  },"846": {
    "doc": "Radius",
    "title": "Radius",
    "content": "Radius &amp; position-based sampling . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html#radius",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html#radius"
  },"847": {
    "doc": "Radius",
    "title": "Properties",
    "content": ". Note that because of how the maths works for this module, it can be used with any input data: whether the points are ordered as paths or not doesn’t matter. | Property | Description | . | **Settings**| |   | . | Blend Radius | Radius within which neighbor points will be sampled. | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html#properties",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html#properties"
  },"848": {
    "doc": "Radius",
    "title": "Radius",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-smooth/smoothing-radius.html",
    "relUrl": "/doc-paths/paths-smooth/smoothing-radius.html"
  },"849": {
    "doc": "🝘 Sort Rule",
    "title": "🝘 Sort Rule",
    "content": "An individual sorting rule . TBD . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html#sort-rule",
    "relUrl": "/doc-misc/sort-points/sort-rule.html#sort-rule"
  },"850": {
    "doc": "🝘 Sort Rule",
    "title": "Properties",
    "content": ". DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html#properties",
    "relUrl": "/doc-misc/sort-points/sort-rule.html#properties"
  },"851": {
    "doc": "🝘 Sort Rule",
    "title": "🝘 Sort Rule",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-misc/sort-points/sort-rule.html",
    "relUrl": "/doc-misc/sort-points/sort-rule.html"
  },"852": {
    "doc": "Auto Tangents",
    "title": "Auto Tangents",
    "content": "Neighbor-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html#auto-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html#auto-tangents"
  },"853": {
    "doc": "Auto Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html#properties"
  },"854": {
    "doc": "Auto Tangents",
    "title": "Auto Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-auto.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-auto.html"
  },"855": {
    "doc": "Custom Tangents",
    "title": "Custom Tangents",
    "content": "Custom attribute-based tangents . Table of content . | Properties | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html#custom-tangents",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html#custom-tangents"
  },"856": {
    "doc": "Custom Tangents",
    "title": "Properties",
    "content": ". | Property | Description | . | **Settings**| |   | . | TBD | See *(Common properties)* | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html#properties",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html#properties"
  },"857": {
    "doc": "Custom Tangents",
    "title": "Custom Tangents",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-paths/paths-write-tangents/tangent-custom.html",
    "relUrl": "/doc-paths/paths-write-tangents/tangent-custom.html"
  },"858": {
    "doc": "🝱 Weighted Solver",
    "title": "🝱 Weighted Solver",
    "content": "A curve-based custom graph solver, searching connections using sockets. The weighted solver search for a connection in each socket direction, and favors either better alignment or shorter distance based on a weight curve. DOC TDB . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/weighted-solver.html#weighted-solver",
    "relUrl": "/doc-custom-graphs/custom-graph-build/weighted-solver.html#weighted-solver"
  },"859": {
    "doc": "🝱 Weighted Solver",
    "title": "🝱 Weighted Solver",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-custom-graphs/custom-graph-build/weighted-solver.html",
    "relUrl": "/doc-custom-graphs/custom-graph-build/weighted-solver.html"
  },"860": {
    "doc": "Working with Graphs",
    "title": "Working with Graphs",
    "content": "Vtx? Edges? . A summary of what “graph” means and entails in the context of PCGEx. One of the main focus of PCGEx is working with graphs and edge-based structures. They’re akin to a mesh without faces: a bunch of vertices connected by a bunch of edges. PCGEx leverage PCG’ point data as data holders in order to enable easy tweaking and manipulation of edge/vertice data using existing vanilla nodes. In short, a graph is represented by at least two separate set of points: the first, Vtx represent individual vertices; others, Edges, represent interconnected clusters. Edges points stores the indices of their start and end point in the matching Vtx group. Because of that approach, nodes that work with graph require Vtx and Edges as separate inputs. Data Tags are used to mark which edges match which vertices, so you will see additional tags appear on your data, formatted as PCGEx/Cluster::UID. Rule of thumb : If you manually alter (as in add or remove points) the content of a Vtx or Edges created by a PCGEx Node, make sure to use the Sanitize Clusters node before using them as inputs for other PCGEx nodes. Checklist . | Vtx . | Cached Index | Cached Edge Num | . | Edges . | Edge Start | Edge End | . | Clusters | Graph Output Settings 📌 | Important Notes | . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#working-with-graphs",
    "relUrl": "/doc-general/working-with-graphs.html#working-with-graphs"
  },"861": {
    "doc": "Working with Graphs",
    "title": "Vtx",
    "content": "A Vtx has two important piece of data written on it, and their position in space is relied upon for edge metrics – Vtx being edges’ start and end points. Cached Index . The PCGEx/CachedIndex attribute hold the index of the Vtx when it was written into a graph. This is the index PCGEx/EdgeStart and PCGEx/EdgeEnd refers to on the Edges points. It is primarily useful to know whether the vtx structure has been altered or not, and ensure the graph is safe to use to avoid exceptions. Cached Edge Num . The PCGEx/CachedEdgeNum attribute hold the number of edges connected to that Vtx when it was written into a graph. It is solely used for validation purposes when rebuilding a cluster to process it. Note that this attribute can be reliably fetched to know how many unique edges are connected to a Vtx ;) . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#vtx",
    "relUrl": "/doc-general/working-with-graphs.html#vtx"
  },"862": {
    "doc": "Working with Graphs",
    "title": "Edges",
    "content": "Rule of thumb : The only information that matter on Edges for graphs is their start and end attribute. Their position in space is ignored so feel free to use those points if they can be relevant to you. Edges have two important piece of data written on them, and everything else is pretty much ignored by PCGEx – meaning you can use the set of point almost as you see fit. Edge Start . The PCGEx/EdgeStart attribute hold the cached index of its start Vtx when it was written into a graph. Edge End . The PCGEx/EdgeEnd attribute hold the cached index of its end Vtx when it was written into a graph. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#edges",
    "relUrl": "/doc-general/working-with-graphs.html#edges"
  },"863": {
    "doc": "Working with Graphs",
    "title": "Clusters",
    "content": "In PCGEx terms, a cluster is “a set of Vtx and Edges that are interconnected in a finite way” – in other words, there is a guaranteed way inside a cluster that a path can be found between any Vtx to any other Vtx when passing through Edges. A graph usually has a single set of vertices, but will output as many edge datasets as there are clusters. These will be then rebuilt inside the nodes to be processed. If you’re unhappy with how clusters have been split in your graph, Bridge Clusters is here to save your day! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#clusters",
    "relUrl": "/doc-general/working-with-graphs.html#clusters"
  },"864": {
    "doc": "Working with Graphs",
    "title": "Graph Output Settings 📌",
    "content": ". This is a setting block you will see in a form or another on nodes that output sanitized graphs. They expose controls/filters over the Vtx/Edges output of the node to make sure the output is sanitized, i.e, that it can be safely traversed by pathfinding search algorithms. See the Sanitize Clusters node for more infos, as it encapsulate the sanitization behavior embedded in many other nodes. If you want more fleshed out controls over Edges data &amp; positioning, check out Node! . ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#graph-output-settings-",
    "relUrl": "/doc-general/working-with-graphs.html#graph-output-settings-"
  },"865": {
    "doc": "Working with Graphs",
    "title": "Important Notes",
    "content": "Altering PCGEx/CachedIndex, PCGEx/CachedEdgeNum, PCGEx/EdgeStart or PCGEx/EdgeEnd voids the guarantee that PCGEx nodes will work as expected. The UID used for the tagging is NOT deterministic, and will change at each execution of the graph, and for each node. It is used under the hood only, and should not be edited, nor relied upon for any kind of tag-related operations. For the same reason, if you create custom tags starting with PCGEx/Cluster::, it will break existing vtx/edge associations. Because of the reliance on the tagging system, if you edit Vtx and Edges before using them with a PCGEx node, make sure tags are preserved. ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html#important-notes",
    "relUrl": "/doc-general/working-with-graphs.html#important-notes"
  },"866": {
    "doc": "Working with Graphs",
    "title": "Working with Graphs",
    "content": " ",
    "url": "https://nebukam.github.io/PCGExtendedToolkit/doc-general/working-with-graphs.html",
    "relUrl": "/doc-general/working-with-graphs.html"
  }
}
